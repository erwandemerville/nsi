{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Num\u00e9rique et sciences informatiques","text":""},{"location":"#numerique-et-sciences-informatiques","title":"Num\u00e9rique et sciences informatiques","text":"<p>Bienvenue, ici vous retrouverez tous les cours, exercices, activit\u00e9s et \u00e9valuations r\u00e9alis\u00e9s dans le cadre de la sp\u00e9cialit\u00e9 NSI (premi\u00e8re et terminale).</p> <p>En cas de questionnements concernant un cours, un exercice, ou quoi que ce soit, n'h\u00e9sitez pas \u00e0 me contacter via la messagerie de l'ENT.</p> <p>Programmes officiels</p> <ul> <li>Programme de premi\u00e8re NSI</li> <li>Programme de terminale NSI</li> </ul>"},{"location":"#nsi-premiere","title":"NSI premi\u00e8re","text":"Liste des contenus Description Les bases du langage Python Les bases du langage Python. Repr\u00e9sentation des donn\u00e9es en machine Repr\u00e9sentation des entiers, r\u00e9els, encodage du texte... Architecture mat\u00e9rielle Circuits logiques, alg\u00e8bre de Boole, mod\u00e8le de Von Neumann... Algorithmique Algorithmes et leur impl\u00e9mentation en langage Python (recherche s\u00e9quentielle, recherche dichotomique, algorithmes de tri...) Traitement des donn\u00e9es en tables Traitement des donn\u00e9es en tables. Interactions Homme-Machine sur le web Interactions Homme-Machine sur le web  Le module Pyxel Activit\u00e9s et projet autour du module de cr\u00e9ation de jeux vid\u00e9o Pyxel."},{"location":"#nsi-terminale","title":"NSI terminale","text":"Liste des contenus Description Modularit\u00e9 Cr\u00e9ation et utilisation de modules et d'API. Mise au point des programmes Types de donn\u00e9es, annotations, tests... Programmation orient\u00e9e objet D\u00e9couverte des classes en Python. R\u00e9cursivit\u00e9 Utilisation de la r\u00e9cursivit\u00e9 en langage Python. Les listes cha\u00een\u00e9es Structure de liste cha\u00een\u00e9e et impl\u00e9mentation. Piles et files Structures de piles et de files et impl\u00e9mentations. Les arbres Arbres, arbres binaires et arbres binaires de recherche. Protocoles de routage Protocoles de routage RIP et OSPF. Recherche textuelle Algorithmes de recherche dans un texte.  Sujet e3c de rentr\u00e9e corrig\u00e9 Le sujet d'e3c de rentr\u00e9e avec correction d\u00e9taill\u00e9e.  R\u00e9visions / Entra\u00eenement Python Quelques exercices pour vous exercer au langage Python.  Le module Pyxel Activit\u00e9s et projet autour du module de cr\u00e9ation de jeux vid\u00e9o Pyxel."},{"location":"rendus/","title":"Rendu des travaux","text":""},{"location":"rendus/#rendu-des-travaux","title":"Rendu des travaux","text":"<p>Les travaux demand\u00e9s (fichiers Python, TP, activit\u00e9s, etc.) sont \u00e0 rendre sur le parcours \u00c9l\u00e9a.</p> <p>Acc\u00e9der \u00e0 \u00c9l\u00e9a</p> <p>Vous pouvez acc\u00e9der \u00e0 \u00c9l\u00e9a :</p> <ul> <li>soit en cliquant ici et en vous connectant en choisissant <code>ENT Hauts-de-France</code> dans la liste d\u00e9roulante, </li> <li>soit en vous connectant \u00e0 votre ENT et en ouvrant l'application \u00c9l\u00e9a \u00e0 partir de votre liste des applications :</li> </ul> <p></p> <p>Nommage des fichiers</p> <ul> <li>Afin d'\u00e9viter les confusions, pensez \u00e0 renommer vos fichiers en y ajoutant votre nom. Par exemple, si vous souhaitez rendre un script Python nomm\u00e9 <code>programme.py</code>, renommez-le en <code>&lt;VOTRE_NOM&gt;_programme.py</code>.</li> <li>Si votre travail contient plusieurs fichiers, cr\u00e9ez une archive ZIP contenant tous vos fichiers et dont le nom sera de la forme <code>&lt;VOTRE_NOM&gt;_&lt;NOM_ARCHIVE&gt;.zip</code>. Pour cr\u00e9er une archive ZIP sur Windows : s\u00e9lectionnez les fichiers \u00e0 archiver, puis faites un clic droit <code>Envoyer vers</code> <code>Dossier compress\u00e9</code>.</li> </ul> Autre m\u00e9thode de rendu - UNIQUEMENT EN CAS DE SOUCIS AVEC \u00c9L\u00c9A <p>Cette m\u00e9thode de rendu n'est \u00e0 utiliser que si vous ne pouvez pas acc\u00e9der au parcours \u00c9l\u00e9a !</p> <p>Cliquez sur le bouton correspondant \u00e0 votre classe pour acc\u00e9der \u00e0 la page de t\u00e9l\u00e9versement :</p> <p>Vous devez activer JavaScript pour que cette page fonctionne correctement !</p> <p>Premi\u00e8re Terminale</p>"},{"location":"premiere/","title":"NSI - Premi\u00e8re","text":""},{"location":"premiere/#nsi-premiere","title":"NSI - Premi\u00e8re","text":"Liste des contenus Description Les bases du langage Python Les bases du langage Python. Repr\u00e9sentation des donn\u00e9es en machine Repr\u00e9sentation des entiers, r\u00e9els, encodage du texte... Architecture mat\u00e9rielle Circuits logiques, alg\u00e8bre de Boole, mod\u00e8le de Von Neumann... Algorithmique Algorithmes et leur impl\u00e9mentation en langage Python (recherche s\u00e9quentielle, recherche dichotomique, algorithmes de tri...) Traitement des donn\u00e9es en tables Traitement des donn\u00e9es en tables. Interactions Homme-Machine sur le web Interactions Homme-Machine sur le web  Le module Pyxel Activit\u00e9s et projet autour du module de cr\u00e9ation de jeux vid\u00e9o Pyxel."},{"location":"premiere/algorithmique/","title":"Algorithmique","text":""},{"location":"premiere/algorithmique/#algorithmique","title":"Algorithmique","text":"Liste des contenus Description Recherche s\u00e9quentielle La recherche s\u00e9quentielle en langage Python."},{"location":"premiere/algorithmique/rechercheseq/","title":"Recherche s\u00e9quentielle","text":""},{"location":"premiere/algorithmique/rechercheseq/#algorithmes-de-recherche-sequentielle","title":"Algorithmes de recherche s\u00e9quentielle","text":"<p>(En construction...)</p>"},{"location":"premiere/archi/","title":"Architecture mat\u00e9rielle","text":""},{"location":"premiere/archi/#architecture-materielle","title":"Architecture mat\u00e9rielle","text":"Liste des contenus Description Introduction \u00e0 la logique bool\u00e9enne Cours d'introduction \u00e0 la logique bool\u00e9enne. Fonctions et expressions bool\u00e9ennes Cours et exercices sur les fonctions et expressions bool\u00e9ennes. Les circuits logiques Cours sur les circuits logiques."},{"location":"premiere/archi/circuits/","title":"Les circuits logiques","text":"Ressources <ul> <li>frederic-junier.gitlab.io</li> </ul>"},{"location":"premiere/archi/circuits/#les-circuits-logiques","title":"Les circuits logiques","text":"<p>Ce cours fait suite au cours d'introduction \u00e0 la logique bool\u00e9enne et au cours sur les fonctions et expressions bool\u00e9ennes. N'h\u00e9sitez pas \u00e0 relire ces cours si besoin.</p>"},{"location":"premiere/archi/circuits/#tp-circuits-logiques-avec-logisim","title":"TP - Circuits logiques avec Logisim","text":"<p>Pour introduire ce chapitre, voici un TP \u00e0 travers lequel vous r\u00e9aliserez des circuits logiques \u00e0 l'aide du logiciel Logisim.</p> <p>T\u00e9l\u00e9charger le TP</p> <p>Tout d'abord, vous devez t\u00e9l\u00e9charger l'application Logisim. Il s'agit ici d'une version portable, t\u00e9l\u00e9chargez et d\u00e9zippez l'archive <code>logisim.zip</code> dans votre dossier de travail. Ensuite, il ne vous reste qu'\u00e0 ex\u00e9cuter <code>logisim-evolution.exe</code> pour lancer l'application.</p> <p></p>  T\u00e9l\u00e9charger <code>logisim.zip</code> <p>T\u00e9l\u00e9chargez ensuite les deux fichiers suivants :</p> <ul> <li>NSI_Circuits_Logiques.pdf - \u00c9nonc\u00e9 du TP au format PDF.</li> <li>Doc_reponses_TP_Logisim.odt - document vous permettant de r\u00e9pondre aux questions du TP.</li> </ul> <p>Vous rendrez ce travail sur \u00c9l\u00e9a.</p>"},{"location":"premiere/archi/fonctions/","title":"Fonctions et expressions","text":"Version PDF de ce cours  T\u00e9l\u00e9charger ce cours au format PDF"},{"location":"premiere/archi/fonctions/#fonctions-et-expressions-booleennes","title":"Fonctions et expressions bool\u00e9ennes","text":""},{"location":"premiere/archi/fonctions/#les-fonctions-booleennes","title":"Les fonctions bool\u00e9ennes","text":"<p>On a vu pr\u00e9c\u00e9demment que les circuits \u00e9lectroniques pouvaient \u00eatre conceptualis\u00e9s en termes de fonctions bool\u00e9ennes, ce qui signifie qu'ils acceptent un ou plusieurs bits en entr\u00e9e et produisent un seul bit en sortie.</p> <p>Si nous d\u00e9signons \\(\\neg (x)\\) comme la fonction associ\u00e9e \u00e0 la porte NOT, \\(\\land (x, y)\\) comme celle associ\u00e9e \u00e0 la porte AND, et \\(\\lor (x, y)\\) comme celle de la porte OR, ces trois fonctions sont caract\u00e9ris\u00e9es par les tables de v\u00e9rit\u00e9 suivantes :</p> <p></p> <p>Les trois fonctions bool\u00e9ennes \u00e9l\u00e9mentaires \\(\\neg (x)\\), \\(\\land (x, y)\\) et \\(\\lor (x, y)\\) sont utilis\u00e9es comme bases pour la construction d'autres fonctions bool\u00e9ennes, et peuvent \u00eatre combin\u00e9es pour en d\u00e9finir de nouvelles.</p> <p>Plus g\u00e9n\u00e9ralement, la table de v\u00e9rit\u00e9 d\u2019une fonction avec \\(n\\) bits en entr\u00e9e aura \\(2^n\\) lignes correspondant aux \\(2n\\) combinaisons possibles des entr\u00e9es. Par exemple, une fonction bool\u00e9enne \\(f\\) avec trois entr\u00e9es \\(x\\), \\(y\\) et \\(z\\) sera d\u00e9finie par une table de v\u00e9rit\u00e9 \u00e0 \\(2^3 = 8\\) lignes, de la forme suivante :</p> <p></p> <p>Aussi, pour simplifier la d\u00e9finition des fonctions bool\u00e9ennes, on utilisera plut\u00f4t ces fonctions comme des op\u00e9rateurs, et on \u00e9crira et dira que :</p> <ul> <li>\\(\\neg x\\) est la n\u00e9gation de x,</li> <li>\\(x \\land y\\) est la conjonction de x et y,</li> <li>\\(x \\lor y\\) est la disjonction de x et y.</li> </ul> <p>Ces op\u00e9rateurs sont d\u00e9sign\u00e9s comme des op\u00e9rateurs bool\u00e9ens en l'honneur de Georges Boole, un math\u00e9maticien et philosophe du 19e si\u00e8cle qui a cr\u00e9\u00e9 ce syst\u00e8me de calcul, \u00e9galement connu sous le nom d'alg\u00e8bre bool\u00e9enne. Ce calcul repose sur l'utilisation d'op\u00e9rateurs et de chiffres binaires, appel\u00e9s \u00e9galement chiffres bool\u00e9ens.</p> <p>Parmi les op\u00e9rateurs de base que nous n'avons pas encore abord\u00e9s, il y a l'op\u00e9rateur ou exclusif, que l'on note \\(x \\oplus y\\), qui est d\u00e9fini comme suit (avec sa repr\u00e9sentation symbolique am\u00e9ricaine et europ\u00e9enne) :</p> <p></p> <p>La sortie est \\(1\\) lorsque l'une et une seule de ses entr\u00e9es est \u00e9gale \u00e0 \\(1\\), et elle renvoie \\(0\\) dans les autres cas.</p>"},{"location":"premiere/archi/fonctions/#expressions-booleennes","title":"Expressions bool\u00e9ennes.","text":"<p>En utilisant ces op\u00e9rateurs, on peut d\u00e9finir n\u2019importe quelle fonction bool\u00e9enne comme une expression bool\u00e9enne sur ses entr\u00e9es. Par exemple, l\u2019\u00e9galit\u00e9 suivante d\u00e9finit une fonction \\(f\\) avec trois param\u00e8tres \\(x\\), \\(y\\) et \\(z\\) \u00e0 l\u2019aide d\u2019une expression bool\u00e9enne sur ses variables :</p> \\[f(x,y,z) = (x \\land y) \\oplus (\\lnot y \\lor z)\\] <p>Pour calculer la table de v\u00e9rit\u00e9 associ\u00e9e \u00e0 la fonction \\(f\\), on calcule les r\u00e9sultats des sous-expressions, en commen\u00e7ant par les calculs en profondeur puis en remontant. Sur l'exemple pr\u00e9c\u00e9dent, cela revient \u00e0 calculer les r\u00e9sultats des expressions \\(x \\land y\\) et \\(\\lnot y\\), puis \\(\\lnot y \\lor z\\) et enfin le r\u00e9sultat final :</p> <p></p> <p>Le calcul avec les op\u00e9rateurs bool\u00e9ens ob\u00e9it \u00e0 quelques identit\u00e9s \u00e9l\u00e9mentaires, en voici quelques unes :</p> identit\u00e9 cas 1 cas 2 involutif \\(\u00ac(\u00acx) = x\\) neutre \\(1 \u2227 x = x\\) \\(0 \\lor x = x\\) absorbant \\(0 \u2227 x =0\\) \\(1 \\lor x = 1\\) idempotence \\(x \\land x = x\\) \\(x \\lor x = x\\) compl\u00e9ment \\(x \\land \\lnot x = 0\\) \\(x \\lor \\lnot x = 1\\) commutativit\u00e9 \\(x \\land y = y \\land x\\) \\(x \\lor y = y \\lor x\\) associativit\u00e9 \\(x \\land (y \\land z) = (x \\land y) \\land z\\) \\(x \\lor (y \\lor z) = (x \\lor y) \\lor z\\) distributivit\u00e9 \\(x \\land (y \\lor z) = (x \\land y) \\lor (x \\land z)\\) \\(x \\lor (y \\land z) = (x \\lor y) \\land (x \\lor z)\\) De Morgan \\(\\lnot (x \\land y) = \\lnot x \\lor \\lnot y\\) \\(\\lnot (x \\lor y) = \\lnot x \\land \\lnot y\\) <p>On peut, \u00e0 l'aide de ces identit\u00e9s \u00e9l\u00e9mentaires, montrer par exemple l\u2019\u00e9galit\u00e9 suivante :</p> \\(\\lnot (y \\land (x \\lor \\lnot y))\\) \\(= \\lnot y \\lor \\lnot (x \\lor \\lnot y)\\) De Morgan \\(= \\lnot y \\lor (\\lnot x \\land y)\\) De Morgan et involutif \\(= (\\lnot y \\lor \\lnot x) \\land (\\lnot y \\lor y)\\) distributivit\u00e9 \\(= (\\lnot y \\lor \\lnot x) \\land 1\\) compl\u00e9ment \\(= (\\lnot y \\lor \\lnot x)\\) neutre \\(= (\\lnot x \\lor \\lnot y)\\) commutativit\u00e9"},{"location":"premiere/archi/fonctions/#exercices","title":"Exercices","text":"<p>Question 1</p> <p>Montrer de deux mani\u00e8res diff\u00e9rentes l\u2019\u00e9galit\u00e9 suivante :</p> <ul> <li>en comparant les deux tables de v\u00e9rit\u00e9</li> <li>en utilisant les identit\u00e9s \u00e9l\u00e9mentaires.</li> </ul> <p>\\((x \u2227 y) \u2228 (\u00acy \u2227 z) = (x \u2228 \u00acy) \u2227 (y \u2228 z)\\)</p> <p>Question 2</p> <p>D\u00e9finir une fonction bool\u00e9enne \\(f\\) sur deux variables \\(x\\) et \\(y\\) qui vaut \\(1\\) si et seulement si les deux variables ont la m\u00eame valeur (qu\u2019elle soit \\(0\\) ou \\(1\\)), en utilisant uniquement les op\u00e9rations NON, ET, OU ou OU exclusif.</p> <p>Donner sa table de v\u00e9rit\u00e9.</p> <p>Question 3</p> <p>On consid\u00e8re la fonction bool\u00e9enne \u00e0 trois variables suivante :</p> <p>\\(f(x, y, z) = (x \u2227 \u00acy \u2227 \u00acz) \u2228 (\u00acx \u2227 y \u2227 \u00acz) \u2228 (\u00acx \u2227 \u00acy \u2227 z)\\)</p> <p>Donner sa table de v\u00e9rit\u00e9. Que fait cette fonction ? Donner une expression bool\u00e9enne plus simple pour cette fonction.</p> <p>Question 4</p> <p>Une fonctions bool\u00e9enne peut \u00eatre repr\u00e9sent\u00e9e par sa forme normale conjonctive (FNC) ou sa forme normale disjonctive (FND). Par exemple, voici une fonction \\(f(a, b)\\) dont voici la table de v\u00e9rit\u00e9 :</p> a b f(a, b) 0 0 1 0 1 0 1 0 1 1 1 0 <p>On peut alors \u00e9crire que \\(f(a, b) = (\\lnot a \\land \\lnot b) \\lor (a \\land \\lnot b)\\). Il s'agit ici de la forme normale disjonctive, car on a des sous-expressions contenant des conjonctions \\(\\land\\) (entre parenth\u00e8ses), et ces sous-expressions sont s\u00e9par\u00e9es par des disjonctions \\(\\lor\\).</p> <p>On peut \u00e9galement \u00e9crire que \\(f(a, b) = \\lnot ((\\lnot a \\land b) \\lor (a \\land b)) = (a \\lor \\lnot b) \\land (\\lnot a \\lor \\lnot b)\\), qui est la forme normale conjonctive.</p> <p>En vous basant sur sa table de v\u00e9rit\u00e9, donnez la forme normale disjonctive de l'op\u00e9rateur XOR \\(\\oplus\\).</p> <p>\\(x \\oplus y = ...........................................\\)</p>"},{"location":"premiere/archi/introduction/","title":"Introduction \u00e0 la logique bool\u00e9enne","text":"Version PDF de ce cours  T\u00e9l\u00e9charger ce cours au format PDF"},{"location":"premiere/archi/introduction/#introduction-a-la-logique-booleenne","title":"Introduction \u00e0 la logique bool\u00e9enne","text":""},{"location":"premiere/archi/introduction/#les-portes-logiques-not-and-et-or","title":"Les portes logiques NOT, AND et OR","text":"<p>Les circuits d\u2019un ordinateur (m\u00e9moire, microprocesseur, etc.) manipulent uniquement des chiffres binaires <code>0</code> et <code>1</code> qui, en interne, sont repr\u00e9sent\u00e9s \u00e0 l'aide de tensions \u00e9lectriques. Ainsi, le bit <code>0</code> est repr\u00e9sent\u00e9 par une tension basse (proche de 0 volt) et le bit <code>1</code> par une tension haute (que l\u2019on notera \\(+V\\) volts, car cette tension varie selon les circuits).</p> <p>Les op\u00e9rateurs (logiques ou arithm\u00e9tiques) sur ces nombres binaires sont construits \u00e0 partir de circuits \u00e9lectroniques dont les briques \u00e9l\u00e9mentaires sont appel\u00e9es transistors. Les transistors que l\u2019on trouve dans les circuits des ordinateurs se comportent comme des interrupteurs qui laissent ou non passer un courant \u00e9lectrique, selon le mode du tout ou rien, comme repr\u00e9sent\u00e9 graphiquement de la mani\u00e8re suivante.</p> <p></p> <p>Dans ce sch\u00e9ma, la broche B est responsable de la commande de l'interrupteur. Lorsque la broche B est aliment\u00e9e en tension \u00e9lev\u00e9e, elle permet au courant de circuler entre la broche E (\u00e9galement aliment\u00e9e en tension \u00e9lev\u00e9e) et la masse, indiqu\u00e9e par une petite fl\u00e8che pour indiquer le sens du courant. Cette action a pour effet de mettre la broche E \u00e0 une tension basse, tout en veillant \u00e0 \u00e9viter les courts-circuits gr\u00e2ce \u00e0 la pr\u00e9sence de r\u00e9sistances plac\u00e9es judicieusement.\\newline</p> <p>\u00c0 l'inverse, lorsque la broche B est aliment\u00e9e en tension basse, la broche E reste maintenue \u00e0 une tension \u00e9lev\u00e9e. Ce transistor simple permet d'accomplir une op\u00e9ration de base appel\u00e9e porte logique NON (ou NOT en anglais). Une porte logique est une fonction qui prend un ou plusieurs bits en entr\u00e9e et g\u00e9n\u00e8re un bit en sortie.</p> <p>Porte NOT</p> <p>La porte logique NOT r\u00e9alis\u00e9e par le transistor ci-dessus est la plus \u00e9l\u00e9mentaire de toutes les portes logiques. Elle ne comporte qu'un seul bit en entr\u00e9e (not\u00e9 P) et produit un bit en sortie (not\u00e9e Q) \u00e9gale \u00e0 <code>0</code> lorsque l'entr\u00e9e est \u00e0 <code>1</code>, et inversement, elle g\u00e9n\u00e8re une sortie \u00e0 <code>1</code> lorsque l'entr\u00e9e est \u00e0 <code>0</code>. Sur le sch\u00e9ma ci-dessous, la porte NOT est repr\u00e9sent\u00e9e graphiquement, avec la notation am\u00e9ricaine \u00e0 gauche et la notation europ\u00e9enne \u00e0 droite :</p> <p></p> <p>Pour repr\u00e9senter le calcul r\u00e9alis\u00e9 par une porte logique, on utilise une table logique ou table de v\u00e9rit\u00e9 qui relie les valeurs des entr\u00e9es \u00e0 la valeur du r\u00e9sultat. La table logique de la porte NOT est donn\u00e9e ci-dessous :</p> <p></p> <p>Porte ET</p> <p>Une autre porte logique tr\u00e8s importante est la porte ET (AND en anglais). Elle peut aussi \u00eatre construite avec plusieurs portes NOR. Voici ci-dessous la table de v\u00e9rit\u00e9 de la porte ET, ses repr\u00e9sentations symboliques am\u00e9ricaine (en bas) et europ\u00e9enne (en haut) :</p> <p></p> <p>Porte OU</p> <p>Enfin, voici la porte OU (OR en anglais) qui est \u00e9galement beaucoup utilis\u00e9e :</p> <p></p>"},{"location":"premiere/archi/introduction/#les-fonctions-booleennes","title":"Les fonctions bool\u00e9ennes","text":"<p>Certains circuits \u00e9lectroniques peuvent \u00eatre conceptualis\u00e9s en termes de fonctions bool\u00e9ennes, ce qui signifie qu'ils acceptent un ou plusieurs bits en entr\u00e9e et produisent un seul bit en sortie. Les portes logiques vues pr\u00e9c\u00e9demment peuvent ainsi \u00eatre consid\u00e9r\u00e9es comme des fonctions bool\u00e9ennes \u00e9l\u00e9mentaires.</p> <p>Ainsi, si nous d\u00e9signons \\(\\neg (x)\\) comme la fonction associ\u00e9e \u00e0 la porte NOT, \\(\\land (x, y)\\) comme celle associ\u00e9e \u00e0 la porte AND, et \\(\\lor (x, y)\\) comme celle de la porte OR, ces trois fonctions sont caract\u00e9ris\u00e9es par les tables de v\u00e9rit\u00e9 suivantes :</p> <p></p> <p>Les trois fonctions bool\u00e9ennes \u00e9l\u00e9mentaires \\(\\neg (x)\\), \\(\\land (x, y)\\) et \\(\\lor (x, y)\\) sont utilis\u00e9es comme bases pour la construction d'autres fonctions bool\u00e9ennes. On peut combiner ces trois fonctions pour en d\u00e9finir de nouvelles.</p> <p>Aussi, pour simplifier la d\u00e9finition des fonctions bool\u00e9ennes, on utilisera plut\u00f4t ces fonctions comme des op\u00e9rateurs, et on \u00e9crira et dira que :</p> <ul> <li>\\(\\neg x\\) est la n\u00e9gation de x,</li> <li>\\(x \\land y\\) est la conjonction de x et y,</li> <li>\\(x \\lor y\\) gest la disjonction de x et y.</li> </ul>"},{"location":"premiere/archi/introduction/#en-python","title":"En Python","text":""},{"location":"premiere/archi/introduction/#operations-bit-a-bit","title":"Op\u00e9rations bit-\u00e0-bit","text":"<p>Python dispose de nombreux op\u00e9rateurs qui permettent d'effectuer des op\u00e9rations logiques entre des bits. On les appelle op\u00e9rateurs bit-\u00e0-bit (bitwise en anglais).</p> <p>L\u2019op\u00e9rateur <code>&amp;</code> r\u00e9alise un et logique entre les repr\u00e9sentations binaires de deux nombres :</p> <pre><code>&gt;&gt;&gt; 5 &amp; 12\n4\n&gt;&gt;&gt; bin(0b0101 &amp; 0b1100)\n\u20190b100\u2019\n</code></pre> <p>Rappel : La fonction <code>bin(x)</code> renvoie l'\u00e9criture binaire d'un nombre entier <code>x</code>.</p> <p>L'op\u00e9rateur <code>|</code> permet quant \u00e0 lui d'effectuer un OU bit-\u00e0-bit :</p> <pre><code>&gt;&gt;&gt; 5 | 12\n13\n</code></pre> <p>L'op\u00e9rateur <code>^</code> r\u00e9alise un XOR (OU exclusif) :</p> <pre><code>&gt;&gt;&gt; 5 ^ 12\n9\n</code></pre>"},{"location":"premiere/archi/introduction/#decalages-de-bits","title":"D\u00e9calages de bits","text":"<p>Python propose \u00e9galement des op\u00e9rateurs pour d\u00e9caler les bits d\u2019un nombre vers la droite ou vers la gauche. On note ces op\u00e9rateurs <code>&lt;&lt;</code> et <code>&gt;&gt;</code>, et ils prennent deux arguments : le nombre dont il faut d\u00e9caler les bits et le nombre de position \u00e0 d\u00e9caler.</p> <p>Par exemple, pour d\u00e9caler les bits d\u2019un nombre de 2 positions vers la gauche, on \u00e9crira :</p> <p></p><pre><code>&gt;&gt;&gt; 10 &lt;&lt; 2\n40\n&gt;&gt;&gt; bin(0b0001010 &lt;&lt; 2)\n\u20190b101000\u2019\n</code></pre> Si on avait voulu d\u00e9caler vers la droite, on aurait utilis\u00e9 l'op\u00e9rateur <code>&gt;&gt;</code>. On constate que d\u00e9caler d'un cran \u00e0 gauche permet de multiplier un nombre par deux et que d\u00e9caler d'un cran \u00e0 droite permet de diviser un nombre par deux."},{"location":"premiere/archi/os/","title":"Syst\u00e8mes d'exploitation","text":""},{"location":"premiere/archi/os/#systemes-dexploitation","title":"Syst\u00e8mes d'exploitation","text":""},{"location":"premiere/archi/os/#introduction","title":"Introduction","text":"<p>Examinons ensemble le petit script Python ci-dessous :</p> <pre><code>from os.path import getsize\nfrom tkinter.filedialog import askopenfilename\n\nfichier = askopenfilename()\n\nif fichier:\n    print(fichier, \"fait\", str(getsize(fichier)), \"octets\")\n</code></pre> <p>La fonction <code>askopenfilename()</code> g\u00e9n\u00e8re une bo\u00eete de dialogue pour s\u00e9lectionner un fichier. Si l'utilisateur annule l'op\u00e9ration en fermant la bo\u00eete de dialogue, la fonction renvoie une cha\u00eene de caract\u00e8res vide. Autrement, elle renvoie une cha\u00eene de caract\u00e8res contenant le chemin du fichier, comprenant le nom du fichier et tous les r\u00e9pertoires n\u00e9cessaires pour y acc\u00e9der.</p> <p>Une fois que le nom du fichier est obtenu, le programme v\u00e9rifie qu'il n'est pas vide. Dans ce cas, il affiche le nom du fichier ainsi que sa taille en octets, obtenue gr\u00e2ce \u00e0 la fonction <code>getsize()</code> de la biblioth\u00e8que standard Python. Le programme se termine lorsque l'utilisateur ferme la fen\u00eatre cr\u00e9\u00e9e par l'appel \u00e0 <code>askopenfilename()</code>.</p> <p>Ce script met en lumi\u00e8re diff\u00e9rentes fonctionnalit\u00e9s fournies par un syst\u00e8me d'exploitation :</p> <ul> <li>Tout d'abord, lors de l'ex\u00e9cution du programme, le reste du syst\u00e8me continue de fonctionner sans interruption, ce qui reste transparent \u00e0 la fois pour l'utilisateur (le programme s'ajoute \u00e0 la liste des programmes en cours d'ex\u00e9cution) et pour le programmeur (le code est une s\u00e9quence d'instructions ind\u00e9pendante des autres programmes en cours). Ensuite, on observe que le nombre potentiel de programmes en cours d'ex\u00e9cution peut d\u00e9passer le nombre de processeurs de la machine, sugg\u00e9rant que quelque chose permet \u00e0 tous les programmes de fonctionner en parall\u00e8le sans intervention du programmeur.</li> <li>Deuxi\u00e8mement, le programme fonctionne correctement ind\u00e9pendamment de l'emplacement du fichier choisi (disque dur, partage r\u00e9seau, cl\u00e9 USB). Le programmeur n'a pas besoin d'\u00e9crire un code sp\u00e9cifique pour g\u00e9rer diff\u00e9rents p\u00e9riph\u00e9riques de stockage. De plus, le programme s'ex\u00e9cute de mani\u00e8re coh\u00e9rente, quelle que soit la taille de l'\u00e9cran ou le dispositif de pointage utilis\u00e9 (pav\u00e9 tactile ou souris).</li> <li>Enfin, quel que soit la taille du fichier, le temps d'ex\u00e9cution du programme, une fois le fichier choisi, reste constant. Notamment, la demande de la taille d'un grand fichier est aussi rapide que pour un fichier plus petit. De plus, le programme peut r\u00e9pondre m\u00eame pour des fichiers tr\u00e8s simples (comme des fichiers texte) qui ne contiennent pas leur taille comme information. Ces observations sugg\u00e8rent que \"le syst\u00e8me\" maintient des m\u00e9ta-donn\u00e9es associ\u00e9es aux fichiers, telles que leur taille ou leur type.</li> </ul>"},{"location":"premiere/archi/os/#une-video-dintroduction","title":"Une vid\u00e9o d'introduction","text":"<p>Voici une petite vid\u00e9o d'introduction aux syst\u00e8mes d'exploitation :</p> <p></p>  Visionner la vid\u00e9o <p>Pour faire l'interface entre le mat\u00e9riel et l'utilisateur, un ensemble de programmes, appel\u00e9 syst\u00e8me d'exploitation (SE ou OS en anglais pour Operating System) \"tournent\" donc en permanence sur un ordinateur de fa\u00e7on \u00e0 faciliter son utilisation.</p> <p>Les utilisateurs utilisent les applications, qui demandent des ressources au syst\u00e8me d\u2019exploitation, qui pilote le mat\u00e9riel informatique, le partageant entre diff\u00e9rentes applications et diff\u00e9rents utilisateurs.</p> <p>Le syst\u00e8me d'exploitation \u00e9tant proches de la machine, les plus anciens \u00e9taient donc \u00e9crits en assembleur; actuellement, ils sont g\u00e9n\u00e9ralement \u00e9crits dans un langage \u00e0 mi-chemin entre le bas niveau et le haut niveau, comme le langage C.</p>"},{"location":"premiere/archi/os/#principes-generaux-et-composants-logiciels","title":"Principes g\u00e9n\u00e9raux et composants logiciels","text":"<p>Un syst\u00e8me d'exploitation est un programme ou un ensemble de programmes con\u00e7us pour g\u00e9rer les ressources mat\u00e9rielles et logicielles d'un ordinateur. Son r\u00f4le principal est de fournir un acc\u00e8s unifi\u00e9 aux ressources de la machine pour les programmes utilisateurs. Le sch\u00e9ma ci-dessous illustre la position du syst\u00e8me d'exploitation et ses diverses interactions :</p> <p></p> <p>L'utilisateur interagit avec des programmes tels que des jeux, un navigateur web ou un logiciel de traitement de texte. Ces programmes n\u00e9cessitent l'utilisation des ressources mat\u00e9rielles pour effectuer leurs t\u00e2ches, comme la lecture ou la sauvegarde de fichiers, l'affichage d'images \u00e0 l'\u00e9cran, ou la r\u00e9cup\u00e9ration des caract\u00e8res saisis au clavier ou de la position du pointeur de la souris. Le syst\u00e8me d'exploitation offre un ensemble de fonctions primitives permettant cette interaction avec le mat\u00e9riel. Le syst\u00e8me d'exploitation permet \u00e0 l'utilisateur de s'abstraire du mat\u00e9riel, en fournissant des services communs pour tous les mat\u00e9riels.</p> <p>Principaux \u00e9l\u00e9ments d'un SE</p> <p>Un syst\u00e8me d\u2019exploitation est constitu\u00e9 de diff\u00e9rents \u00e9l\u00e9ments :</p> <ol> <li>Le noyau : C\u2019est le c\u0153ur du syst\u00e8me. Il est lui-m\u00eame constitu\u00e9 de plusieurs composants logiciels :<ul> <li>L'ordonnanceur, responsable de la d\u00e9cision quant \u00e0 quel programme doit s'ex\u00e9cuter \u00e0 un moment donn\u00e9 sur le processeur.</li> <li>Le gestionnaire de m\u00e9moire, charg\u00e9 de r\u00e9partir la m\u00e9moire vive entre les diff\u00e9rents programmes en cours d'ex\u00e9cution.</li> <li>Les diff\u00e9rents syst\u00e8mes de fichiers, d\u00e9terminant la mani\u00e8re de stocker les fichiers sur des supports physiques tels que disques, cl\u00e9s USB, disques optiques, etc.</li> <li>La pile r\u00e9seau, impl\u00e9mentant, entre autres, des protocoles tels que TCP/IP (on en parlera lors du chapitre d\u00e9di\u00e9 aux r\u00e9seaux informatiques).</li> <li>Les pilotes de p\u00e9riph\u00e9riques, \u00e9galement appel\u00e9s \"drivers\" en anglais, ayant pour objectif de g\u00e9rer les dispositifs mat\u00e9riels tels que cartes graphiques, disques durs, claviers, etc.</li> </ul> </li> <li>L'invite de commande : C\u2019est un moyen d\u2019acc\u00e9der directement \u00e0 certaines fonctions du syst\u00e8me d\u2019exploitation ou \u00e0 sa configuration. Il existe plusieurs variantes de l\u2019invite de commande (ou Shell en anglais), par exemple <code>bash</code>, <code>ksh</code> et <code>zsh</code> sur les syst\u00e8mes Linux.</li> <li>L'interface graphique : L\u2019interface graphique est une IHM (Interface Homme Machine) permettant d\u2019interagir avec le syst\u00e8me d\u2019exploitation et les applications dans un environnement graphique.</li> </ol> <p>Voici une vid\u00e9o propos\u00e9e par Lumni sur le fonctionnement d'un syst\u00e8me d'exploitation :</p> <p></p>  Visionner la vid\u00e9o"},{"location":"premiere/archi/os/#historique-des-systemes-dexploitation","title":"Historique des syst\u00e8mes d'exploitation","text":"<ul> <li>Avant 1950 : Les premiers calculateurs, comme l'ENIAC (1945), ne disposent pas de syst\u00e8me d'exploitation. Ils ex\u00e9cutent un seul programme \u00e0 la fois, saisi en rec\u00e2blant physiquement l'ordinateur via la connexion de c\u00e2bles entre diff\u00e9rentes sections effectuant des calculs \u00e9l\u00e9mentaires.</li> <li>1956 : GM-NAA I/O est l'un des premiers syst\u00e8mes d'exploitation. Ce programme op\u00e8re sur le calculateur IBM 704 et a pour r\u00f4le d'ex\u00e9cuter s\u00e9quentiellement des programmes utilisateurs stock\u00e9s sur des cartes perfor\u00e9es. Il propose \u00e9galement des routines pour acc\u00e9der facilement aux p\u00e9riph\u00e9riques d'entr\u00e9e/sortie.</li> <li>1967 : MultICS (Multiplexed Information and Computing Service), d\u00e9velopp\u00e9 au centre de recherche de  Bell Labs et au MIT, est l'un des premiers syst\u00e8mes d'exploitation \u00e0 temps partag\u00e9, permettant \u00e0 plusieurs programmes de s'ex\u00e9cuter simultan\u00e9ment. Il influence consid\u00e9rablement les syst\u00e8mes d'exploitation modernes.</li> <li>1970-1990 : Unix, cr\u00e9\u00e9 par l'entreprise AT&amp;T et d\u00e9velopp\u00e9 \u00e0 Bell Labs, est l'un des premiers syst\u00e8mes d'exploitation multit\u00e2ches et multi-utilisateurs. Ses premi\u00e8res versions sont \u00e9crites en assembleur, puis en langage C, cr\u00e9\u00e9 \u00e0 cet effet. Une variante d'Unix, la Berkeley Software Distribution (BSD), voit le jour et prosp\u00e8re entre 1978 et 1990.</li> <li>1960-1980 : Les ordinateurs IBM utilisent divers syst\u00e8mes d'exploitation, diff\u00e9rents d'Unix. \u00c0 partir des ann\u00e9es 1980, ils adoptent notamment le syst\u00e8me MS-DOS de Microsoft, con\u00e7u pour fonctionner exclusivement sur le processeur x86 d'Intel.</li> <li>1980-1990 : Le succ\u00e8s de l'architecture x86 d'Intel et de l'ordinateur personnel (PC) \u00e9tablit MS-DOS comme le principal syst\u00e8me d'exploitation pour les particuliers et de nombreux secteurs d'activit\u00e9.</li> <li>1990-pr\u00e9sent : Microsoft d\u00e9veloppe un syst\u00e8me graphique au-dessus de MS-DOS, qui \u00e9volue ensuite en un syst\u00e8me d'exploitation ind\u00e9pendant, le syst\u00e8me Windows. Il devient le syst\u00e8me le plus largement utilis\u00e9 sur les PC apr\u00e8s MS-DOS.</li> <li>1984-2001 : En parall\u00e8le, Apple commercialise des ordinateurs personnels bas\u00e9s sur l'architecture Motorola puis PowerPC. Ces machines fonctionnent avec le syst\u00e8me d'exploitation Mac OS, un syst\u00e8me graphique.</li> <li>1991 : Linus Torvalds, \u00e9tudiant \u00e0 l'Universit\u00e9 d'Helsinki, souhaite modifier le syst\u00e8me MINIX (variante d'Unix pour processeurs Intel, d\u00e9velopp\u00e9e par Andrew S. Tanenbaum). Ne pouvant diffuser les modifications en raison de la licence logicielle, Torvalds cr\u00e9e son propre syst\u00e8me d'exploitation, Linux, qu'il diffuse sous la licence libre GNU GPL.</li> <li>1991-pr\u00e9sent : Linux conna\u00eet une adoption rapide en raison de sa diffusion sous licence libre, devenant un syst\u00e8me d'exploitation courant pour serveurs, calculs et stockage.</li> <li>2001-pr\u00e9sent : Apple cr\u00e9e macOS, bas\u00e9 sur BSD, en tant que nouveau syst\u00e8me d'exploitation.</li> <li>2007-pr\u00e9sent : Apple adapte le c\u0153ur de macOS pour les t\u00e9l\u00e9phones portables et le commercialise.</li> <li>2008-pr\u00e9sent : Google diffuse Android, un syst\u00e8me d'exploitation pour t\u00e9l\u00e9phones mobiles, utilisant le noyau Linux auquel des programmes et biblioth\u00e8ques non libres sont ajout\u00e9s.</li> </ul>"},{"location":"premiere/archi/os/#systemes-libres-vs-proprietaires","title":"Syst\u00e8mes libres vs propri\u00e9taires","text":"<p>Les syst\u00e8mes d'exploitation Windows, macOS ou encore UNIX sont consid\u00e9r\u00e9s comme des syst\u00e8mes \"propri\u00e9taires\" (certains utilisent le terme \"privateurs\"), ce qui signifie qu'ils ne sont pas libres. Mais qu'est-ce qu'un logiciel libre de mani\u00e8re plus g\u00e9n\u00e9rale ?</p> <p>Selon Wikip\u00e9dia, \"Un logiciel libre est un logiciel dont l'utilisation, l'\u00e9tude, la modification et la duplication par autrui en vue de sa diffusion sont permises, techniquement et l\u00e9galement, ceci afin de garantir certaines libert\u00e9s induites, dont le contr\u00f4le du programme par l'utilisateur et la possibilit\u00e9 de partage entre individus.\" Le syst\u00e8me UNIX ne respecte pas ces droits (par exemple, le code source d'UNIX n'est pas disponible, rendant l'\u00e9tude d'UNIX impossible). UNIX est donc consid\u00e9r\u00e9 comme un syst\u00e8me \"propri\u00e9taire\", oppos\u00e9 \u00e0 un syst\u00e8me \"libre\". Il est important de noter que la notion de logiciel libre ne signifie pas n\u00e9cessairement qu'il est gratuit, bien que cela soit souvent le cas. La confusion entre \"libre\" et \"gratuit\" provient de l'anglais, car \"free\" signifie \u00e0 la fois \"libre\" et \"gratuit\".</p> <p>En 1991, Linus Torvalds, un \u00e9tudiant finlandais, d\u00e9cide de cr\u00e9er un clone libre d'UNIX \u00e0 partir de z\u00e9ro, car le code source d'UNIX n'est pas public. Ce clone d'UNIX est baptis\u00e9 Linux (Linus + UNIX).</p> <p>Voici une courte vid\u00e9o racontant l'histoire de Linux avec plus de d\u00e9tails :</p> <p></p>  Visionner la vid\u00e9o <p>La diff\u00e9rence fondamentale r\u00e9side dans le fait que le code d'un logiciel libre (et donc d'un syst\u00e8me libre) est public. En g\u00e9n\u00e9ral, on peut le modifier ou l'utiliser pour cr\u00e9er de nouveaux produits.</p> <p>Les logiciels propri\u00e9taires sont g\u00e9n\u00e9ralement non ouverts, ce qui rend plus difficile (voire ill\u00e9gal) leur modification.</p> <p>Les logiciels libres sont souvent entretenus par la communaut\u00e9, mais peuvent \u00e9galement l'\u00eatre par des entreprises les utilisant et ayant int\u00e9r\u00eat \u00e0 les maintenir efficaces et utilis\u00e9s par d'autres, garantissant ainsi la disponibilit\u00e9 de d\u00e9veloppeurs pour contribuer \u00e0 leur maintenance.</p> <p>Quant aux logiciels propri\u00e9taires, ils sont principalement d\u00e9velopp\u00e9s et mis \u00e0 jour par l'entreprise qui les poss\u00e8de et qui peut d\u00e9cider d'arr\u00eater de les maintenir.</p> <p>Ce sont deux mod\u00e8les \u00e9conomiques tr\u00e8s diff\u00e9rents.</p> <ul> <li>Syst\u00e8mes libres : GNU/Linux, GNU/BSD, Android (pas compl\u00e8tement),...</li> <li>Syst\u00e8mes propri\u00e9taires : Windows, macOS, iOS,...</li> </ul> <p>Les syst\u00e8mes d'exploitation libres ont longtemps \u00e9t\u00e9 per\u00e7us comme destin\u00e9s uniquement aux \"geeks\" et autres experts en informatique, difficiles \u00e0 utiliser par le grand public en raison de leur complexit\u00e9. Cette r\u00e9putation est aujourd'hui compl\u00e8tement injustifi\u00e9e, car ils sont devenus aussi conviviaux que les syst\u00e8mes propri\u00e9taires \"classiques\".</p>"},{"location":"premiere/archi/os/#tp-les-commandes-linux","title":"TP - Les commandes Linux","text":"<p>\u00c0 t\u00e9l\u00e9charger</p> <p>T\u00e9l\u00e9chargez les trois fichiers suivants :</p> <ul> <li>activite_commandes.odt - L'\u00e9nonc\u00e9 de l'activit\u00e9, \u00e0 compl\u00e9ter directement dans le fichier.</li> <li>commandes_linux.pdf - R\u00e9capitulatif des commandes Linux essentielles.</li> <li>etat_machine.bin - Une sauvegarde d'\u00e9tat de la machine que vous allez utiliser.</li> </ul>"},{"location":"premiere/archi/vonneumann/","title":"Mod\u00e8le d'architecture de Von Neumann","text":""},{"location":"premiere/archi/vonneumann/#modele-darchitecture-de-von-neumann","title":"Mod\u00e8le d'architecture de Von Neumann","text":"<p>Les ordinateurs tels que nous les connaissons aujourd'hui sont parfaitement int\u00e9gr\u00e9s \u00e0 notre quotidien, si bien qu'il peut \u00eatre difficile d'imaginer tout le cheminement qu'il a \u00e9t\u00e9 n\u00e9cessaire de faire pour en arriver l\u00e0.</p> <p>Les premiers \"vrais\" ordinateurs apparaissent aux \u00c9tats-Unis et en Angleterre, juste apr\u00e8s la guerre. Il s'agit de machines capables d\u2019ex\u00e9cuter des programmes. Mais qu'est-ce qu'un programme, d'abord ?</p> <p>Un programme, c'est un algorithme ET des donn\u00e9es. Les deux sont intimement li\u00e9s, et doivent \u00eatre stock\u00e9s dans une m\u00e9moire.</p>"},{"location":"premiere/archi/vonneumann/#introduction-histoire-des-ordinateurs","title":"Introduction : Histoire des ordinateurs","text":"<p>Avant d'en arriver \u00e0 nos ordinateurs modernes, de nombreuses machines ont \u00e9t\u00e9 r\u00e9alis\u00e9es depuis l'Antiquit\u00e9 pour effectuer des calculs.</p> <p>Visionnez la petit vid\u00e9o suivante sur l'histoire de l'architecture des ordinateurs :</p> <p></p>  Visionner la vid\u00e9o sur Lumni <p>Exercice 1</p> <p>En vous basant sur la partie de la vid\u00e9o ci-dessus, r\u00e9pondez aux questions suivantes :</p> <ol> <li>Comment \u00e9taient transmis les programmes avec l\u2019ENIAC ?</li> <li>Reproduire le sch\u00e9ma de l\u2019architecture de Von Neumann pr\u00e9sent\u00e9 dans la video.</li> <li>Quel \u00e9tait le composant fondamental des premiers ordinateurs (ENIAC, EDVAC) ? Quels \u00e9taient ses inconv\u00e9nients ? Quel composant l\u2019a remplac\u00e9 dans les ann\u00e9es 1950 et est encore utilis\u00e9 dans les ordinateurs modernes ?</li> <li>Commenter le tableau ci-dessous. </li> <li>Qu\u2019appelle-t-on System On a Chip ?</li> </ol> Correction exercice 1 <ol> <li>L'ENIAC (Electronic Numerical Integrator and Computer), l'un des premiers ordinateurs \u00e9lectroniques, a \u00e9t\u00e9 programm\u00e9 en utilisant des panneaux de connexion et des interrupteurs. Les instructions et les donn\u00e9es \u00e9taient saisies manuellement par les op\u00e9rateurs en connectant des c\u00e2bles et en positionnant les interrupteurs, ce qui \u00e9tait un processus laborieux et propice aux erreurs.</li> <li>Voir la suite de ce cours.</li> <li>Le composant fondamental des premiers ordinateurs tels que l'ENIAC et l'EDVAC \u00e9tait le tube \u00e0 vide, \u00e9galement appel\u00e9 tube \u00e9lectronique ou lampe \u00e0 vide. Les tubes \u00e0 vide \u00e9taient utilis\u00e9s comme \u00e9l\u00e9ments de commutation et de stockage d'informations binaires. Cependant, ils pr\u00e9sentaient des inconv\u00e9nients tels que leur taille, leur consommation d'\u00e9nergie \u00e9lev\u00e9e, leur production de chaleur importante et leur propension \u00e0 d\u00e9faillir. Les tubes \u00e0 vide ont \u00e9t\u00e9 largement remplac\u00e9s dans les ann\u00e9es 1950 par les transistors, qui sont beaucoup plus compacts, plus fiables, plus robustes et consomment moins d'\u00e9nergie. Cette transition a marqu\u00e9 le d\u00e9but de l'\u00e8re des ordinateurs \u00e0 transistors. Les transistors sont toujours utilis\u00e9s dans les ordinateurs modernes, mais ils sont int\u00e9gr\u00e9s \u00e0 une \u00e9chelle beaucoup plus petite gr\u00e2ce \u00e0 la miniaturisation des composants \u00e9lectroniques.</li> <li>On constate qu'au fil du temps, le nombre de transistor a consid\u00e9rablement augment\u00e9, et que la surface n\u00e9cessaire par transistor a fortement diminu\u00e9e.</li> <li>Le terme \"System On a Chip\" (SoC) d\u00e9signe un concept o\u00f9 tous les composants n\u00e9cessaires pour ex\u00e9cuter un syst\u00e8me complet sont int\u00e9gr\u00e9s sur une seule puce. Cela inclut le processeur central (CPU), la m\u00e9moire, les interfaces d'entr\u00e9e/sortie, et parfois m\u00eame des composants sp\u00e9cialis\u00e9s. Les SoC sont largement utilis\u00e9s dans les dispositifs \u00e9lectroniques modernes tels que les smartphones, les tablettes, et d'autres appareils int\u00e9gr\u00e9s comme les Raspberry, offrant une solution compacte et \u00e9conome en \u00e9nergie.</li> </ol> <p>R\u00e9sum\u00e9 historique</p> <p></p>  T\u00e9l\u00e9charger la pr\u00e9sentation (pour voir les inventions en images) <p>Machines de l'Antiquit\u00e9 :</p> <ul> <li>Anticyth\u00e8re (150-100 av. J.-C.) : Un ancien m\u00e9canisme qui a servi \u00e0 effectuer des calculs astronomiques, repr\u00e9sentant une premi\u00e8re utilisation de la m\u00e9canique pour le traitement de l'information.</li> <li>Odom\u00e8tre de H\u00e9ron d'Alexandrie (10-70 apr. J.-C.) : Un dispositif antique pour mesurer les distances, montrant une application pr\u00e9coce de la technologie \u00e0 des besoins pratiques.</li> </ul> <p>17e si\u00e8cle :</p> <ul> <li>Pascaline (1642) : Invent\u00e9e par Blaise Pascal, la Pascaline est une calculatrice m\u00e9canique pr\u00e9coce, symbolisant les premiers efforts pour automatiser les calculs.</li> </ul> <p>19e si\u00e8cle :</p> <ul> <li>Machine analytique de Babbage (con\u00e7ue dans les ann\u00e9es 1830) : Conception r\u00e9volutionnaire pr\u00e9figurant les ordinateurs programmables, m\u00eame si elle n'a jamais \u00e9t\u00e9 construite de son vivant, car trop co\u00fbteuse. On estime aujourd'hui que la machine compl\u00e8te aurait constitu\u00e9 un enchev\u00eatrement de roues et d'engrenages mus par la vapeur et occupant la place d'une locomotive.</li> </ul> <p>Analyse de Charles Babbage et Ada Lovelace :</p> <ul> <li>Ada Lovelace (1843) : Pionni\u00e8re dans la programmation informatique, Ada Lovelace a cr\u00e9\u00e9 le premier programme pour la machine analytique, jetant les bases de la programmation. Voici une petite vid\u00e9o int\u00e9ressante sur le sujet.</li> </ul> <p>20e si\u00e8cle :</p> <ul> <li> <p>\"A Symbolic Analysis of Relay and Switching Circuits\" de Shannon (1937) : Le travail de Claude Shannon a \u00e9tabli les fondements de la th\u00e9orie des circuits logiques, essentielle \u00e0 la conception des premiers ordinateurs.</p> </li> <li> <p>ENIAC (1946) : Le premier ordinateur \u00e9lectronique \u00e0 grande \u00e9chelle, l'ENIAC, a marqu\u00e9 le passage des calculateurs m\u00e9caniques aux machines \u00e9lectroniques programmables.</p> </li> <li> <p>\"First Draft of a Report on the EDVAC\" de Von Neumann (1945) : Le document de Von Neumann a introduit le concept d'architecture von Neumann, standard pour la conception des ordinateurs modernes. Il s'est bas\u00e9 sur les travaux d'Alan Turing (en 1936), notamment des concepts suivants :</p> <ul> <li>Machine de Turing : Turing a propos\u00e9 un mod\u00e8le abstrait de machine, connu sous le nom de machine de Turing, qui fonctionne selon des r\u00e8gles simples et manipule des symboles sur une bande infinie. Cette machine hypoth\u00e9tique poss\u00e8de une t\u00eate de lecture/\u00e9criture mobile qui peut se d\u00e9placer vers la gauche ou la droite et changer l'\u00e9tat de la machine en fonction des symboles lus. Voici une petite vid\u00e9o du CNRS sur le sujet, que je vous invite \u00e0 visionner. Voici \u00e9galement un simulateur de machine de Turing permettant de mieux comprendre son fonctionnement.</li> <li>Universalit\u00e9 : Turing a d\u00e9montr\u00e9 qu'il \u00e9tait possible de construire une machine de Turing universelle, capable de simuler n'importe quelle autre machine de Turing. Cette id\u00e9e d'universalit\u00e9 signifie que, en principe, une seule machine pourrait ex\u00e9cuter n'importe quel programme, \u00e9tablissant ainsi le concept de programmabilit\u00e9 et d'instructions stock\u00e9es.</li> </ul> </li> </ul> <p>D\u00e9veloppements cl\u00e9s dans les composants \u00e9lectroniques :</p> <ul> <li> <p>Transistor (1947) : L'invention du transistor a r\u00e9volutionn\u00e9 l'\u00e9lectronique, rempla\u00e7ant les tubes \u00e0 vide et permettant la miniaturisation des composants.</p> </li> <li> <p>Circuit int\u00e9gr\u00e9 (1958) : Les circuits int\u00e9gr\u00e9s ont consolid\u00e9 de multiples composants sur une seule puce, acc\u00e9l\u00e9rant les calculs et r\u00e9duisant la taille des ordinateurs.</p> </li> <li> <p>MOS Transistor (1960) : Le transistor MOS a ouvert la voie aux circuits int\u00e9gr\u00e9s \u00e0 faible consommation d'\u00e9nergie, crucial pour les appareils portables et les microprocesseurs modernes.</p> </li> </ul> <p>\u00c9volution des composants \u00e9lectroniques :</p> <ul> <li> <p>7400 - Texas Instruments (1964) : La s\u00e9rie 7400 de circuits int\u00e9gr\u00e9s logiques a facilit\u00e9 la construction de syst\u00e8mes \u00e9lectroniques plus complexes.</p> </li> <li> <p>4004 - Intel (1971) : Le premier microprocesseur, le 4004, a introduit l'id\u00e9e d'un processeur complet sur une seule puce, marquant le d\u00e9but de l'\u00e8re des ordinateurs personnels.</p> </li> <li> <p>Power4 - IBM (2001) : L'architecture avanc\u00e9e de Power4 a ouvert la voie aux serveurs hautes performances et aux superordinateurs.</p> </li> <li> <p>Snapdragon 855 - Qualcomm (2018) : La puce mobile Snapdragon 855 a d\u00e9fini de nouveaux standards pour les performances des appareils mobiles et l'int\u00e9gration de technologies avanc\u00e9es.</p> </li> </ul> <p>Architecture moderne :</p> <ul> <li> <p>Carte m\u00e8re (1980s) : La carte m\u00e8re est devenue le socle central d'un ordinateur, connectant tous les composants et permettant une \u00e9volutivit\u00e9 ais\u00e9e.</p> </li> <li> <p>Raspberry Pi (2012) : La sortie du Raspberry Pi a rendu les ordinateurs accessibles \u00e0 un public plus large gr\u00e2ce \u00e0 son faible co\u00fbt et \u00e0 sa polyvalence pour les projets informatiques.</p> </li> </ul>"},{"location":"premiere/archi/vonneumann/#le-modele-de-von-neumann","title":"Le mod\u00e8le de Von Neumann","text":""},{"location":"premiere/archi/vonneumann/#presentation","title":"Pr\u00e9sentation","text":"<p>Le mod\u00e8le d'architecture de Von Neumann, fondamental dans la conception des ordinateurs modernes, tire ses origines des travaux novateurs d'Alan Turing sur les machines universelles.</p> <p>D\u00e9velopp\u00e9 dans les ann\u00e9es 1940 par le math\u00e9maticien et physicien John von Neumann, ce mod\u00e8le a \u00e9t\u00e9 influenc\u00e9 par les id\u00e9es de Turing concernant les machines universelles de calcul.</p> <p>L'architecture de Von Neumann repose sur le concept de programme stock\u00e9, o\u00f9 les instructions et les donn\u00e9es sont trait\u00e9es de la m\u00eame mani\u00e8re et sont toutes deux stock\u00e9es dans la m\u00e9moire de l'ordinateur. Cela contraste avec les premi\u00e8res machines, o\u00f9 les programmes \u00e9taient c\u00e2bl\u00e9s physiquement. L'introduction de cette architecture a consid\u00e9rablement simplifi\u00e9 le processus de programmation, permettant aux programmeurs de manipuler les instructions comme des donn\u00e9es.</p> <p>Le mod\u00e8le de Von Neumann a donc jou\u00e9 un r\u00f4le crucial dans l'\u00e9volution des ordinateurs en les rendant plus flexibles, programmables et capables d'ex\u00e9cuter une vari\u00e9t\u00e9 de t\u00e2ches en fonction des instructions fournies, contribuant ainsi de mani\u00e8re significative \u00e0 l'essor de l'informatique moderne.</p> <p> </p> Mod\u00e8le de Von Neumann (Source de l'image) <p>MBR (memory buffer register) contient les donn\u00e9es / instructions \u00e0 \u00eatre stock\u00e9es / lues, on l'appelle aussi MDR : memory data register. MAR (memory adress register) : registre contenant l'adresse de la m\u00e9moire o\u00f9 sera stock\u00e9 la donn\u00e9e.</p> Voir une version plus d\u00e9taill\u00e9e du mod\u00e8le de Von Neumann <p> Mod\u00e8le de Von Neumann </p> <p>Mod\u00e8le de Von Neumann</p> <p>Un ordinateur est une machine programmable, automatique et universelle :</p> <ul> <li>programmable : la s\u00e9quence d\u2019op\u00e9rations ex\u00e9cut\u00e9e par un ordinateur peut \u00eatre enti\u00e8rement sp\u00e9cifi\u00e9e dans le texte d\u2019un programme ;</li> <li>automatique : un ordinateur peut ex\u00e9cuter un programme sans intervention ext\u00e9rieure (c\u00e2blage . . .) ;</li> <li>universelle : un ordinateur peut ex\u00e9cuter tout programme calculable (selon la th\u00e9orie de Turing) avec le jeu d\u2019instructions c\u00e2bl\u00e9 dans son processeur.</li> </ul> <p>En 1945, John von Neumann, math\u00e9maticien hongrois exil\u00e9 aux \u00c9tats-Unis, publie un rapport sur la r\u00e9alisation du calculateur EDVAC o\u00f9 il propose une architecture permettant d\u2019impl\u00e9menter une machine universelle, d\u00e9crite par Alan Turing dans son article fondateur de 1936 sur le probl\u00e8me de l\u2019ind\u00e9cidabilit\u00e9.</p> <p>L\u2019architecture de Von Neumann va servir de mod\u00e8le pour la plupart des ordinateurs de 1945 jusqu\u2019\u00e0 nos jours, elle se compose de quatre parties distinctes :</p> <ul> <li>L\u2019Unit\u00e9 Centrale de Traitement (Central Processing Unit en anglais) ou Processeur, qui permet d'ex\u00e9cuter les instructions machine des programmes informatiques, est constitu\u00e9e de deux sous-unit\u00e9s :<ul> <li>L\u2019Unit\u00e9 de Commande (UC) charge la prochaine instruction dont l\u2019adresse m\u00e9moire se trouve dans un registre appel\u00e9 Compteur de Programme (PC en anglais) ou Compteur ordinal, la d\u00e9code avec le d\u00e9codeur et commande l\u2019ex\u00e9cution par l\u2019ALU avec le s\u00e9quenceur. L\u2019instruction en cours d\u2019ex\u00e9cution est charg\u00e9e dans le Registre d\u2019Instruction (IR). L\u2019Unit\u00e9 de Commande peut aussi effectuer une op\u00e9ration de branchement, un saut dans le programme, en modifiant le Compteur de Programme, qui par d\u00e9faut est incr\u00e9ment\u00e9 de 1 lors de chaque instruction.</li> <li>L\u2019Unit\u00e9 Arithm\u00e9tique et Logique (ALU en anglais) qui r\u00e9alise des op\u00e9rations arithm\u00e9tiques (addition, multiplication...), logiques (et, ou...), de comparaisons ou de d\u00e9placement de m\u00e9moire (copie de ou vers la m\u00e9moire). L\u2019ALU stocke les donn\u00e9es dans des m\u00e9moires d\u2019acc\u00e8s tr\u00e8s rapide appel\u00e9es registres. Les op\u00e9rations sont r\u00e9alis\u00e9es par des circuits logiques constituant le jeu d\u2019instructions du processeur.</li> </ul> </li> <li>La m\u00e9moire o\u00f9 sont stock\u00e9s les donn\u00e9es et les programmes. Il y a diff\u00e9rents types de m\u00e9moires : la m\u00e9moire volatile (RAM par exemple), la m\u00e9moire permanente (disque dur par exemple).</li> <li>Des bus qui sont des fils reliant le CPU et la m\u00e9moire et permettant les \u00e9changes de donn\u00e9es et d\u2019adresses. Les adresses, les donn\u00e9es et les commandes circulent par des bus d'adresse, des bus de donn\u00e9es et le bus de contr\u00f4le. Un bus ne peut \u00eatre utilis\u00e9 que par deux composants (\u00e9metteur/r\u00e9cepteur) \u00e0 la fois !</li> <li>Des dispositifs d\u2019entr\u00e9es/sorties permettant d\u2019\u00e9changer avec l\u2019ext\u00e9rieur (lecture ou \u00e9criture de donn\u00e9es).</li> </ul> <p>Dans le mod\u00e8le de Von Neumann, le processeur ex\u00e9cute une instruction \u00e0 la fois, de fa\u00e7on s\u00e9quentielle.</p> Cycle d'instruction <p>Le cycle d\u2019une instruction est constitu\u00e9 d\u2019un cycle de recherche puis d\u2019un cycle d\u2019ex\u00e9cution qui mettent en jeu des \u00e9changes entre la m\u00e9moire et l\u2019Unit\u00e9 Centrale de Traitement (qui contient l'ALU et les registres), synchronis\u00e9s par des signaux p\u00e9riodiques \u00e9mis par une horloge \u00e0 quartz. Chaque cycle peut couvrir plusieurs cycles d\u2019horloge.</p> <p> Source : Architecture et technologie des ordinateurs d\u2019Emmanuel Lazard </p> <p>Le cycle d'instruction dans une architecture de Von Neumann suit g\u00e9n\u00e9ralement ces \u00e9tapes :</p> <ol> <li>Fetch (Chargement) : L'unit\u00e9 de contr\u00f4le (Control Unit) extrait l'instruction depuis la m\u00e9moire principale (RAM) \u00e0 l'adresse sp\u00e9cifi\u00e9e par le compteur de programme (Program Counter, registre PC), puis la stocke dans le registre d'instruction. </li> <li>Decode (D\u00e9codage) : L'unit\u00e9 de contr\u00f4le interpr\u00e8te l'instruction extraite pour comprendre quelle op\u00e9ration doit \u00eatre effectu\u00e9e et sur quelles donn\u00e9es.</li> <li>Execute (Ex\u00e9cution) : L'unit\u00e9 de traitement (ALU - Arithmetic Logic Unit) effectue l'op\u00e9ration demand\u00e9e, que ce soit une op\u00e9ration arithm\u00e9tique, logique ou de transfert de donn\u00e9es.</li> <li>Write Back (\u00c9criture) : Les r\u00e9sultats de l'op\u00e9ration peuvent \u00eatre stock\u00e9s dans un registre ou dans la m\u00e9moire, en fonction de l'instruction.</li> <li>Increment (Incr\u00e9mentation) : Le compteur de programme (registre PC) est g\u00e9n\u00e9ralement incr\u00e9ment\u00e9 pour pointer vers l'instruction suivante.</li> </ol> <p>Ce cycle se r\u00e9p\u00e8te continuellement, traitant chaque instruction s\u00e9quentiellement. Chaque \u00e9tape du cycle est synchronis\u00e9e par l'horloge du syst\u00e8me. L'architecture de Von Neumann permet \u00e0 l'ordinateur de charger des instructions depuis la m\u00e9moire, de les d\u00e9coder, de les ex\u00e9cuter et d'\u00e9crire les r\u00e9sultats, suivant ainsi un mod\u00e8le s\u00e9quentiel. Cette architecture est fondamentale dans la conception des processeurs modernes.</p> Registres PC et IR <p>Le compteur de programme (PC pour Program counter) contient en permanence l'adresse de la prochaine instruction \u00e0 ex\u00e9cuter.</p> <p>\u00c0 chaque d\u00e9but de cycle d'ex\u00e9cution, l'instruction \u00e0 ex\u00e9cuter est charg\u00e9e dans le registre IR \u00e0 partir de l'adresse contenue dans le registre PC.</p> <p>Ensuite, le registre PC est incr\u00e9ment\u00e9 pour pointer sur l'instruction suivante.</p> <p>Le registre d'instruction (IR) contient l'instruction en cours d'ex\u00e9cution.</p> <p>Ce registre est charg\u00e9 au d\u00e9but du cycle d'ex\u00e9cution par l'instruction dont l'adresse est donn\u00e9e par le compteur de programme PC.</p>"},{"location":"premiere/archi/vonneumann/#la-memoire","title":"La m\u00e9moire","text":"<p>La m\u00e9moire joue un r\u00f4le essentiel dans le stockage de donn\u00e9es et de programmes. Elle se subdivise en deux cat\u00e9gories distinctes :</p> <ul> <li>La m\u00e9moire volatile, qui h\u00e9berge les programmes et les donn\u00e9es en cours d'utilisation (on parle de processus pour les programmes en cours d'utilisation). Cette m\u00e9moire perd son contenu d\u00e8s qu'elle n'est plus aliment\u00e9e en \u00e9nergie.</li> <li>La m\u00e9moire permanente, qui renferme les programmes et les donn\u00e9es fondamentaux de la machine. Contrairement \u00e0 la m\u00e9moire volatile, cette m\u00e9moire conserve son contenu m\u00eame en cas de mise hors tension.</li> </ul> <p>La plupart des m\u00e9moires organisent les informations par adresses, chaque octet \u00e9tant accessible via une adresse unique.</p> <p>Pour des consid\u00e9rations \u00e9conomiques, les m\u00e9moires sont g\u00e9n\u00e9ralement regroup\u00e9es en plusieurs cat\u00e9gories distinctes.</p>"},{"location":"premiere/archi/vonneumann/#une-memoire-de-masse-ou-memoire-de-stockage","title":"Une m\u00e9moire de masse ou m\u00e9moire de stockage","text":"HDD SSD <p>Elle permet de stocker \u00e0 long terme des grandes quantit\u00e9s d\u2019informations. Les technologies les plus courantes de m\u00e9moires de masse sont \u00e9lectrom\u00e9caniques (disques durs \u2013 HDD) ou \u00e0 semi-conducteurs (SSD, clefs USB, \u2026), elles visent \u00e0 obtenir une capacit\u00e9 de stockage \u00e9lev\u00e9e \u00e0 faible co\u00fbt et ont g\u00e9n\u00e9ralement une vitesse inf\u00e9rieure aux autres m\u00e9moires.</p> <p>ordres de grandeur :</p> <ul> <li>capacit\u00e9 : jusqu\u2019\u00e0 10 To (HDD)</li> <li>vitesse : jusqu\u2019\u00e0 500 Mo/s (SSD)</li> </ul>"},{"location":"premiere/archi/vonneumann/#la-memoire-vive-ou-ram","title":"La m\u00e9moire vive, ou RAM","text":"SDRAM <p>La m\u00e9moire vive, \u00e9galement connue sous le nom de RAM (Random Access Memory), constitue l'espace principal de stockage du microprocesseur. Cependant, il s'agit d'une m\u00e9moire volatile, ce qui signifie que son contenu est perdu lorsque l'alimentation est coup\u00e9e. Elle est nomm\u00e9e RAM en raison de son acc\u00e8s rapide aux donn\u00e9es, ind\u00e9pendamment de leur emplacement.</p> <p>Ordres de grandeur :</p> <ul> <li>Capacit\u00e9 : jusqu'\u00e0 32 Go</li> <li>Vitesse : jusqu'\u00e0 2 Go/s</li> </ul>"},{"location":"premiere/archi/vonneumann/#une-memoire-cache","title":"Une m\u00e9moire cache","text":"Diff\u00e9rents niveaux de m\u00e9moire Explication de ce sch\u00e9ma <p>Mot :</p> <ul> <li>Le terme \"mot\" fait g\u00e9n\u00e9ralement r\u00e9f\u00e9rence \u00e0 la plus petite unit\u00e9 de donn\u00e9es que le processeur peut manipuler en une seule op\u00e9ration. La taille d'un mot peut varier en fonction de l'architecture du processeur, mais c'est souvent la taille des registres du processeur.</li> </ul> <p>L1 et L2 :</p> <ul> <li>\"L1\" et \"L2\" font r\u00e9f\u00e9rence aux niveaux de m\u00e9moire cache dans la hi\u00e9rarchie de m\u00e9moire d'un processeur.<ul> <li>L1 (Level 1) : C'est la premi\u00e8re couche de m\u00e9moire cache, g\u00e9n\u00e9ralement int\u00e9gr\u00e9e directement dans le processeur. Elle est de petite capacit\u00e9, mais elle offre une tr\u00e8s haute vitesse d'acc\u00e8s. Le terme \"ligne\" entre \"CPU\" et \"L1\" pourrait indiquer le flux direct de donn\u00e9es entre le processeur (CPU) et la m\u00e9moire cache de niveau 1.</li> <li>L2 (Level 2) : C'est la deuxi\u00e8me couche de m\u00e9moire cache, situ\u00e9e g\u00e9n\u00e9ralement \u00e0 proximit\u00e9 du processeur mais avec une capacit\u00e9 plus grande que la L1. La connexion entre L1 et L2 peut \u00eatre repr\u00e9sent\u00e9e par le terme \"ligne\" et indique le transfert de donn\u00e9es entre la m\u00e9moire cache de niveau 1 et la m\u00e9moire cache de niveau 2.</li> </ul> </li> </ul> <p>Bien que la RAM soit rapide, le microprocesseur l'est encore plus ! Pour \u00e9viter de limiter ses performances en le contraignant \u00e0 attendre (connu sous le terme de goulot d'\u00e9tranglement), on utilise des unit\u00e9s de m\u00e9moire plus petites, mais consid\u00e9rablement plus rapides, bien que plus co\u00fbteuses. Les diff\u00e9rentes niveaux de m\u00e9moire cache servent \u00e0 stocker temporairement des informations fr\u00e9quemment consult\u00e9es. Elles se distinguent par leur vitesse \u00e9lev\u00e9e et leur co\u00fbt important pour une capacit\u00e9 de stockage limit\u00e9e.</p> <p>Ordres de grandeur :</p> <ul> <li>Capacit\u00e9 : quelques ko (L1) \u00e0 quelques Mo (L2)</li> <li>Vitesse : jusqu'\u00e0 5 Go/s</li> </ul>"},{"location":"premiere/archi/vonneumann/#le-registre-de-processeur","title":"Le registre de processeur","text":"<p>Int\u00e9gr\u00e9 directement dans le processeur, le registre de processeur repr\u00e9sente un type de m\u00e9moire extr\u00eamement rapide mais \u00e9galement co\u00fbteux. En cons\u00e9quence, il est r\u00e9serv\u00e9 \u00e0 une quantit\u00e9 tr\u00e8s restreinte de donn\u00e9es.</p> <p>Ordres de grandeur :</p> <ul> <li>Capacit\u00e9 : quelques dizaines d'octets</li> <li>Vitesse : jusqu'\u00e0 30 Go/s</li> </ul>"},{"location":"premiere/archi/vonneumann/#les-bus","title":"Les bus","text":"<p>Afin de faciliter la circulation des donn\u00e9es entre les divers composants d'un ordinateur tels que la m\u00e9moire, le CPU et les entr\u00e9es/sorties, des syst\u00e8mes de communication appel\u00e9s bus sont utilis\u00e9s. Ces bus se d\u00e9clinent en trois cat\u00e9gories principales :</p> <ul> <li>Le bus d'adresse a pour fonction de transmettre des adresses, telles que l'adresse d'une donn\u00e9e \u00e0 extraire de la m\u00e9moire.</li> <li>Le bus de donn\u00e9es est d\u00e9di\u00e9 \u00e0 la transmission des donn\u00e9es elles-m\u00eames.</li> <li>Le bus de contr\u00f4le a pour r\u00f4le de d\u00e9finir le type d'action \u00e0 entreprendre, par exemple, l'\u00e9criture ou la lecture d'une donn\u00e9e en m\u00e9moire.</li> </ul> <p></p> Source : info.blaisepascal.fr"},{"location":"premiere/archi/vonneumann/#un-petit-qcm","title":"Un petit QCM","text":"QCM d'entra\u00eenement <p>Qu'est-ce qui caract\u00e9rise l'architecture de Von Neumann ?</p> <ol> <li>La pr\u00e9sence d'une unit\u00e9 arithm\u00e9tique et logique (UAL)</li> <li>La s\u00e9paration de la m\u00e9moire et du processeur</li> <li>L'utilisation exclusive de la m\u00e9moire permanente</li> </ol> <p>Quelle est la fonction principale de l'unit\u00e9 de commande dans l'architecture de Von Neumann ?</p> <ol> <li>Effectuer des op\u00e9rations arithm\u00e9tiques</li> <li>Contr\u00f4ler le flux d'instructions</li> <li>Stocker des donn\u00e9es \u00e0 long terme</li> </ol> <p>Quel composant est responsable de l'ex\u00e9cution des op\u00e9rations arithm\u00e9tiques dans un ordinateur de type Von Neumann ?</p> <ol> <li>Unit\u00e9 de commande</li> <li>Unit\u00e9 arithm\u00e9tique et logique (UAL)</li> <li>M\u00e9moire vive (RAM)</li> </ol> <p>Quelle est la caract\u00e9ristique principale de la m\u00e9moire volatile dans l'architecture de Von Neumann ?</p> <ol> <li>Elle conserve son contenu apr\u00e8s la mise hors tension.</li> <li>Elle est utilis\u00e9e pour le stockage \u00e0 long terme.</li> <li>Son contenu est perdu lorsqu'elle n'est plus aliment\u00e9e.</li> </ol> <p>Quel est le r\u00f4le du bus d'adresse dans un syst\u00e8me Von Neumann ?</p> <ol> <li>Faire circuler des adresses vers la m\u00e9moire</li> <li>Faire circuler des donn\u00e9es</li> <li>Contr\u00f4ler le type d'action \u00e0 effectuer</li> </ol> <p>Pourquoi utilise-t-on des m\u00e9moires caches dans l'architecture de Von Neumann ?</p> <ol> <li>Pour augmenter la capacit\u00e9 de stockage</li> <li>Pour acc\u00e9l\u00e9rer l'acc\u00e8s aux donn\u00e9es fr\u00e9quemment utilis\u00e9es</li> <li>Pour r\u00e9duire le co\u00fbt global du syst\u00e8me</li> </ol> <p>Qu'est-ce qui caract\u00e9rise la m\u00e9moire permanente dans l'architecture de Von Neumann ?</p> <ol> <li>Sa volatilit\u00e9</li> <li>Sa capacit\u00e9 \u00e0 stocker des donn\u00e9es de mani\u00e8re permanente</li> <li>Sa vitesse \u00e9lev\u00e9e d'acc\u00e8s aux donn\u00e9es</li> </ol> <p>Quel est le r\u00f4le du registre de processeur dans l'architecture de Von Neumann ?</p> <ol> <li>Stocker des donn\u00e9es de mani\u00e8re permanente</li> <li>Effectuer des op\u00e9rations arithm\u00e9tiques</li> <li>Stocker temporairement des donn\u00e9es pour un acc\u00e8s rapide</li> </ol> <p>Quelle est la base du langage machine utilis\u00e9 dans l'architecture de Von Neumann ?</p> <ol> <li>Base 8 (octal)</li> <li>Base 10 (d\u00e9cimale)</li> <li>Base 2 (binaire)</li> </ol> <p>Qui est consid\u00e9r\u00e9 comme le p\u00e8re de l'architecture de Von Neumann ?</p> <ol> <li>Alan Turing</li> <li>John von Neumann</li> <li>Charles Babbage</li> </ol>"},{"location":"premiere/archi/vonneumann/#organisation-de-la-memoire","title":"Organisation de la m\u00e9moire","text":"<p>Exercice - Organisation de la m\u00e9moire</p> <p>Pour v\u00e9rifier votre compr\u00e9hension de l'organisation de la m\u00e9moire, vous pouvez r\u00e9aliser les exercices 1 et 2 de la partie 1 du document suivant propos\u00e9 par le lyc\u00e9e Louis Feuillade :</p> <p></p>  T\u00e9l\u00e9charger la fiche d'exercices"},{"location":"premiere/archi/vonneumann/#instructions-machine","title":"Instructions machine","text":""},{"location":"premiere/archi/vonneumann/#le-transistor","title":"Le transistor","text":"<p>Vous l'avez vu, le composant principal des circuits d'un ordinateur est le transistor.</p> <p> </p> Un transistor <p>Dans un ordinateur, les transistors agissent comme des interrupteurs, adoptant deux \u00e9tats fondamentaux :</p> <ul> <li>soit le transistor autorise le passage du courant \u00e9lectrique (interrupteur ferm\u00e9),</li> <li>soit il le bloque (interrupteur ouvert). </li> </ul> <p>Cette dichotomie constitue l'essence m\u00eame du fonctionnement d'un transistor dans un ordinateur, ne laissant place qu'\u00e0 deux \u00e9tats distincts : soit le courant circule (\u00e9tat \"haut\"), soit il ne circule pas (\u00e9tat \"bas\"). Ces \u00e9tats sont souvent repr\u00e9sent\u00e9s par les chiffres <code>1</code> et <code>0</code> respectivement. Ainsi, le fonctionnement de l'ordinateur se r\u00e9sume \u00e0 l'utilisation exclusive de deux chiffres, d'o\u00f9 la raison pour laquelle il op\u00e8re en base 2 (syst\u00e8me binaire) plut\u00f4t qu'en base 10, comme dans la vie quotidienne.</p> <p>Le transistor joue un r\u00f4le central dans la construction des circuits logiques, qui permettent d'effectuer des op\u00e9rations bool\u00e9ennes. Ces op\u00e9rations sont directement li\u00e9es \u00e0 l'alg\u00e8bre de Boole, d\u00e9velopp\u00e9e par le math\u00e9maticien britannique George Boole au XIXe si\u00e8cle.</p> <p>Pour en savoir plus sur les circuits logiques, vous pouvez consulter ce cours.</p>"},{"location":"premiere/archi/vonneumann/#le-langage-machine","title":"Le langage machine","text":"<p>Le CPU se consacre exclusivement \u00e0 la gestion de grandeurs bool\u00e9ennes, d'o\u00f9 le codage en binaire des instructions qu'il ex\u00e9cute. Le langage machine (langage dit de bas niveau) englobe l'ensemble des instructions directement ex\u00e9cutables par le microprocesseur. En opposition, les langages de programmation \u00e9volu\u00e9s (langages dits de haut niveau) tels que Python ou C++, con\u00e7us pour l'interaction humaine, pr\u00e9sentent des instructions complexes op\u00e9rant sur des types de donn\u00e9es bien plus \u00e9labor\u00e9s que les simples bool\u00e9ens.</p> <p>Ainsi, une conversion du langage \u00e9volu\u00e9 vers le langage machine est n\u00e9cessaire, o\u00f9 chaque instruction \u00e9volu\u00e9e engendre plusieurs instructions \u00e9l\u00e9mentaires en langage machine. Cette transition peut se faire soit par compilation (pour l'ensemble du code, c'est le cas avec le langage C par exemple), soit par interpr\u00e9tation (au fur et \u00e0 mesure du d\u00e9roulement du code, c'est le cas avec le langage Python par exemple).</p> <p>Instruction machine</p> <p>Une instruction machine, essentiellement une cha\u00eene binaire de 32 bits, se compose principalement de deux parties :</p> <p></p> <ul> <li>le champ \"code op\u00e9ration\" sp\u00e9cifiant le type de traitement que le processeur doit r\u00e9aliser (par exemple le code \\(0010~0110\\) donne l\u2019ordre au CPU d\u2019effectuer une multiplication),</li> <li>le champ \"op\u00e9randes\" indiquant la nature des donn\u00e9es sur lesquelles l'op\u00e9ration d\u00e9sign\u00e9e par le \"code op\u00e9ration\" doit s'appliquer.</li> </ul> <p>Les instructions machines, qualifi\u00e9es d'instructions de bas niveau, englobent :</p> <ul> <li>des op\u00e9rations arithm\u00e9tiques (addition, soustraction, multiplication). Par exemple, on peut avoir une instruction qui ressemble \u00e0 \u00ab additionne la valeur contenue dans le registre R1 et le nombre 789 et range le r\u00e9sultat dans le registre R0 \u00bb.</li> <li>des transferts de donn\u00e9es entre le CPU et la m\u00e9moire vive. Par exemple, on peut avoir une instruction qui ressemble \u00e0 \u00ab prendre la valeur situ\u00e9e \u00e0 l\u2019adresse m\u00e9moire 487 et la placer dans la registre R2 \u00bb ou encore \u00ab prendre la valeur situ\u00e9e dans le registre R1 et la placer \u00e0 l\u2019adresse m\u00e9moire 512 \u00bb.</li> <li>des ruptures de s\u00e9quence. Par exemple : si l\u2019instruction n\u00b01 est situ\u00e9e \u00e0 l\u2019adresse m\u00e9moire 343, l\u2019instruction n\u00b02 sera situ\u00e9e \u00e0 l\u2019adresse m\u00e9moire 344, l\u2019instruction n\u00b03 sera situ\u00e9e \u00e0 l\u2019adresse m\u00e9moire 345\u2026 Au cours de l\u2019ex\u00e9cution d\u2019un programme, le CPU passe d\u2019une instruction \u00e0 une autre en passant d\u2019une adresse m\u00e9moire \u00e0 l\u2019adresse m\u00e9moire imm\u00e9diatement sup\u00e9rieure : Par exemple, apr\u00e8s avoir ex\u00e9cut\u00e9 l\u2019instruction n\u00b02 (situ\u00e9 \u00e0 l\u2019adresse m\u00e9moire 344), le CPU \u00ab va chercher \u00bb l\u2019instruction suivante \u00e0 l\u2019adresse m\u00e9moire 344+1=345. Les instructions de rupture de s\u00e9quence d\u2019ex\u00e9cution encore appel\u00e9es instructions de saut ou de branchement permettent d\u2019interrompre l\u2019ordre initial sous certaines conditions en passant \u00e0 une instruction situ\u00e9e une adresse m\u00e9moire donn\u00e9e. Par exemple, dans le cas o\u00f9 \u00e0 l\u2019adresse m\u00e9moire 354 nous avons l\u2019instruction suivante : \u00ab si la valeur contenue dans le registre R1 est strictement sup\u00e9rieure \u00e0 0 alors ex\u00e9cuter l\u2019instruction situ\u00e9e \u00e0 l\u2019adresse m\u00e9moire 4521 \u00bb. Si la valeur contenue dans le registre R1 est strictement sup\u00e9rieure \u00e0 0 alors la prochaine instruction \u00e0 ex\u00e9cuter est l\u2019adresse m\u00e9moire 4521, dans le contraire, la prochaine instruction \u00e0 ex\u00e9cuter est \u00e0 l\u2019adresse m\u00e9moire 355.</li> </ul> <p>Les op\u00e9randes peuvent prendre la forme de valeurs imm\u00e9diates, de registres du CPU, ou de donn\u00e9es en m\u00e9moire vive.</p>"},{"location":"premiere/archi/vonneumann/#assembleur","title":"Assembleur","text":"<p>L'assembleur facilite la lisibilit\u00e9 des instructions en rempla\u00e7ant les mots binaires par des symboles mn\u00e9moniques.</p> <p>Par exemple, l'instruction binaire suivante : </p> \\(111000101000~0010~0001~000001111101\\)  signifie :  \u00ab additionne le nombre 125 et la valeur situ\u00e9e dans le registre R2 , range le r\u00e9sultat dans le registre R1 \u00bb  et se traduit en assembleur par : \"ADD R1, R2, #125\"  Cela pr\u00e9serve ainsi la repr\u00e9sentation binaire sous-jacente tout en simplifiant la programmation.  <p>Il est \u00e0 noter que chaque \u00e9l\u00e9ment de l'instruction occupe une quantit\u00e9 de m\u00e9moire bien d\u00e9finie, par exemple, en architecture ARM :</p> <ul> <li>l'instruction ADD occupe les 12 bits de poids fort</li> <li>les adresses des registres R1 et R2 occupent chacune 4 bits</li> <li>l'op\u00e9rande #125 occupe les 12 bits de poids faible.</li> </ul> <p>Instructions de sauts</p> <p>Le simulateur de CPU que nous utiliserons prend en charge les instructions de saut suivantes :</p> <p>Vous pouvez faire un saut sans condition avec l'instruction :</p> <ul> <li><code>B &lt;label&gt;</code> : pour sauter directement \u00e0 un label indiqu\u00e9,</li> </ul> <p>Vous pouvez faire un saut avec condition, apr\u00e8s avoir ex\u00e9cut\u00e9 une instruction de comparaison <code>CMP</code> :</p> <ul> <li><code>BEQ &lt;label&gt;</code> : sauter au label indiqu\u00e9 si les deux \u00e9l\u00e9ments compar\u00e9s sont \u00e9gaux (EQ = Equal),</li> <li><code>BNE &lt;label&gt;</code> : sauter au label indiqu\u00e9 si les deux \u00e9l\u00e9ments compar\u00e9s ne sont pas \u00e9gaux (NE = Not Equal),</li> <li><code>BGT &lt;label&gt;</code> : sauter au label indiqu\u00e9 si le premier \u00e9l\u00e9ment est plus grand que le deuxi\u00e8me (GT = Greater Than),</li> <li><code>BLT &lt;label&gt;</code> : sauter au label indiqu\u00e9 si le premier \u00e9l\u00e9ment est plus petit que le deuxi\u00e8me (LT = Less Than).</li> </ul> <p>Il existe \u00e9galement d'autres instructions conditionnelles, comme <code>BGE</code> (Greater or Equal = plus grand ou \u00e9gal) ou <code>BLE</code> (Less or Equal = plus petit ou \u00e9gal), mais celles-ci ne sont pas prises en charge dans ce simulateur.</p> <p>Voici un exemple d'utilisation de sauts pour cr\u00e9er une boucle qui it\u00e8re tant que la valeur du registre <code>R0</code> est inf\u00e9rieure \u00e0 5 :</p> <pre><code>    MOV R0, #1\nencore:\n    CMP R0, #5\n    BEQ fin\n    ADD R0, R0, #1\n    B encore\nfin:\n    HALT\n</code></pre> <p>TP - Programmer en assembleur</p> <p>Pour s'entra\u00eener \u00e0 la programmation en assembleur, on travaillera avec un simulateur de CPU bas\u00e9 sur l'architecture de Von Neumann de Peter Higginson.</p> <p>Suivez les \u00e9tapes suivantes :</p> <ol> <li>D\u00e9couvrir le simulateur - lisez attentivement la page et r\u00e9alisez les quelques t\u00e2ches \u00e0 effectuer.</li> <li>T\u00e9l\u00e9charger le TP - compl\u00e9tez directement le fichier \u00e0 l'aide du logiciel LibreOffice Writer.</li> </ol> <p>Ce TP est propos\u00e9 par le lyc\u00e9e Ozenne.</p> <p>Autres exercices - Programmation en assembleur</p> <p>Pour vous entra\u00eener davantage sur la programmation en assembleur, vous pouvez \u00e9galement r\u00e9aliser les exercices de la partie 2 du document suivant propos\u00e9 par le lyc\u00e9e Louis Feuillade :</p> <p></p>  T\u00e9l\u00e9charger la fiche d'exercices"},{"location":"premiere/bases_python/","title":"Les bases du langage Python","text":""},{"location":"premiere/bases_python/#les-bases-du-langage-python","title":"Les bases du langage Python","text":""},{"location":"premiere/bases_python/#cours","title":"Cours","text":"Liste des contenus Description Cours - Introduction \u00e0 la programmation Python Cours d'introduction au langage Python (variables, types, affichage et saisie utilisateur, boucles, bool\u00e9ens, listes...)."},{"location":"premiere/bases_python/#activites","title":"Activit\u00e9s","text":"Liste des contenus Description D\u00e9couverte de l'IDE Thonny D\u00e9couverte d'un environnement de d\u00e9veloppement Python.  Jeu - Chasse au tr\u00e9sor Cr\u00e9ation d'un jeu de chasse au tr\u00e9sor avec Python. Exercices sur les fonctions Exercices sur les fonctions. Exercices sur les boucles while Exercices sur les boucles non-born\u00e9es <code>while</code>. Exercices sur les listes Exercices sur les listes en Python.  Rappels sur les fonctions Exercices de rappels sur les fonctions. Notebooks d'exercices Des notebooks Jupyter pour vous exercer."},{"location":"premiere/bases_python/#corrections-dm-et-ds","title":"Corrections DM et DS","text":"Liste des contenus Description Correction du DS 2 Correction du DS n\u00b02."},{"location":"premiere/bases_python/chassetresor/","title":"Jeu - Chasse au tr\u00e9sor","text":""},{"location":"premiere/bases_python/chassetresor/#jeu-chasse-au-tresor","title":"Jeu - Chasse au tr\u00e9sor","text":""},{"location":"premiere/bases_python/chassetresor/#presentation-et-explications","title":"Pr\u00e9sentation et explications","text":"Une image du jeu <p>Pr\u00e9sentation du jeu</p> <p>L'objectif de ce TP est de cr\u00e9er un petit jeu de chasse au tr\u00e9sor en Python, dans lequel le but est de trouver un tr\u00e9sor dans une grille de jeu de taille donn\u00e9e.  </p> <p>La grille contient des boutons cliquables. Le joueur devra alors cliquer sur les boutons de son choix, avec \u00e0 chaque erreur un indice lui indiquant s'il se rapproche ou s'il s'\u00e9loigne du tr\u00e9sor.</p> <p>Le nombre de tentatives effectu\u00e9es sera stock\u00e9 et affich\u00e9 \u00e0 la fin du jeu.</p> <p>Le module <code>tkinter</code> sera utilis\u00e9 pour g\u00e9rer l'interface graphique du jeu.</p> <p>\u00c0 t\u00e9l\u00e9charger</p> <p>T\u00e9l\u00e9chargez et ouvrez dans Thonny le fichier Python suivant :</p> <p></p> chasse_au_tresor.py Corrig\u00e9 <p>Voici le corrig\u00e9 d\u00e9taill\u00e9 de ce programme :</p> <p></p> chasse_au_tresor_corr.py <p>Prenez connaissance du programme corrig\u00e9, lisez bien les commentaires. On a ajout\u00e9 une fonction <code>desactiver_boutons_cliques()</code> qui permet de d\u00e9sactiver les boutons sur lesquels le joueur a cliqu\u00e9 (et ainsi \u00e9viter qu'il reclique dessus).</p> <p>En cas de difficult\u00e9s de compr\u00e9hension de certaines parties du programme, n'h\u00e9sitez pas \u00e0 me contacter.</p> <p>Grille de jeu et coordonn\u00e9es</p> <p>La grille de jeu est carr\u00e9e, il y a donc autant de lignes que de colonnes. Les axes en <code>x</code> et en <code>y</code> se pr\u00e9sentent ainsi :</p> <p></p> <p>Sur cette grille de taille <code>N = 5</code>, le bouton colori\u00e9 en vert aura donc pour coordonn\u00e9es <code>x = 3</code> et <code>y = 1</code>. Important : Les coordonn\u00e9es <code>x</code> et <code>y</code> commencent \u00e0 partir de l'indice <code>0</code>, et non pas <code>1</code>.</p> <p>La grille de jeu est repr\u00e9sent\u00e9e avec une nouvelle structure de donn\u00e9es : une liste.</p> <p>Une liste est cr\u00e9\u00e9e \u00e0 l'aide de crochets. Par exemple, une liste contenant les \u00e9l\u00e9ments <code>4</code>, <code>8</code> et <code>2</code> se cr\u00e9e ainsi :</p> <pre><code>liste = [4, 8, 2]\n</code></pre> <p>On peut ensuite r\u00e9cup\u00e9rer un \u00e9l\u00e9ment de cette liste \u00e0 l'aide de son indice. Les indices commencent \u00e0 partir de <code>0</code>. Pour r\u00e9cup\u00e9rer le premier \u00e9l\u00e9ment de la liste, on \u00e9crira :</p> <pre><code>liste[0]  # r\u00e9cup\u00e9rer le premier \u00e9l\u00e9ment de la liste, c'est-\u00e0-dire 1\n</code></pre> <p>Pour cr\u00e9er un tableau (\u00e0 deux dimensions), on utilise une liste de listes. Chaque ligne du tableau sera repr\u00e9sent\u00e9e par une sous-liste de la liste principale. Voici un exemple de tableau en <code>Python</code> :</p> <pre><code>tab = [ [1, 2, 3],\n        [4, 5, 6],\n        [7, 8, 0] ]\n</code></pre> <p>On a d\u00e9fini la variable <code>tab</code> sur 3 lignes ici pour la compr\u00e9hension, mais on peut tr\u00e8s bien l'\u00e9crire sur une seule ligne :</p> <pre><code>tab = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n</code></pre> <p>Ainsi, pour r\u00e9cup\u00e9rer par exemple l'\u00e9l\u00e9ment <code>4</code>, on \u00e9crira :</p> <pre><code>tab[1][0]\n</code></pre> <p>Cela correspond au premier \u00e9l\u00e9ment de la 2\u00e8me ligne.</p> <p>Constante et variables globales</p> <p>Les variables globales sont des variables qui peuvent \u00eatre utilis\u00e9es n'importe o\u00f9 dans un programme, y compris \u00e0 l'int\u00e9rieur des fonctions. Elles se trouvent g\u00e9n\u00e9ralement au d\u00e9but d'un programme, juste apr\u00e8s les imports :</p> <pre><code>N = 5  # Constante d\u00e9finissant la taille de la grille\n\n# Coordonn\u00e9es du tr\u00e9sor (choisies al\u00e9atoirement au d\u00e9but du jeu)\nTRESOR_X = randint(...)\nTRESOR_Y = randint(...)\n\n# Variables pour stocker la position de la derni\u00e8re case cliqu\u00e9e par le joueur (initialement None)\nderniere_pos_x = None\nderniere_pos_y = None\n\n# Compteur de tentatives (initialement 0)\ntentatives = 0\n</code></pre> <p>Une constante est une variable globale dont la valeur n'est pas modifi\u00e9e par le programme. Les constantes sont, par convention, \u00e9crites en MAJUSCULES. Ici, on distingue trois constantes :</p> <ul> <li><code>N</code> qui repr\u00e9sente la taille de la grille de jeu (la grille est carr\u00e9e), vous pouvez \u00e0 tout moment modifier cette valeur pour augmenter la taille de la grille de votre jeu !</li> <li><code>TRESOR_X</code> et <code>TRESOR_Y</code> qui d\u00e9finissent les coordonn\u00e9es du tr\u00e9sor dans la grille de jeu. Ces coordonn\u00e9es sont d\u00e9finies al\u00e9atoirement \u00e0 l'aide de la fonction <code>randint</code> du module <code>random</code>.</li> </ul> <p>Les autres variables globales sont :</p> <ul> <li><code>derniere_pos_x</code>, <code>derniere_pos_y</code> qui stockent les coordonn\u00e9es de la derni\u00e8re case sur laquelle le joueur a cliqu\u00e9, on les initialise \u00e0 <code>None</code> puisqu'au d\u00e9but du jeu, le joueur n'a pas encore cliqu\u00e9.</li> <li><code>tentatives</code> qui stocke le nombre de tentatives effectu\u00e9es par le joueur, on l'initialise \u00e0 <code>0</code> au d\u00e9but du jeu.</li> </ul> <p>Ces trois derni\u00e8res variables globales sont modifi\u00e9es par la fonction <code>verifier_case</code> du programme. Pour pouvoir modifier des variables globales dans une fonction, il faut les r\u00e9f\u00e9rencer avec le mot-cl\u00e9 <code>global</code> :</p> <pre><code>global tentatives, derniere_pos_x, derniere_pos_y\n</code></pre>"},{"location":"premiere/bases_python/chassetresor/#travail-a-realiser","title":"Travail \u00e0 r\u00e9aliser","text":"<p>\u00c0 faire</p> <p>Vous devez compl\u00e9ter le programme <code>chasse_au_tresor.py</code>, en rempla\u00e7ant les pointill\u00e9s <code>...</code> par le code appropri\u00e9. Les parties du programme \u00e0 compl\u00e9ter sont indiqu\u00e9es par le commentaire <code>\"\u00c0 COMPL\u00c9TER\"</code>.</p> <p>Vous devez \u00e9galement compl\u00e9ter les fonctions <code>verifier_case</code> et <code>calculer_distance</code>. Lisez bien les commentaires (pr\u00e9c\u00e9des par un <code>#</code>), qui vous aideront \u00e0 comprendre le programme.</p> <p>Pour <code>calculer_distance</code> :</p> <ul> <li>vous utiliserez la fonction native <code>abs</code> qui renvoie la valeur absolue d'un nombre donn\u00e9 en entr\u00e9e,</li> <li>vous utiliserez la distance de Manhattan.</li> </ul> <p>Aidez-vous des commentaires pour compl\u00e9ter les lignes de code incompl\u00e8tes.</p> <p>Une fois votre programme complet, ex\u00e9cutez-le pour tester votre jeu.</p>"},{"location":"premiere/bases_python/chassetresor/#aller-plus-loin","title":"Aller plus loin","text":"<p>IMPORTANT : Avant de continuer</p> <p>Pour cette partie, je vous recommande de t\u00e9l\u00e9charger le programme corrig\u00e9, afin d'avoir la version corrig\u00e9e du jeu avec de nouveaux commentaires d'explications ajout\u00e9s.</p> <p>On a \u00e9galement ajout\u00e9 une fonction <code>desactiver_boutons_cliques()</code> au programme, qui permet de d\u00e9sactiver les boutons sur lesquels le joueur a cliqu\u00e9 (et ainsi \u00e9viter qu'il reclique dessus).</p> <p>Maintenant que votre jeu est complet, on propose d'y apporter des am\u00e9liorations ! Ces am\u00e9liorations doivent permettrent de rendre le jeu plus interactif et plus difficile, tout en utilisant uniquement les notions de base nous avons vu en Python.</p> <p>\u00c0 faire</p> <p>Vous devez ajouter les deux am\u00e9liorations suivantes \u00e0 votre programme.</p> <ol> <li> <p>Limitation du nombre de tentatives : Le joueur ne dispose plus d\u2019un nombre illimit\u00e9 de tentatives. Le nombre maximal de tentatives sera fix\u00e9 par une nouvelle variable globale <code>MAX_TENTATIVES</code> (qu'il faudra d\u00e9finir en haut du programme, comme les autres variables globales). Si le joueur n\u2019a pas trouv\u00e9 le tr\u00e9sor apr\u00e8s le nombre fix\u00e9 de tentatives, le jeu affiche un message d\u2019\u00e9chec et d\u00e9sactive les boutons.</p> </li> <li> <p>Affichage de la proximit\u00e9 en nombre de cases : En plus de donner l\u2019indication <code>\u201cPlus proche !\u201d</code> ou <code>\u201cPlus loin !\u201d</code>, afficher la distance en nombre de cases par rapport au tr\u00e9sor. Il suffira d'afficher la valeur obtenue avec la fonction <code>calculer_distance()</code>. Exemple d'affichage : <code>\"Plus proche ! Vous \u00eates \u00e0 3 cases du tr\u00e9sor.\"</code>.</p> </li> </ol> <p>Pour les plus motiv\u00e9s</p> <p>Si vous vous sentez \u00e0 l'aise et motiv\u00e9, vous pouvez tenter d'apporter une nouvelle am\u00e9lioration, plus complexe \u00e0 mettre en place, consistant \u00e0 ajouter un deuxi\u00e8me tr\u00e9sor cach\u00e9.</p> <ul> <li> <p>Le jeu contiendra alors deux tr\u00e9sors cach\u00e9s \u00e0 des positions diff\u00e9rentes (d\u00e9termin\u00e9es al\u00e9atoirement).</p> </li> <li> <p>Le joueur devra trouver les deux tr\u00e9sors pour gagner. L\u2019interface devra donc afficher un message distinct pour chaque tr\u00e9sor trouv\u00e9. Exemple de message : <code>\"Bravo ! Vous avez trouv\u00e9 le tr\u00e9sor 1 en 5 tentatives !\"</code></p> </li> <li> <p>De m\u00eame, \u00e0 chaque tentative, on indiquera si le joueur est plus proche ou plus loin (ainsi que la distance en nombre de cases) par rapport au tr\u00e9sor le plus proche. Il faudra donc d\u00e9terminer lequel des deux tr\u00e9sors est le plus proche du joueur avant d'afficher le message.</p> </li> <li> <p>La partie s'arr\u00eatera si le joueur a trouv\u00e9 les deux tr\u00e9sors, ou s'il a d\u00e9pass\u00e9 la limite de tentatives fix\u00e9e par la variable globale <code>MAX_TENTATIVES</code> d\u00e9finie dans le cadre des am\u00e9liorations pr\u00e9c\u00e9dentes.</p> </li> </ul>"},{"location":"premiere/bases_python/cours/","title":"Introduction au Python","text":""},{"location":"premiere/bases_python/cours/#introduction-a-la-programmation-avec-python","title":"Introduction \u00e0 la programmation avec Python","text":""},{"location":"premiere/bases_python/cours/#vous-avez-dit-programme","title":"Vous avez dit \"programme\" ?","text":"<p>Un programme est la description d\u2019un algorithme dans un langage compr\u00e9hensible par un humain et par une machine, qui l\u2019ex\u00e9cute afin de traiter des donn\u00e9es. </p> <p>Il existe de nombreux langages de programmation, dont certains sont plus proches du langage naturel (on parle de langages de haut niveau), tandis que d\u2019autres sont plus proches de celui de la machine (on parle de langages de bas niveau), on rappelle que la machine ne comprend que le binaire, c'est-\u00e0-dire une suite de bits <code>0</code> ou <code>1</code> (nous reviendrons sur cela dans le cadre d'un autre chapitre).</p> <p>On peut citer, parmi les langages :</p> <ul> <li>de haut niveau : Python, JavaScript, Java, C#,</li> <li>de bas niveau : C, Assembleur, langage machine (le plus bas niveau possible).</li> </ul> <p>Le langage de programmation Python, que l'on utilisera dans le cadre de cet enseignement, est d\u00e9j\u00e0 utilis\u00e9 au lyc\u00e9e en math\u00e9matiques, et est \u00e9galement pr\u00e9sent dans d\u2019autres disciplines et dans le nouvel enseignement de sciences num\u00e9riques et Technologie (SNT) en seconde. Au-del\u00e0 du cadre de l'enseignement, c'est un langage extr\u00eamement populaire, car l\u2019un des plus versatiles et g\u00e9n\u00e9ralistes. Il est utilis\u00e9 aussi bien par des d\u00e9veloppeurs d\u00e9butants que par des d\u00e9veloppeurs d\u2019applications web et mobile, des ing\u00e9nieurs logiciels, des Data Scientists...</p> <p> </p> Guido Van Rossum, cr\u00e9ateur de PythonSource : Wikip\u00e9dia <p>Le langage Python a \u00e9t\u00e9 cr\u00e9\u00e9 par un ing\u00e9nieur informaticien n\u00e9erlandais du nom de Guido Van Rossum.</p> <p>La premi\u00e8re version publique date de 1991. Van Rossum a ensuite poursuivi son travail sur le projet et a travaill\u00e9 entre autres pour Google puis Dropbox. La version de Python que nous utiliserons est la version 3, disponible depuis 2008 avec des mises \u00e0 jour r\u00e9guli\u00e8res. La derni\u00e8re version en date lors de l'\u00e9criture de cet article est la version 3.11.5.</p> <p>Le langage Python est multiplateforme, vous pouvez donc l'installer sur les syst\u00e8mes d\u2019exploitation Linux, MacOs, Windows, et m\u00eame sur des smartphones dot\u00e9s du syst\u00e8me Android ou d'iOS. Il est gratuit et plac\u00e9 sous licence libre, la Python Software Foundation License (PSFL) .</p> <p>Les constructions \u00e9l\u00e9mentaires propes au langage Python sont communes \u00e0 de nombreux autres langages de programmation.</p> <p>Un programme est ainsi compos\u00e9 :</p> <ul> <li>de s\u00e9quences, (des instructions ex\u00e9cut\u00e9es l\u2019une apr\u00e8s l\u2019autre dans l\u2019ordre o\u00f9 elles sont \u00e9crites),</li> <li>de d\u00e9finitions de variables et de fonctions,</li> <li>d\u2019affectations,</li> <li>d\u2019instructions conditionnelles,</li> <li>de boucles (born\u00e9es et non-born\u00e9es),</li> <li>d'expressions et d'appels de fonctions.</li> </ul>"},{"location":"premiere/bases_python/cours/#un-ide-pour-debuter","title":"Un IDE pour d\u00e9buter","text":"<p>Il existe de nombreux environnements de d\u00e9veloppement (EDI, ou IDE en anglais) permettant de d\u00e9velopper en Python. Celui que je vous conseille pour d\u00e9buter est Thonny, cliquez-ici pour t\u00e9l\u00e9charger et d\u00e9couvrir l'IDE Thonny.</p>"},{"location":"premiere/bases_python/cours/#expressions-arithmetiques-variables-et-instructions","title":"Expressions arithm\u00e9tiques, variables et instructions","text":"<p>Le langage de programmation Python permet d'interagir avec la machine \u00e0 l'aide d'un programme appel\u00e9 interpr\u00e9teur Python. On peut l'utiliser de deux mani\u00e8res diff\u00e9rentes :</p> <ul> <li>en mode interactif, qui consiste \u00e0 dialoguer directement avec l'interpr\u00e9teur,</li> <li>en mode programme, qui consiste \u00e0 \u00e9crire un programme dans un fichier et \u00e0 le faire ex\u00e9cuter par l'interpr\u00e9teur.</li> </ul>"},{"location":"premiere/bases_python/cours/#mode-interactif","title":"Mode interactif","text":"<p>Le mode interactif s'apparente \u00e0 une calculatrice. Les trois chevrons <code>&gt;&gt;&gt;</code> indiquent que l'interpr\u00e9teur attend vos instructions.</p> <p>Par exemple, si vous saisissez <code>1 + 2</code> apr\u00e8s les chevrons et que vous appuyez sur la touche Entr\u00e9e, l'interpr\u00e9teur effectuera le calcul et affichera le r\u00e9sultat :</p> <pre><code>&gt;&gt;&gt; 1 + 2\n3\n</code></pre> <p>\u00c0 vous de jouer !</p> <p>Saisissez dans l'interpr\u00e9teur Python ci-dessous plusieurs expressions en utilisant les op\u00e9rateurs <code>+</code> (addition), <code>-</code> (soustraction), <code>*</code> (multiplication) et <code>/</code> (division).</p> <p></p>&gt;&gt;&gt;"},{"location":"premiere/bases_python/cours/#arithmetique","title":"Arithm\u00e9tique","text":"<p>En Python, on peut saisir des combinaisons d'op\u00e9rations arithm\u00e9tiques.</p> <p>Par exemple :</p> <pre><code>&gt;&gt;&gt; 2 + 5 * (10 - 1 / 2)\n49.5\n</code></pre> <p>\u00c0 noter que les espaces sont purement d\u00e9coratifs, on aurait pu \u00e9crire :</p> <pre><code>&gt;&gt;&gt; 2+6*(10-1/2)\n49.5\n</code></pre> <p>Erreur de syntaxe</p> <p>L'interpr\u00e9teur n'accepte que les expressions arithm\u00e9tiques bien form\u00e9es. Autrement, une <code>SyntaxError</code> indiquant une erreur de syntaxe sera lev\u00e9e, par exemple :</p> <pre><code>&gt;&gt;&gt; 1 + * 2\n    File \"&lt;stdin&gt;\", line 1\n    1 + * 2\n        ^\nSyntaxError: invalid syntax\n</code></pre> <p><code>&lt;stdin&gt;</code> signifie standard input (entr\u00e9e standard), on reviendra sur les notions d'entr\u00e9e standard et de sortie standard plus loin dans ce cours lorsque l'on pr\u00e9sentera les fonctions <code>input</code> et <code>print</code>.</p> <p>Erreur division par z\u00e9ro</p> <p>Un autre type d'erreur qui peut \u00eatre lev\u00e9e par l'interpr\u00e9teur Python est une <code>zeroDivisionError</code>, indiquant que l'expression contient une division par z\u00e9ro. Par exemple :</p> <pre><code>&gt;&gt;&gt; 2 / (3 - 3)\nTraceback (most recent call last):\nFile \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nZeroDivisionError: division by zero\n</code></pre> <p>Les nombres de Python peuvent \u00eatre des nombres entiers relatifs, de type <code>int</code>, et des nombres d\u00e9cimaux, que l'on appelle flottants, de type <code>float</code>.</p> <p>Les nombres entiers peuvent \u00eatre de taille arbitraire, et ne sont limit\u00e9s que par la m\u00e9moire disponible de la machine pour les stocker. Les nombres flottants quant \u00e0 eux ont une capacit\u00e9 limit\u00e9e, et les nombres d\u00e9cimaux tr\u00e8s grands et tr\u00e8s petits ne sont pas repr\u00e9sentables. (On reviendra plus tard sur la repr\u00e9sentation des nombres r\u00e9els en machine).</p> <p>Important : En Python, la virgule s\u00e9parant la partie enti\u00e8re de la partie d\u00e9cimale doit \u00eatre repr\u00e9sent\u00e9e par un point, auquel cas vous pourrez observer des comportements \u00e9tranges de l'interpr\u00e9teur.</p> <p>Diff\u00e9rentes fa\u00e7ons de diviser</p> <p>Lorsque l'on utilise l'op\u00e9rateur de division classique de Python <code>/</code>, on obtient un nombre flottant (type <code>float</code>) :</p> <pre><code>&gt;&gt;&gt; 7 / 2\n3.5\n&gt;&gt;&gt; type(7 / 2)\n&lt;class 'float'&gt;\n</code></pre> <p>Les types de base</p> <p>Vous pouvez voir ci-dessus appara\u00eetre le mot-cl\u00e9 <code>class</code>. Les classes sont une notion qui n'est abord\u00e9e qu'en terminale, mais en gros, il faut comprendre que tout ce qui est manipul\u00e9 en Python est objet. Il y a des objets de type <code>int</code> (les nombres entiers), des objets de type <code>float</code> (les nombres flottants), des objets de type <code>str</code> (les cha\u00eenes de caract\u00e8res, etc.)</p> <p>Ici, on a utilis\u00e9 une fonction appel\u00e9e <code>type</code> afin de voir de quel type est l'objet qui r\u00e9sulte de l'op\u00e9ration <code>7 / 2</code>. (On a ici la confirmation que l'on obtient bien un flottant.)</p> <p>Il existe deux autres op\u00e9rateurs bien utiles :</p> <ul> <li><code>//</code> permettant d'obtenir le quotient de la division euclidienne de deux op\u00e9randes,</li> <li><code>%</code> permettant d'obtenir le reste de la division euclidienne de deux op\u00e9randes.</li> </ul> <p>Par exemple :</p> <pre><code>&gt;&gt;&gt; 7 // 2\n3\n&gt;&gt;&gt; 7 % 2\n1\n&gt;&gt;&gt; type(7 // 2)\n&lt;class 'int'&gt;\n&gt;&gt;&gt; type(7 % 2)\n&lt;class 'int'&gt;\n</code></pre> <p>Ces deux op\u00e9rateurs renvoient donc des entiers. On rappelle que pour deux nombres entiers \\(a\\) et \\(b\\), \\(a = q \\times b + r\\), avec \\(q~=~a~//~b\\) le quotient et \\(r~=~a~\\%~b\\) le reste.</p>"},{"location":"premiere/bases_python/cours/#variables","title":"Variables","text":"<p>Saisir des expressions arithm\u00e9tiques, c'est bien. Mais une calculatrice sait d\u00e9j\u00e0 le faire !</p> <p>Nous allons maintenant introduire la notion de variable. Une variable permet de stocker une donn\u00e9e utilis\u00e9e par un programme.</p> <p>Cela se fait par une affectation qui associe une donn\u00e9e, repr\u00e9sent\u00e9e par une valeur ou une expression, avec un nom. Une expression stock\u00e9e dans une variable peut elle-m\u00eame contenir d'autres variables.</p> <p>Une variable peut s'apparenter \u00e0 une \"bo\u00eete\" sur laquelle est \u00e9crit un nom et dans laquelle on place des informations diverses (m\u00eame si dans la r\u00e9alit\u00e9, ce n'est pas tout \u00e0 fait \u00e7a). Un nom peut \u00eatre n\u2019importe quelle cha\u00eene alphanum\u00e9rique, \u00e0 l'exception de certains mots r\u00e9ser\u00e9s, et ne doit pas commencer par un chiffre.</p> <p>L\u2019op\u00e9rateur d\u2019affectation est not\u00e9 <code>=</code>. Par exemple, l\u2019instruction <code>x = 4</code> associe la valeur 4 au nom <code>x</code> :</p> <pre><code>&gt;&gt;&gt; x = 4\n&gt;&gt;&gt;\n</code></pre> <p>Si l'on saisit une instruction d'affectation dans l'interpr\u00e9teur Python, aucun r\u00e9sultat n'est affich\u00e9. Si l'on souhaite acc\u00e9der \u00e0 la valeur m\u00e9moris\u00e9e dans <code>a</code>, il suffit de saisir :</p> <pre><code>&gt;&gt;&gt; a\n4\n</code></pre> <p>L\u2019instruction <code>y = 3 + 5</code> associe la valeur de l\u2019expression situ\u00e9e \u00e0 droite du signe <code>=</code>, ici 8, au nom <code>y</code>. L\u2019instruction <code>z = x + y</code> associe la valeur de l\u2019expression situ\u00e9e \u00e0 droite du signe <code>=</code>, ici 12 (la somme des valeurs contenues dans les variables <code>x</code> et <code>y</code>), au nom <code>z</code>.</p> <p>Python permet par ailleurs d'effectuer des affectations multiples, par exemple <code>x, y, z = 1, 3, 5</code>, qui associe les valeurs 1, 3 et 5 respectivement aux noms <code>x</code>, <code>y</code> et <code>z</code>. Ceci est \u00e9quivalent \u00e0 \u00e9crire <code>x=1; y=3; z=5</code> sur une ligne ou \u00e0 effectuer les 3 affectations sur 3 lignes successives.</p> <p>\u00c0 retenir</p> <ul> <li>Une variable est compos\u00e9e d\u2019un nom (ou identificateur), d\u2019une adresse en m\u00e9moire o\u00f9 est enregistr\u00e9e une valeur (ou un ensemble de valeurs), et d\u2019un type qui d\u00e9finit ses propri\u00e9t\u00e9s.</li> <li>Une expression a une valeur qui est le r\u00e9sultat d\u2019une combinaison de variables ou d\u2019objets, de constantes et d\u2019op\u00e9rateurs.</li> <li>Une instruction est une commande qui doit \u00eatre ex\u00e9cut\u00e9e par la machine.</li> <li>Une affectation est une instruction qui commande \u00e0 la machine de cr\u00e9er une variable en lui pr\u00e9cisant son nom et la valeur qui lui est associ\u00e9e.</li> </ul> <p>Il est important de bien distinguer une expression, qui se calcule et a une valeur, d'une instruction, qui est ex\u00e9cut\u00e9e par la machine.</p> <p>\u00c0 vous de jouer !</p> <p>Voici une suite d'instructions :</p> <p></p>### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder a = 4bksl-nlb = 6bksl-nlc = a + bbksl-nlbksl-nl <p>Quelle sera la valeur contenue dans la variable <code>c</code> apr\u00e8s avoir saisi ces instructions ?  V\u00e9rifiez en ex\u00e9cutant le programme.</p> <p>M\u00eame question avec la suite d'instructions suivante :</p> <p></p>### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder a = 4bksl-nla = a py-str abksl-nlb = a + 4bksl-nlbksl-nl <p>\u00c0 vous de jouer 2 !</p> <p>Voici une suite d'instructions :</p> <pre><code>x = 3\ny = 6\nz = 4 + x * y\nx = z / 2\n</code></pre> <p>Quelle sera la valeur contenue dans la variable <code>x</code> apr\u00e8s avoir saisi ces instructions ? V\u00e9rifier en utilisant la console de Thonny. Que constatez-vous de particulier sur la valeur contenue dans <code>x</code> ?</p> R\u00e9ponse - \u00c0 vous de jouer 2 ! <p>Normalement, la console devrait afficher la valeur <code>11.0</code>. On constate que l'on obtient ici un nombre d\u00e9cimal, et non pas un nombre entier. En fait, il existe plusieurs types de donn\u00e9es que peuvent contenir les variables : les entiers, les flottants (nombres d\u00e9cimaux), mais \u00e9galement d'autres types de donn\u00e9es que l'on verra plus tard, comme les cha\u00eenes de caract\u00e8res, les bool\u00e9ens...</p> <p>Si l'on avait utilis\u00e9 l'op\u00e9rateur <code>//</code>, c'est-\u00e0-dire si l'on avait saisi <code>z // 2</code>, on aurait obtenu le quotient de la division euclidienne entre les op\u00e9randes <code>z</code> et <code>2</code>, c'est-\u00e0-dire l'entier <code>11</code>. L'op\u00e9rateur permettant d'obtenir le reste d'une division euclidienne est <code>%</code>.</p>"},{"location":"premiere/bases_python/cours/#mode-programme","title":"Mode programme","text":"<p>Le mode programme de Python consiste \u00e0 \u00e9crire une suite d\u2019instructions dans un fichier et \u00e0 les faire ex\u00e9cuter par l\u2019interpr\u00e9teur Python. Cette suite d\u2019instructions s\u2019appelle un programme (ou code source). Cela permet d'\u00e9viter d'avoir \u00e0 ressaisir \u00e0 chaque fois les instructions dans le mode interactif. Cela permet de faire la distinction entre le r\u00f4le de programmeur et celui d\u2019utilisateur d\u2019un programme.</p>"},{"location":"premiere/bases_python/cours/#affichage-sur-la-sortie-standard","title":"Affichage sur la sortie standard","text":"<p>Contrairement au mode interactif, en mode programme, les r\u00e9sultats des expressions calcul\u00e9es ne sont plus affich\u00e9s \u00e0 l\u2019\u00e9cran. Il faut utiliser pour ceci une instruction explicite d\u2019affichage. En Python, elle s\u2019appelle <code>print</code>. Par exemple :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>print(3)bksl-nl</p> <p>On peut \u00e9galement fournir \u00e0 <code>print</code> une expression, qui sera calcul\u00e9e puis affich\u00e9e :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>4 + 2 py-str 3bksl-nl</p> <p><code>print</code> est \u00e9galement capable d'afficher du texte, qui doit \u00eatre mis entre guillemets <code>\"</code> ou apostrophes <code>'</code>, par exemple :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>print(\"Bienvenue \u00e0 tous !\")bksl-nl</p> <p>On peut \u00e9galement afficher la valeur d'une variable, exemple :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>a = 34bksl-nlb = 21 + abksl-nlprint(a)  # afficher la valeur de abksl-nlprint(b)  # afficher la valeur de bbksl-nl</p> <p>Si l'on souhaite inclure la valeur d'une variable dans un texte affich\u00e9 par <code>print</code>, on peut proc\u00e9der de diff\u00e9rentes fa\u00e7ons :</p> <ul> <li>avec la concat\u00e9nation : on peut inclure notre variable dans une cha\u00eene de caract\u00e8res en utilisant la concat\u00e9nation de cha\u00eenes de caract\u00e8res. Pour cela, on transforme notre variable de type <code>int</code> en type <code>str</code> (c'est-\u00e0-dire en cha\u00eene de caract\u00e8res) avec la fonction <code>str()</code>, et on effectue la concat\u00e9nation en utilisant un <code>+</code>.</li> <li>avec des f-strings (pas au programme) : si on ajoute un <code>f</code> devant notre cha\u00eene de caract\u00e8res, on peut inclure nos variables entre accolades, et elles seront remplac\u00e9es par leur valeur. Il n'y a, dans ce cas, pas besoin de convertir le type de nos variables en <code>str</code>.</li> <li>en donnant plusieurs valeurs (plusieurs arguments) \u00e0 notre fonction <code>print</code> : dans ce cas, <code>print</code> affichera chaque valeur les unes \u00e0 la suite des autres, que cela soit des cha\u00eenes de caract\u00e8res ou non.</li> </ul> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>nombre = 42bksl-nlprint(\"Votre nombre est \" + str(nombre) + \" !\")  # avec une concat\u00e9nation de cha\u00eenes de caract\u00e8resbksl-nlbksl-nlprint(f\"Votre nombre est {nombre} !\")  # avec un f-stringbksl-nlbksl-nlprint(\"Votre nombre est \", nombre, \" !\")  # en donnant plusieurs valeurs \u00e0 printbksl-nl</p> <p>La fonction <code>print</code> effectue par d\u00e9faut un retour \u00e0 la ligne apr\u00e8s avoir affich\u00e9 les valeurs que vous lui avez donn\u00e9. Pour changer ce comportement, on peut ajouter le param\u00e8tre <code>end</code> :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>''' Utilisation du param\u00e8tre end de print. '''bksl-nlbksl-nlprint(\"abc\", end=\"\")bksl-nlprint(\"def\", end=\"\")bksl-nlprint(\"ghi\", end=\".\")bksl-nl</p> <p>Un autre param\u00e8tre que l'on peut utiliser avec la fonction <code>print</code> est le param\u00e8tre <code>sep</code>. Ce param\u00e8tre permet d'indiquer un autre caract\u00e8re pour s\u00e9parer plusieurs valeurs donn\u00e9es \u00e0 la fonction <code>print</code>, par exemple :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>''' Utilisation du param\u00e8tre end de print. '''bksl-nlbksl-nl# Initialement, la s\u00e9paration est un espace :bksl-nlprint(\"Bonjour\", \"Monsieur\", \"Demerville\")bksl-nl# Rempla\u00e7ons le s\u00e9parateur par un tiret :bksl-nlprint(\"Bonjour\", \"Monsieur\", \"Demerville\", sep=\"-\")bksl-nl</p>"},{"location":"premiere/bases_python/cours/#interaction-avec-lutilisateur-lire-sur-lentree-standard","title":"Interaction avec l'utilisateur, lire sur l'entr\u00e9e standard","text":"<p>Pour demander \u00e0 l'utilisateur de saisir une valeur, de mani\u00e8re \u00e0 pouvoir la stocker dans une variable et en faire quelque chose, on utilise la fonction <code>input</code>.</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>''' Programme qui calcule le nombre suivant celuibksl-nldonn\u00e9 par l'utilisateur. '''bksl-nlbksl-nls = input()bksl-nla = int(s)bksl-nlprint(\"le nombre suivant est \", a + 1)bksl-nl</p> <p>Attention au type</p> <p>La valeur renvoy\u00e9e par la fonction <code>input</code> est de type <code>str</code> (cha\u00eene de caract\u00e8res). Si vous voulez utiliser cette valeur dans une op\u00e9ration arithm\u00e9tique par exemple, il faut donc la convertir en <code>int</code> (nombre entier), d'o\u00f9 l'utilisation de la fonction <code>int</code> ci-dessus.</p> <p>Un programme contenant un appel \u00e0 <code>input</code> ne s'arr\u00eate que lorsque l'utilisateur a saisi une valeur et appuy\u00e9 sur la touche <code>Entr\u00e9e</code>. En attendant, le programme reste en stand-by.</p> <p>Notebook bloqu\u00e9</p> <p>Lorsque vous travaillez sur un notebook (sur Capytale par exemple), faites attention lorsque vous ex\u00e9cutez une cellule de code contenant un <code>input</code> : tant que vous ne saisissez pas de valeur attendue par la fonction <code>input</code>, l'ex\u00e9cution de la cellule ne s'arr\u00eatera pas, et vous ne pourrez ex\u00e9cuter aucune autre cellule de code pendant ce temps (si vous le faites, vous obtiendrez un message d'erreur).</p> <p>On peut \u00e9galement indiquer dans un <code>input</code> un message \u00e0 afficher, voici une exemple :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>''' Programme qui calcule le nombre suivant celuibksl-nldonn\u00e9 par l'utilisateur. '''bksl-nlbksl-nlage = input(\"Indiquez votre \u00e2ge : \")bksl-nlprint(\"Votre \u00e2ge est de :\", age, \"ans.\")bksl-nl</p> <p>Cela permet d'indiquer \u00e0 l'utilisateur la nature de la valeur attendue.</p>"},{"location":"premiere/bases_python/cours/#les-boucles-bornees-for","title":"Les boucles born\u00e9es <code>for</code>","text":"<p>R\u00e9p\u00e9ter plusieurs fois les m\u00eames instructions est assez r\u00e9barbatif. C'est pour cela qu'il existe une instruction appel\u00e9e boucle born\u00e9e, utilisant le mot-cl\u00e9 <code>for</code>, qui permet de r\u00e9p\u00e9ter plusieurs fois un bloc d'instructions. Par exemple :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>for i in range(10):bksl-nl    print(\"Je ne dois pas bavarder en cours.\")bksl-nl</p> <p>Dans la fonction <code>range</code>, on indique le nombre de fois que l'on souhaite afficher l'instruction <code>print</code>. Ici, on l'affiche 10 fois.</p> <p>En r\u00e9alit\u00e9, ce qu'il se passe, c'est que la boucle va it\u00e9rer de la valeur <code>i = 0</code> \u00e0 la valeur <code>i = 9</code> (la valeur indiqu\u00e9e dans le <code>range</code> moins 1), la variable <code>i</code> fournie \u00e0 notre boucle \u00e9tant ce l'on appelle l'indice de boucle. On dit que <code>i</code> incr\u00e9mente (augmente de 1) \u00e0 chaque it\u00e9ration de la boucle.</p> <p>En pseudo-langage, on pourrait traduire ce programme de la mani\u00e8re suivante : </p><pre><code>POUR i ALLANT DE 0 \u00e0 9 :\n    AFFICHER \"Je ne dois pas bavarder en cours\"\n</code></pre> <p>Si l'on affiche ce que contient notre variable <code>i</code> \u00e0 chaque fois :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>for i in range(10):bksl-nl    print(\"i = \", end=\"\")bksl-nl    print(i)bksl-nl</p> <p>On peut utiliser le <code>range</code> de plusieurs mani\u00e8res diff\u00e9rentes :</p> <ul> <li><code>range(valeur)</code> : avec une seule valeur enti\u00e8re, la boucle va it\u00e9rer de <code>0</code> \u00e0 <code>valeur - 1</code>,</li> <li><code>range(min, max)</code> : avec deux valeurs enti\u00e8res, la boucle va it\u00e9rer de <code>min</code> \u00e0 <code>max - 1</code>,</li> <li><code>range(min, max, pas)</code> : avec trois valeurs enti\u00e8res, la boucle va it\u00e9rer de <code>min</code> \u00e0 <code>max - 1</code> avec un pas de <code>pas</code>. Si l'on n'indique pas ce pas, il est de 1 par d\u00e9faut.</li> </ul> <p>Par exemple, si l'on souhaite afficher tous les nombres pairs de 2 \u00e0 98 :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>''' Affichage des nombres pairs de 2 \u00e0 98 '''bksl-nlbksl-nlfor nb in range(2, 99, 2):bksl-nl    print(nb)bksl-nl</p> <p>Ici, on a appel\u00e9 l'indice de boucle <code>nb</code>. On peut l'appeller comme on veut, mais on utilise souvent des noms \u00e0 une lettre comme <code>i</code>, <code>j</code> et <code>k</code>.</p> <p>On peut \u00e9galement passer la valeur de retour d'un <code>input</code> \u00e0 l'int\u00e9rieur d'un <code>range</code>, par exemple :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>''' Un compte \u00e0 rebours '''bksl-nlbksl-nlnb = input(\"Valeur initiale du compte \u00e0 rebours : \")bksl-nlfor i in range(int(nb), -1, -1):bksl-nl    print(i)bksl-nl</p> <p>Attention au type</p> <p>Le <code>range</code> ne prend que des entiers. Si vous souhaitez lui passer la valeur de retour d'un <code>input</code>, il faut donc convertir cette valeur en valeur enti\u00e8re avec la fonction <code>int</code>.</p>"},{"location":"premiere/bases_python/cours/#comparaisons-booleens-tests","title":"Comparaisons, bool\u00e9ens, tests","text":"<p>Une part importante de la conception d\u2019un programme consiste \u00e0 imaginer les diff\u00e9rents cas de figure possibles, notamment selon les entr\u00e9es fournies par l\u2019utilisateur ou les valeurs des diff\u00e9rentes variables, de mani\u00e8re \u00e0 adapter le programme \u00e0 chacun des cas. Pour traduire cela dans l\u2019\u00e9criture du programme, on peut utiliser des instructions de branchement (<code>if</code>, <code>elif</code>, <code>else</code>) qui rassemblent plusieurs blocs de code alternatifs, chacun associ\u00e9 \u00e0 une condition logique, et qui \u00e0 chaque ex\u00e9cution s\u00e9lectionne au plus l\u2019un de ces blocs.</p>"},{"location":"premiere/bases_python/cours/#les-instructions-de-branchement","title":"Les instructions de branchement","text":"<p>Les instructions <code>if</code> (si), <code>elif</code> (sinon si) et <code>else</code> (sinon) permettent d'ex\u00e9cuter des blocs de code uniquement lorsqu'une condition est remplie. Par exemple, voici un programme qui demande \u00e0 l'utilisateur de saisir un nombre et affiche un message diff\u00e9rent selon le nombre saisi :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>nb = int(input(\"Saisissez votre \u00e2ge : \"))bksl-nlif nb &lt; 5:bksl-nl    print(\"Vous \u00eates un b\u00e9b\u00e9.\")bksl-nlelif nb &lt; 12:bksl-nl    print(\"Vous \u00eates un enfant.\")bksl-nlelif nb &lt; 18:bksl-nl    print(\"Vous \u00eates un ado\")bksl-nlelif nb &lt; 40:bksl-nl    print(\"Vous \u00eates un adulte\")bksl-nlelif nb &lt; 60:bksl-nl    print(\"Vous \u00eates un vieil adulte\")bksl-nlelse:bksl-nl    print(\"Vous \u00eates un vieillard.\")bksl-nl</p> <p>Le programme est execut\u00e9 s\u00e9quentiellement, autrement dit, on v\u00e9rifie d'abord la premi\u00e8re condition, si elle est vraie, alors on affiche le message indiqu\u00e9, sinon on passe \u00e0 la deuxi\u00e8me condition, et ainsi de suite...</p> <p>Le comportement de ce programme est donc le suivant :</p> <ul> <li>si <code>nb</code> est inf\u00e9rieur \u00e0 <code>5</code> (donc compris entre <code>0</code> et <code>4</code> inclus), on affiche <code>\"Vous \u00eates un b\u00e9b\u00e9.\"</code>,</li> <li>sinon si <code>nb</code> est inf\u00e9rieur \u00e0 <code>12</code> (donc compris entre <code>5</code> et <code>11</code> inclus), on affiche <code>\"Vous \u00eates un enfant.\"</code>,</li> <li>sinon si <code>nb</code> est inf\u00e9rieur \u00e0 <code>18</code> (donc compris entre <code>12</code> et <code>17</code> inclus), on affiche <code>\"Vous \u00eates un ado.\"</code>,</li> <li>sinon si <code>nb</code> est inf\u00e9rieur \u00e0 <code>40</code> (donc compris entre <code>18</code> et <code>39</code> inclus), on affiche <code>\"Vous \u00eates un adulte.\"</code>,</li> <li>sinon si <code>nb</code> est inf\u00e9rieur \u00e0 <code>60</code> (donc compris entre <code>40</code> et <code>59</code> inclus), on affiche <code>\"Vous \u00eates un vieil adulte.\"</code>,</li> <li>sinon, (donc si l'\u00e2ge est au moins de <code>60</code>), on affiche <code>\"Vous \u00eates un vieillard.\"</code>.</li> </ul> <p>Une seule branche est donc choisie en fonction de la valeur de <code>nb</code>, et un seul message sera donc affich\u00e9.</p> <p>Voici les symboles permettant d'effectuer des comparaisons :</p> &gt; plus grand que &gt;= sup\u00e9rieur ou \u00e9gal \u00e0 == \u00e9gal \u00e0 &lt; plus petit que &lt;= inf\u00e9rieur ou \u00e9gal \u00e0 != diff\u00e9rent de <p>Homog\u00e9n\u00e9it\u00e9 des valeurs compar\u00e9es</p> <p>Lorsque vous effectuez une comparaison (utilisant l'un des symboles ci-dessus), il faut vous assurer que vous compariez bien ce qui est comparable. Vous pouvez comparer des entiers entre eux, des flottants entre eux, des cha\u00eenes de caract\u00e8res entre eux, ou encore comparer un entier avec un flottant... Mais vous ne pouvez pas, par exemple, comparer un entier avec une cha\u00eene de caract\u00e8res, ou vous obtiendrez une erreur.</p> <pre><code>&gt;&gt;&gt; 1 &lt; \"123\"\nTraceback (most recent call last):\nFile \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: '&lt;' not supported between instances of 'int' and 'str'\n</code></pre> <p>Le type <code>bool</code></p> <p>Lorsque vous effectuez une expression conditionnelle (qu'on appelera parfois test), cette expression est \u00e9valu\u00e9e par Python soit \u00e0 la valeur <code>True</code>, soit \u00e0 la valeur <code>False</code>. Voici un exemple (ex\u00e9cuter le programme pour voir le r\u00e9sultat) :</p> <p></p>### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder x = 10bksl-nltest1 = x &gt; 5bksl-nltest2 = x &gt; 15bksl-nlbksl-nlprint(\"test1 =\", test1)bksl-nlprint(\"test2 =\", test2)bksl-nl <p>Les valeurs <code>True</code> et <code>False</code> sont des valeurs bool\u00e9ennes (de type <code>bool</code>), ce sont d'ailleurs les deux seules valeurs que peut prendre une variable de ce type.</p> <p>Lorsque vous utilisez une instruction de branchement, comme <code>if &lt;condition&gt;</code>, la condition est une expression qui est \u00e9valu\u00e9e \u00e0 <code>True</code> ou <code>False</code>. Les instructions du bloc <code>if</code> ne sont ex\u00e9cut\u00e9es que si la condition est \u00e9valu\u00e9e \u00e0 <code>True</code>.</p> <p>Par exemple :</p> <pre><code>age = 30\nmajeur = age &gt;= 18\nif majeur:\n    print(\"Vous \u00eates majeur\")\n</code></pre> <p>Ici, l'expression <code>age &gt;= 18</code> est \u00e9valu\u00e9e \u00e0 <code>True</code>, et la valeur <code>True</code> est stock\u00e9e dans la variable <code>majeur</code>. Ainsi, on rentre bien dans le bloc <code>if</code>.</p> <p>Cela revient au m\u00eame r\u00e9sultat que d'\u00e9crire :</p> <pre><code>age = 30\nif age &gt;= 18:\n    print(\"Vous \u00eates majeur\")\n</code></pre>"},{"location":"premiere/bases_python/cours/#les-operateurs-logiques","title":"Les op\u00e9rateurs logiques","text":"<p>En Python, des op\u00e9rateurs logiques permettent de combiner plusieurs conditions et ainsi r\u00e9duire le nombre d'instructions de branchement n\u00e9cessaires.</p>"},{"location":"premiere/bases_python/cours/#loperateur-and","title":"L'op\u00e9rateur <code>and</code>","text":"<p>Si l'on souhaite par exemple v\u00e9rifier deux conditions \u00e0 la fois et afficher le message <code>\"OK\"</code> lorsque les deux conditions sont v\u00e9rifi\u00e9es, on peut proc\u00e9der ainsi :</p> <pre><code>if &lt;condition 1&gt;:\n    if &lt;condition 2&gt;:\n        print(\"OK !\")\n</code></pre> <p>Plut\u00f4t que d'utiliser deux instructions <code>if</code>, on peut obtenir le m\u00eame comportement en utilisant l'op\u00e9rateur logique <code>and</code> de la mani\u00e8re suivante :</p> <pre><code>if &lt;condition 1&gt; and &lt;condition 2&gt;:\n    print(\"OK\")\n</code></pre> <p>En effet, ici, on entre dans le bloc <code>if</code> seulement si le test <code>&lt;condition 1&gt; and &lt;condition 2&gt;</code> est \u00e9valu\u00e9 \u00e0 <code>True</code>, c'est-\u00e0-dire si la condition 1 ET la condition 2 sont toutes les deux vraies (\u00e9valu\u00e9es au bool\u00e9en <code>True</code>).</p> <p>On peut bien s\u00fbr utiliser autant de fois l'op\u00e9rateur <code>and</code> que l'on souhaite \u00e0 l'int\u00e9rieur d'un test, voici un exemple :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>taille = 175bksl-nlpoids = 70bksl-nlif taille &gt; 170 and taille &lt; 180 and poids &gt; 60 and poids &lt; 80:bksl-nl    print(\"Vous pouvez entrer\")bksl-nl</p> <p>Ici, le message <code>\"Vous pouvez entrer\"</code> est affich\u00e9 uniquement si les 4 conditions <code>taille &gt; 170</code>, <code>taille &lt; 180</code>, <code>poids &gt; 60</code>, <code>poids &lt; 80</code> sont v\u00e9rifi\u00e9es.</p>"},{"location":"premiere/bases_python/cours/#loperateur-or","title":"L'op\u00e9rateur <code>or</code>","text":"<p>Autre situation : on souhaite maintenant tester deux conditions, et v\u00e9rifier si seulement l'une ou l'autre est vraie, ou si les deux sont vraies \u00e0 la fois.</p> <p>En utilisant des instructions de branchement, on pourrait \u00e9crire :</p> <pre><code>if &lt;condition 1&gt;:\n    print(\"OK !\")\nelif &lt;condition 2&gt;:\n    print(\"OK !\")\nelse:\n    print(\"Pas ok.\")\n</code></pre> <p>Ici encore, on peut r\u00e9duire le nombre d'instructions de branchement en introduisant l'op\u00e9rateur logique <code>or</code> :</p> <pre><code>if &lt;condition 1&gt; or &lt;condition 2&gt;:\n    print(\"OK !\")\nelse:\n    print(\"Pas ok.\")\n</code></pre> <p>Un op\u00e9rateur paresseux</p> <p>L'op\u00e9rateur <code>or</code> poss\u00e8de une caract\u00e9ristique int\u00e9ressante. En effet, si vous utilisez un <code>or</code> entre deux conditions, Python n'\u00e9valuera pas la deuxi\u00e8me condition si la premi\u00e8re est \u00e9valu\u00e9e \u00e0 <code>True</code>. Par exemple :</p> <pre><code>x = 35\ny = 15\nif x &gt;= 30 or y &lt;= 20:\n    print(\"OK\")\n</code></pre> <p>Ici, l'expression <code>y &lt;= 20</code> ne sera pas \u00e9valu\u00e9e car la premi\u00e8re expression <code>x &gt;= 30</code> est \u00e9valu\u00e9e \u00e0 <code>True</code>. \u00c9tant donn\u00e9 que seule l'une ou l'autre des conditions doit \u00eatre vraie pour que le test <code>x &gt;= 30 or y &lt;= 20</code> soit v\u00e9rifi\u00e9, on a pas besoin de tester la deuxi\u00e8me condition.</p> <p>Voici un autre exemple en utilisant deux op\u00e9rateurs <code>or</code> :</p> <pre><code>x = 35\ny = 15\nz = 'hello'\nif x &gt;= 50 or y &lt;= 20 or z == 'hello':\n    print(\"OK\")\n</code></pre> <p>Ici, on \u00e9valuera le premi\u00e8re et la deuxi\u00e8me condition, mais pas la troisi\u00e8me, car la deuxi\u00e8me condition <code>y &lt;= 20</code> est \u00e9valu\u00e9e \u00e0 <code>True</code>.</p> <p>Tout comme pour le <code>and</code>, on peut accumuler autant de fois l'op\u00e9rateur <code>or</code> qu'on le souhaite dans un test, on peut \u00e9galement combiner des <code>and</code> et des <code>or</code>, par exemple :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>age = 15bksl-nlaccompagne = Truebksl-nlif age &gt;= 18 and age &lt; 70 or accompagne:bksl-nl    print(\"Vous pouvez entrer\")bksl-nl</p> <p>Priorit\u00e9 des op\u00e9rations : </p> <p>En Python, la priorit\u00e9 des op\u00e9rateurs logiques est la suivante :</p> <ul> <li><code>not</code> \u2013 plus haute priorit\u00e9</li> <li><code>and</code> \u2013 priorit\u00e9 interm\u00e9diaire</li> <li><code>or</code> \u2013 plus basse priorit\u00e9</li> </ul> <p>Cela signifie que dans une expression contenant plusieurs op\u00e9rateurs, les termes de l'expression utilisant le <code>not</code> sont \u00e9valu\u00e9s en premier, puis viennent ensuite les termes de l'expression utilisant le <code>and</code>, et enfin les termes de l'expression utilisant le <code>or</code>. Apr\u00e8s avoir appliqu\u00e9 les priorit\u00e9s, l'\u00e9valuation s'effectue de gauche \u00e0 droite.</p> <p>On peut toutefois obtenir des diff\u00e9rences dans le r\u00e9sultat bool\u00e9en obtenu en ajoutant des parenth\u00e8ses pour forcer un ordre d\u2019\u00e9valuation diff\u00e9rent, par exemple :</p> <pre><code>&gt;&gt;&gt; x = 5\n&gt;&gt;&gt; y = 10\n&gt;&gt;&gt; z = 15\n&gt;&gt;&gt; x &gt; 0 or y &gt; 10 and z &gt; 20  # True or False and False =&gt; True or False =&gt; True\nTrue\n&gt;&gt;&gt; (x &gt; 0 or y &gt; 10) and z &gt; 20  # (True or False) and False =&gt; True and False =&gt; False\nFalse\n&gt;&gt;&gt; x &gt; 0 or y &lt; 0 and not z == 15  # True or False and not True =&gt; True or False and False =&gt; True or False =&gt; True\nTrue\n&gt;&gt;&gt; (x &gt; 0 or y &lt; 0) and not z == 15  # (True or False) and not True =&gt; True and False =&gt; False\nFalse\n</code></pre>"},{"location":"premiere/bases_python/cours/#loperateur-not","title":"L'op\u00e9rateur <code>not</code>","text":"<p>L'op\u00e9rateur logique <code>not</code> utilis\u00e9e sur une expression bool\u00e9enne renvoie <code>True</code> si l'expression est \u00e9valu\u00e9e \u00e0 <code>False</code>, et <code>False</code> si l'expression est \u00e9valu\u00e9e <code>True</code>.</p> <p>Voici un exemple :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>x = 10bksl-nltest1 = x &gt; 5bksl-nltest2 = not (x &gt; 5)bksl-nlbksl-nlprint(\"test1 =\", test1)bksl-nlprint(\"test2 =\", test2)bksl-nl</p>"},{"location":"premiere/bases_python/cours/#tables-de-verite","title":"Tables de v\u00e9rit\u00e9","text":"<p>Les op\u00e9rateurs logiques <code>and</code>, <code>or</code> et <code>not</code> permettent de combiner des expressions bool\u00e9ennes pour cr\u00e9er des conditions plus complexes. Voici les tables de v\u00e9rit\u00e9 qui montrent comment ces op\u00e9rateurs fonctionnent.</p> <code>A</code> <code>B</code> <code>A and B</code> True True True True False False False True False False False False <code>A</code> <code>B</code> <code>A or B</code> True True True True False True False True True False False False <code>A</code> <code>not A</code> True False False True <p>Ces tables montrent que l'op\u00e9rateur <code>and</code> ne renvoie <code>True</code> que si les deux op\u00e9randes sont vraies, tandis que l'op\u00e9rateur <code>or</code> renvoie <code>True</code> si au moins une des op\u00e9randes est vraie. L'op\u00e9rateur <code>not</code>, quant \u00e0 lui, inverse la valeur bool\u00e9enne.</p>"},{"location":"premiere/bases_python/cours/#les-fonctions","title":"Les fonctions","text":"<p>Vous avez jusqu'ici utilis\u00e9 plusieurs fonctions natives de Python, comme <code>print</code>, <code>input</code>, <code>int</code> (la fonction, pas le type), <code>range</code>...</p> <p>Les fonctions permettent de cr\u00e9er des fragments de code r\u00e9utilisables. Cela va nous permettre d'aller beaucoup plus loin dans la conception de nos programmes, en cr\u00e9ant des fonctions pour effectuer certaines t\u00e2ches autant de fois qu'on le souhaite, et pour diff\u00e9rentes valeurs d'entr\u00e9e.</p> <p>Pour d\u00e9finir une fonction, on utilise le mot-cl\u00e9 <code>def</code>, suivi du nom de la fonction, suivi de <code>:</code>, puis vient ensuite (\u00e0 la ligne, avec une identation) le bloc d'instructions \u00e0 ex\u00e9cuter dans la fonction.</p> <p>Une fonction = une t\u00e2che</p> <p>Il est fortement conseill\u00e9, pour la clart\u00e9 du code, de faire en sorte qu'une fonction ne repr\u00e9sente qu'une seule t\u00e2che.</p> <p>Par exemple, voici une fonction qui prend deux nombres entiers et renvoie la somme de ces deux nombres :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>def somme(a, b):bksl-nl    ''' Fonction qui renvoie la somme des entiers a et b. '''bksl-nl    return a + bbksl-nl</p> <p>Pour tester cette fonction, vous pouvez l'appeler dans l'interpr\u00e9teur  (en saisissant l'instruction d'appel apr\u00e8s les trois chevrons <code>&gt;&gt;&gt;</code> et en appuyant sur la touche <code>Entr\u00e9e</code>) apr\u00e8s avoir ex\u00e9cut\u00e9 le programme. Par exemple, entrez l'instruction <code>somme(3,5)</code> dans l'interpr\u00e9teur ci-dessus apr\u00e8s ex\u00e9cution du programme pour observer le r\u00e9sultat.</p> <p>Vous pouvez \u00e9galement appeller cette fonction directement dans le programme, mais pour afficher la valeur renvoy\u00e9e, il faudra ajouter un <code>print</code> :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>def somme(a, b):bksl-nl    ''' Fonction qui renvoie la somme des entiers a et b. '''bksl-nl    return a + bbksl-nlbksl-nlprint(\"La somme de 4 et de 8 vaut : \", somme(4, 8))bksl-nl</p> <p>La valeur renvoy\u00e9e par la fonction est indiqu\u00e9e avec le mot-cl\u00e9 <code>return</code>. Lorsque le <code>return</code> est rencontr\u00e9, on sort de la fonction. Ainsi, si vous rajoutez des instructions apr\u00e8s ce <code>return</code>, elles ne seront pas ex\u00e9cut\u00e9es, exemple :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>def somme(a, b):bksl-nl    ''' Fonction qui renvoie la somme des entiers a et b. '''bksl-nl    return a + bbksl-nl    print(\"Ce message n'apparaitra pas.\")bksl-nl</p>"},{"location":"premiere/bases_python/cours/#fonctions-sans-parametres","title":"Fonctions sans param\u00e8tres","text":"<p>Une fonction peut ne pas avoir de param\u00e8tres. Par exemple, voici une fonction qui renvoie une valeur al\u00e9atoire entre 1 et 100, en appelant la fonction <code>randint</code> du module <code>random</code> :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>from random import randintbksl-nlbksl-nldef valeurpy-undaleatoire():bksl-nl    return randint(1,100)bksl-nlbksl-nlprint(\"Valeur al\u00e9atoire : \", valeurpy-undaleatoire())bksl-nl</p> <p>Ici, on appelle la fonction sans lui fournir de valeurs, mais la fonction appel\u00e9e renvoie bien une valeur (le mot-cl\u00e9 <code>return</code> est bien pr\u00e9sent).</p>"},{"location":"premiere/bases_python/cours/#fonctions-sans-valeur-de-retour-procedures","title":"Fonctions sans valeur de retour : proc\u00e9dures","text":"<p>Il est \u00e9galement possible de cr\u00e9er une fonction qui ne contient pas de valeur de retour (pas de <code>return</code>). Par exemple :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>def hurler(message):bksl-nl    messagepy-undmaj = message.upper()  # mettre le message en majusculesbksl-nl    print(messagepy-undmaj)  # afficher le nouveau messagebksl-nlbksl-nlhurler(\"houraaaaa !!!\")bksl-nl</p> <p>On cr\u00e9e ici une fonction qui contient un param\u00e8tre <code>message</code>, et qui affiche avec <code>print</code> ce message, mais ne renvoie rien. La fonction est ensuite appel\u00e9e, avec le message <code>\"HOURAAAAAAAAAAA !!!\"</code> qui est donc affich\u00e9.</p> <p>Les fonctions qui ne renvoient rien peuvent \u00eatre appel\u00e9es proc\u00e9dures. Toutefois, en Python, il n'y a techniquement pas de distinction entre les fonctions et les proc\u00e9dures, contrairement \u00e0 d'autres langages comme le Java par exemple.</p>"},{"location":"premiere/bases_python/cours/#variables-locales-et-globales","title":"Variables locales et globales","text":"<p>Lorsque vous d\u00e9finissez une variable \u00e0 l'int\u00e9rieur d'une fonction, cette variable n'existe qu'\u00e0 l'int\u00e9rieur de la fonction. C'est \u00e9galement le cas pour les param\u00e8tres des fonctions.</p> <p>Par exemple, dans la fonction ci-dessous, on a cr\u00e9\u00e9 une variable <code>resultat</code>. Cette variable, ainsi que les param\u00e8tres <code>a</code> et <code>b</code> (qui sont \u00e9galement des variables), ne sont d\u00e9finis qu'\u00e0 l'int\u00e9rieur de la fonction. :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>def produit(a, b):bksl-nl    resultat = 1bksl-nl    for py-und in range(b):bksl-nl        resultat = resultat py-str abksl-nl    return resultatbksl-nl</p> <p>On peut donc tr\u00e8s bien, par exemple, avoir une autre variable avec le nom <code>resultat</code> \u00e0 l'ext\u00e9rieur de la fonction, qui contiendrait une autre valeur :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>def produit(a, b):bksl-nl    resultat = 1bksl-nl    for py-und in range(b):bksl-nl        resultat = resultat py-str abksl-nl    return resultatbksl-nlbksl-nlresultat = produit(5, 6)  # appeler produit sur 5 et 6 et stocker la valeur de retour dans resultatbksl-nlprint(resultat)  # afficher le r\u00e9sultatbksl-nl</p>"},{"location":"premiere/bases_python/cours/#les-boucles-non-bornees-while","title":"Les boucles non born\u00e9es <code>while</code>","text":"<p>Nous avons vu qu'il \u00e9tait possible de cr\u00e9er des boucles born\u00e9es \u00e0 l'aide d'instructions utilisant le mot-cl\u00e9 <code>for</code>. Nous allons voir ici que l'on peut \u00e9galement cr\u00e9er des boucles non born\u00e9es \u00e0 l'aide du mot-cl\u00e9 <code>while</code> (qui signifie TANT QUE en fran\u00e7ais).</p> <p>Une boucle non born\u00e9e permet d'ex\u00e9cuter un bloc d'instructions plusieurs fois, et de continuer TANT QUE une condition donn\u00e9e est v\u00e9rifi\u00e9e.</p> <p>La structure d'une boucle <code>while</code> en Python est la suivante :</p> <pre><code>while condition:\n    # Bloc d'instructions \u00e0 r\u00e9p\u00e9ter tant que la condition est vraie\n</code></pre> <p>La boucle <code>while</code> commence par \u00e9valuer la condition :</p> <ul> <li>Si la condition est vraie, le bloc d'instructions \u00e0 l'int\u00e9rieur de la boucle est ex\u00e9cut\u00e9.</li> <li>Apr\u00e8s chaque ex\u00e9cution du bloc, la condition est \u00e0 nouveau \u00e9valu\u00e9e :<ul> <li>Tant que la condition reste vraie, la boucle continue de s'ex\u00e9cuter.</li> <li>D\u00e8s que la condition devient fausse, la boucle s'arr\u00eate.</li> </ul> </li> </ul> <p>Voici un premier exemple d'utilisation d'une boucle <code>while</code> (cliquez sur le premier bouton, Lancer, pour ex\u00e9cuter le programme):</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>i = 1bksl-nlwhile i &lt;= 5:bksl-nl    print(i)bksl-nl    i += 1bksl-nl</p> <p>Dans cet exemple, la boucle <code>while</code> est utilis\u00e9e pour afficher les nombres de <code>1</code> \u00e0 <code>5</code>. La variable <code>i</code> est initialis\u00e9e \u00e0 <code>1</code>, et la boucle continue TANT QUE <code>i</code> est inf\u00e9rieur ou \u00e9gal \u00e0 <code>5</code>. \u00c0 chaque it\u00e9ration de la boucle, la valeur de <code>i</code> est ici affich\u00e9e (\u00e0 l'aide du <code>print</code>), puis est incr\u00e9ment\u00e9e de <code>1</code> \u00e0 l'aide de l'instruction <code>i += 1</code>. La boucle s'arr\u00eate lorsque <code>i</code> atteint <code>6</code>, car la condition devient fausse.</p> <p>Voici un autre exemple un peu plus concret de l'utilisation d'une boucle <code>while</code> :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>motpy-unddepy-undpasse = \"secret\"bksl-nlessaispy-undrestants = 3bksl-nlbksl-nlwhile essaispy-undrestants &gt; 0:bksl-nl    tentative = input(\"Entrez le mot de passe : \")bksl-nl    bksl-nl    if tentative == motpy-unddepy-undpasse:bksl-nl        print(\"Acc\u00e8s autoris\u00e9 !\")bksl-nl        break  # Sortir de la bouclebksl-nl    else:bksl-nl        essaispy-undrestants -= 1bksl-nl        print(f\"Mot de passe incorrect. Il vous reste {essaispy-undrestants} essais.\")bksl-nlbksl-nlif essaispy-undrestants == 0:bksl-nl    print(\"Nombre maximal d'essais atteint. Acc\u00e8s refus\u00e9.\")bksl-nl</p> <p>Dans cet exemple, une boucle <code>while</code> est utilis\u00e9e pour demander \u00e0 l'utilisateur (\u00e0 l'aide de la fonction <code>input</code>) de saisir un mot de passe jusqu'\u00e0 trois essais. La boucle continue tant qu'il reste des essais (tant que <code>essais_restants &gt; 0</code>) :</p> <ul> <li>Si l'utilisateur saisit le mot de passe correct (c'est-\u00e0-dire lorsque <code>tentative == mot_de_passe</code>), la boucle s'arr\u00eate \u00e0 l'aide de l'instruction <code>break</code>. L'instruction <code>break</code> permet de sortir directement de la boucle, et \u00e9vite donc de r\u00e9-\u00e9valuer sa condition.</li> <li>Sinon, le nombre d'essais restants est d\u00e9cr\u00e9ment\u00e9 (cela signifie que l'on soustrait 1 \u00e0 <code>essais_restants</code>), et un message est affich\u00e9 (\u00e0 l'aide de la fonction <code>print</code>) pour informer l'utilisateur du nombre d'essais restants.</li> </ul> <p>Une fois que l'on est sorti de la boucle (ce qui se produit soit si on a rencontr\u00e9 l'instruction <code>break</code>, soit si la condition de la boucle est fausse), on affiche un message d'acc\u00e8s refus\u00e9 si le nombre maximal d'essais a \u00e9t\u00e9 atteint.</p> <p>Attention aux boucles infinies !</p> <p>Dans une boucle non born\u00e9e <code>while</code>, contrairement \u00e0 une boucle born\u00e9e <code>for</code>, il y a un risque de cr\u00e9er boucle infinie, c'est-\u00e0-dire une boucle dont la condition n'est jamais \u00e9valu\u00e9e \u00e0 <code>False</code>. Par exemple :</p> <pre><code>i = 1\nwhile i &lt; 5:\n    print(i)\n</code></pre> <p>Ici, on n'a pas \u00e9crit d'instruction permettant d'incr\u00e9menter la variable <code>i</code>, donc la condition <code>i &lt; 5</code> sera toujours vraie. Le programme ne s'arr\u00eatera donc jamais.</p> <p>\u00c0 vous de jouer !</p> <p>\u00c9crivez un programme en Python qui demande \u00e0 l'utilisateur d'entrer un nombre entier positif <code>n</code>. Ensuite, utilisez une boucle <code>while</code> pour calculer la somme de tous les entiers de <code>1</code> \u00e0 <code>n</code>. Affichez ensuite le r\u00e9sultat.</p> <p>Voici un exemple d'ex\u00e9cution du programme :</p> <pre><code>Entrez un nombre entier positif : 5\nLa somme des entiers de 1 \u00e0 5 est : 15\n</code></pre> Cliquez ici pour afficher l'aide <p>Voici comment proc\u00e9der pour r\u00e9aliser ce programme :</p> <ol> <li>Utilisez la fonction <code>input</code> pour demander \u00e0 l'utilisateur de saisir un nombre entier positif, vous stockerez la valeur saisie dans une variable que vous pourrez appeler <code>n</code>. N'oubliez de convertir cette valeur en entier \u00e0 l'aide de la fonction <code>int</code>.</li> <li>Cr\u00e9ez une variable pour accumuler la somme totale, que vous initialiserez \u00e0 <code>0</code> avant d'entrer dans la boucle.</li> <li>Cr\u00e9ez une variable que vous appelerez <code>i</code> par exemple, qui prendra chaque valeur de 1 \u00e0 <code>n</code>.</li> <li>Utilisez une boucle <code>while</code> qui continue tant que <code>i</code> est inf\u00e9rieur ou \u00e9gal \u00e0 <code>n</code>, pour ajouter les entiers de <code>1</code> \u00e0 <code>n</code> \u00e0 la somme totale.</li> <li>N'oubliez pas d'incr\u00e9menter la valeur de <code>i</code> \u00e0 chaque it\u00e9ration de la boucle.</li> <li>Enfin, apr\u00e8s la boucle, affichez le r\u00e9sultat \u00e0 l'aide de la fonction <code>print</code>.</li> </ol> <p>Vous pouvez r\u00e9aliser ce programme sur Thonny ou dans l'IDE ci-dessous (vous pourrez t\u00e9l\u00e9charger votre programme en cliquant sur le deuxi\u00e8me bouton pour le conserver.)</p> <p></p>### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder"},{"location":"premiere/bases_python/cours/#les-listes","title":"Les listes","text":"<p>En programmation en langage Python, les listes sont l'une des structures de donn\u00e9es les plus couramment utilis\u00e9es. Une liste (objet de type <code>list</code>) est une collection ordonn\u00e9e d'\u00e9l\u00e9ments pouvant \u00eatre de diff\u00e9rents types (nombres entiers, flottants, cha\u00eenes de caract\u00e8res, objets, etc.). Les listes sont extr\u00eamement flexibles et permettent de stocker et de manipuler des donn\u00e9es de mani\u00e8re efficace.</p>"},{"location":"premiere/bases_python/cours/#creation-dune-liste","title":"Cr\u00e9ation d'une liste","text":"<p>Pour cr\u00e9er une liste en Python, on utilise les crochets <code>[]</code>.</p>"},{"location":"premiere/bases_python/cours/#creer-une-liste-vide","title":"Cr\u00e9er une liste vide","text":"<p>Une liste vide est cr\u00e9\u00e9e simplement avec des crochets vides <code>[]</code>.</p> <p>Si l'on veut stocker une nouvelle liste vide dans une variable, par exemple dans une variable appel\u00e9e <code>ma_liste_vide</code>, il suffit de faire une affectation :</p> <pre><code>&gt;&gt;&gt; ma_liste_vide = []\n&gt;&gt;&gt; ma_liste_vide\n[]\n</code></pre>"},{"location":"premiere/bases_python/cours/#creer-une-liste-non-vide","title":"Cr\u00e9er une liste non vide","text":"<p>On peut \u00e9galement cr\u00e9er une liste et directement y mettre des \u00e9l\u00e9ments, en les s\u00e9parant par des virgules. Voici un exemple :</p> <pre><code>&gt;&gt;&gt; ma_liste = [1, 2, 3, 4, 5]\n&gt;&gt;&gt; ma_liste\n[1, 2, 3, 4, 5]\n</code></pre> <p>On aurait \u00e9galement pu cr\u00e9er cette liste en utilisant la m\u00e9thode de cr\u00e9ation de liste par compr\u00e9hension, en utilisant une boucle :</p> <pre><code>&gt;&gt;&gt; ma_liste = [v for v in range(1, 6)]\n&gt;&gt;&gt; ma_liste\n[1, 2, 3, 4, 5]\n</code></pre> <p>Si l'on voulait cr\u00e9er une liste contenant tous les nombres pairs de 2 \u00e0 98 en utilisant la m\u00e9thode par compr\u00e9hension, on aurait \u00e9crit :</p> <pre><code>&gt;&gt;&gt; ma_liste = [v for v in range(2, 99, 2)]\n</code></pre> <p>ou bien, en ajoutant une condition <code>if</code> :</p> <pre><code>&gt;&gt;&gt; ma_liste = [v for v in range(2, 99) if v % 2 == 0]\n</code></pre> <p>Une liste peut contenir n'importe quel type d'\u00e9l\u00e9ment, y compris d'autres listes. Par exemple :</p> <pre><code>&gt;&gt;&gt; liste_mixte = [1, \"texte\", 3.14, [10, 20, 30]]\n&gt;&gt;&gt; liste_mixte\n[1, \"texte\", 3.14, [10, 20, 30]]\n</code></pre>"},{"location":"premiere/bases_python/cours/#acces-aux-elements-dune-liste","title":"Acc\u00e8s aux \u00e9l\u00e9ments d'une liste","text":"<p>Vous pouvez acc\u00e9der aux \u00e9l\u00e9ments individuels d'une liste en utilisant leur indice (position) dans la liste. L'indice commence \u00e0 <code>0</code> pour le premier \u00e9l\u00e9ment, puis aumgente de <code>1</code> en <code>1</code>.</p> Une liste d'\u00e9l\u00e9ments avec les indices (en vert) associ\u00e9s. <p>Voici comment acc\u00e9der aux \u00e9l\u00e9ments d'une liste :</p> <pre><code>&gt;&gt;&gt; ma_liste = [10, 20, 30, 40, 50]  # cr\u00e9ation d'une liste\n&gt;&gt;&gt; ma_liste[0] # acc\u00e8s au premier \u00e9l\u00e9ment (indice 0)\n10\n&gt;&gt;&gt; ma_liste[2] # acc\u00e8s au troisi\u00e8me \u00e9l\u00e9ment (indice 2)\n30\n</code></pre> <p>On peut bien s\u00fbr stocker ces \u00e9l\u00e9ments dans de nouvelles variables :</p> <pre><code>&gt;&gt;&gt; ma_liste = [10, 20, 30, 40, 50]  # cr\u00e9ation d'une liste\n&gt;&gt;&gt; el = ma_liste[3]  # acc\u00e8s au quatri\u00e8me \u00e9l\u00e9ment (indice 3)\n&gt;&gt;&gt; el\n40\n</code></pre> <p>La fonction <code>len</code></p> <p>La fonction <code>len</code> est une fonction permettant d'obtenir le nombre d'\u00e9l\u00e9ments d'une liste, d'un tuple, d'un dictionnaire ou encore d'une cha\u00eene de caract\u00e8res.</p> <p>Il suffit d'appeler <code>len</code> en lui donnant comme entr\u00e9e une liste dont on cherche \u00e0 d\u00e9terminer le nombre d'\u00e9l\u00e9ments, et la fonction renverra le nombre d'\u00e9l\u00e9ments de la liste.</p> <p>Exemple :</p> <pre><code>&gt;&gt;&gt; lst = [2, 4, 6, 8, 10, 12]\n&gt;&gt;&gt; len(lst)\n6\n</code></pre> <p>Si l'on dipose d'une liste dont on ne sait pas combien elle contient d'\u00e9l\u00e9ments, et qu'on souhaite trouver le dernier \u00e9l\u00e9ment de cette liste, on peut alors utiliser la fonction <code>len</code> pour trouver l'indice de cet \u00e9l\u00e9ment, et ainsi acc\u00e9der \u00e0 l'\u00e9l\u00e9ment.</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>from random import randintbksl-nlbksl-nl# Cr\u00e9er une liste de taille et d'\u00e9l\u00e9ments al\u00e9atoiresbksl-nllst = [randint(0, 100) for py-und in range(1, randint(1, 51))]bksl-nlbksl-nl# On cherche le dernier \u00e9l\u00e9ment de cette listebksl-nlprint(\"taille : \", len(lst))  # afficher la taille de lstbksl-nldernierpy-undel = lst[len(lst) - 1]  # r\u00e9cup\u00e9rer le dernier \u00e9l\u00e9mentbksl-nlprint(\"dernier \u00e9l\u00e9ment : \", dernierpy-undel)  # afficher l'\u00e9l\u00e9mentbksl-nl</p> <p>Explication</p> <p>Pour obtenir l'indice du dernier \u00e9l\u00e9ment d'une liste, il suffit donc de retirer 1 \u00e0 la taille de cette liste.</p>"},{"location":"premiere/bases_python/cours/#modification-des-elements-dune-liste","title":"Modification des \u00e9l\u00e9ments d'une liste","text":"<p>Les \u00e9l\u00e9ments d'une liste peuvent \u00eatre modifi\u00e9s en \u00e0 l'aide d'une simple affectation. Il suffit de conna\u00eetre l'indice de l'\u00e9l\u00e9ment \u00e0 modifier.</p> <p>Par exemple :</p> <pre><code>&gt;&gt;&gt; ma_liste = [10, 20, 30, 40, 50]\n&gt;&gt;&gt; ma_liste[1] = 25  # modification du deuxi\u00e8me \u00e9l\u00e9ment (indice 1)\n&gt;&gt;&gt; ma_liste\n[10, 25, 30, 40, 50]\n</code></pre>"},{"location":"premiere/bases_python/cours/#ajout-et-suppression-delements","title":"Ajout et suppression d'\u00e9l\u00e9ments","text":"<p>Une m\u00e9thode, k\u00e9zako ?</p> <p>Une m\u00e9thode est une fonction associ\u00e9e \u00e0 un type d'\u00e9l\u00e9ments sp\u00e9cifique. Pour appeler une m\u00e9thode, on \u00e9crit une instruction de la forme : <code>&lt;objet&gt;.&lt;methode&gt;</code>.</p> <p>Par exemple, le type <code>list</code> de Python dispose d'une m\u00e9hode appel\u00e9e <code>append</code> qui permet d'ajouter un \u00e9l\u00e9ment \u00e0 une liste.  </p> <p>Pour ajouter un \u00e9l\u00e9ment \u00e0 la fin d'une liste, vous pouvez utiliser la m\u00e9thode <code>append()</code> :</p> <pre><code>&gt;&gt;&gt; ma_liste = [1, 2, 3]\n&gt;&gt;&gt; ma_liste.append(4)\n&gt;&gt;&gt; ma_liste\n[1, 2, 3, 4]\n</code></pre> <p>On peut utiliser <code>append</code> dans une boucle pour cr\u00e9er une liste contenant beaucoup d'\u00e9l\u00e9ments. Il s'agit d'une solution alternative \u00e0 la cr\u00e9ation de liste \"par compr\u00e9hension\" vue pr\u00e9c\u00e9demment.</p> <p>Par exemple, si l'on souhaite cr\u00e9er une liste dans une variable <code>lst</code> qui contient tous les entiers de <code>1</code> \u00e0 <code>100</code>, on peut proc\u00e9der comme suit (cliquez sur Lancer pour voir le r\u00e9sultat) :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>lst = []  # cr\u00e9er une liste videbksl-nlfor i in range(1, 101):  # it\u00e9rer de 1 jusqu'\u00e0 100bksl-nl    lst.append(i)  # ajouter l'entier ibksl-nlbksl-nlprint(lst)  # afficher la liste lstbksl-nl</p> <p>Pour supprimer un \u00e9l\u00e9ment en fonction de sa valeur, vous pouvez utiliser la m\u00e9thode <code>remove()</code> :</p> <pre><code>&gt;&gt;&gt; ma_liste = [1, 2, 3, 4, 5]\n&gt;&gt;&gt; ma_liste.remove(3)\n&gt;&gt;&gt; ma_liste\n[1, 2, 4, 5]\n</code></pre> <p>Pour supprimer un \u00e9l\u00e9ment en fonction de son indice, vous pouvez utiliser la m\u00e9thode <code>pop</code>, qui supprime et renvoie l'\u00e9l\u00e9ment de la liste dont l'indice est donn\u00e9 en entr\u00e9e :</p> <pre><code>ma_liste = [1, 2, 3, 4, 5]\ndel ma_liste[2]  # La liste devient maintenant [1, 2, 4, 5]\n</code></pre> <p>Hors-programme</p> <p>\u00c0 noter que la suppression d'\u00e9l\u00e9ments dans une liste n'est pas au programme de premi\u00e8re, ni m\u00eame de terminale. Vous ne serez donc pas interrog\u00e9 dessus, mais cela peut s'av\u00e9rer bien utile tout de m\u00eame.</p>"},{"location":"premiere/bases_python/cours/#parcours-dune-liste-avec-des-boucles","title":"Parcours d'une liste avec des boucles","text":"<p>Les listes sont souvent parcourues \u00e0 l'aide de boucles born\u00e9es <code>for</code>. Voici comment parcourir une liste et afficher ses \u00e9l\u00e9ments :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>mapy-undliste = [10, 20, 30, 40, 50]bksl-nlbksl-nlfor element in mapy-undliste:bksl-nl    print(element)bksl-nl</p> <p>Ce code affichera chaque \u00e9l\u00e9ment de la liste sur une ligne diff\u00e9rente.</p> <p>Une autre m\u00e9thode pour parcourir une liste et afficher ses \u00e9l\u00e9ments consiste \u00e0 utiliser l'indice de ses \u00e9l\u00e9ments : On souhaite maintenant parcourir, \u00e0 l'aide d'une boucle <code>for</code>, chaque \u00e9l\u00e9ment \u00e0 partir de l'indice <code>0</code> (indice du premier \u00e9l\u00e9ment), et jusqu'\u00e0 l'indice du dernier \u00e9l\u00e9ment.</p> <p>On peut faire cela en utilisant une boucle <code>for</code> avec la fonction <code>range()</code> pour g\u00e9n\u00e9rer des indices, puis en acc\u00e9dant aux \u00e9l\u00e9ments de la liste \u00e0 l'aide de ces indices. Voici comment cela fonctionne :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>mapy-undliste = [10, 20, 30, 40, 50]bksl-nlbksl-nllongueur = len(mapy-undliste)  # obtenir la longueur de la listebksl-nlbksl-nl# Utiliser une boucle for avec la fonction range() pour parcourir les indicesbksl-nlfor i in range(longueur):bksl-nl    element = mapy-undliste[i]bksl-nl    print(f\"\u00c9l\u00e9ment \u00e0 l'indice {i} : {element}\")bksl-nl</p> <p>Dans cet exemple, nous avons utilis\u00e9 la fonction <code>len</code> sur <code>ma_liste</code> pour obtenir la longueur de la liste, c'est-\u00e0-dire son nombre d'\u00e9l\u00e9ments. Ensuite, nous avons utilis\u00e9 une boucle <code>for</code> pour parcourir les indices de <code>0</code> \u00e0 <code>longueur - 1</code>. \u00c0 chaque it\u00e9ration de la boucle, nous avons acc\u00e9d\u00e9 \u00e0 l'\u00e9l\u00e9ment d'indice <code>i</code> \u00e0 l'aide de <code>ma_liste[i]</code>, puis nous l'avons affich\u00e9.</p> <p>On aurait pu \u00e9crire ce programme de mani\u00e8re plus simple, comme ceci :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>mapy-undliste = [10, 20, 30, 40, 50]bksl-nlbksl-nl# Utilisez une boucle for avec la fonction range() pour g\u00e9n\u00e9rer des indicesbksl-nlfor i in range(len(mapy-undliste)):bksl-nl    element = mapy-undliste[i]bksl-nl    print(f\"\u00c9l\u00e9ment \u00e0 l'indice {i} : {element}\")bksl-nl</p> <p>Ici, on a mis directement <code>len(ma_liste)</code> \u00e0 l'int\u00e9rieur du <code>range</code>, ce qui \u00e9vite de cr\u00e9er une variable suppl\u00e9mentaire.</p>"},{"location":"premiere/bases_python/cours/#a-vous-de-jouer","title":"\u00c0 vous de jouer !","text":"<p>Exercice : Manipulation de listes</p> <p>Cr\u00e9ez un programme en r\u00e9alisant les t\u00e2ches suivantes :</p> <ol> <li>Cr\u00e9ez une liste appel\u00e9e <code>nombres</code> contenant les entiers de <code>1</code> \u00e0 <code>5</code>.</li> <li>Utilisez une boucle <code>for</code> pour parcourir la liste <code>nombres</code> et afficher chaque \u00e9l\u00e9ment.</li> <li>Modifiez la liste <code>nombres</code> pour qu'elle contienne les carr\u00e9s des nombres de <code>1</code> \u00e0 <code>5</code>. Cela signifie que la liste doit maintenant contenir <code>[1, 4, 9, 16, 25]</code>.</li> <li>Utilisez \u00e0 nouveau une boucle <code>for</code> pour parcourir la liste mise \u00e0 jour et afficher chaque \u00e9l\u00e9ment.</li> </ol> Aide - Code \u00e0 trous <p>Pour vous aider, vous pouvez r\u00e9utiliser ce programme \u00e0 trous :</p> <pre><code># Cr\u00e9er une liste contenant les entiers de 1 \u00e0 5\nnombres = .......\n\n# Parcourir la liste et afficher chaque \u00e9l\u00e9ment\nprint(\"Liste d'origine :\")\nfor nombre in .......:\n    print(.......)\n\n# Modifier la liste pour qu'elle contienne les carr\u00e9s des nombres de 1 \u00e0 5\nfor ... in range(.......):\n    nombres[i] = ....... ** 2\n\n# Parcourir la liste mise \u00e0 jour et afficher chaque \u00e9l\u00e9ment\nprint(\"\\nListe mise \u00e0 jour :\")\nfor nombre in .......:\n    print(.......)\n</code></pre> <p>Vous pouvez r\u00e9aliser ce programme sur Thonny ou dans l'IDE ci-dessous (vous pourrez t\u00e9l\u00e9charger votre programme en cliquant sur le deuxi\u00e8me bouton pour le conserver.)</p> <p></p>### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder"},{"location":"premiere/bases_python/cours/#les-chaines-de-caracteres","title":"Les cha\u00eenes de caract\u00e8res","text":"<p>Les cha\u00eenes de caract\u00e8res offrent une certaine ressemblance avec les tuples, dans le sens o\u00f9 l'on peut lire les caract\u00e8res de la m\u00eame mani\u00e8re que l'on lit les \u00e9l\u00e9ments d'un tuple, mais on ne peut pas modifier une cha\u00eene de caract\u00e8res.</p> <p>En particulier, on peut obtenir la taille d\u2019une cha\u00eene de caract\u00e8res, c\u2019est-\u00e0-dire son nombre de caract\u00e8res, avec l\u2019op\u00e9ration <code>len</code> et acc\u00e9der au i-i\u00e8me caract\u00e8re d\u2019une cha\u00eene avec les crochets :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>s = \"abcdefgh\"bksl-nlbksl-nlprint(len(s))  # afficher la taille de la cha\u00eene sbksl-nlbksl-nlprint(s[0])  # afficher le premier caract\u00e8re de sbksl-nlbksl-nlprint(s[len(s) - 1])  # afficher le dernier caract\u00e8re de sbksl-nl</p> <p>Voici deux mani\u00e8re dont on peut parcourir une cha\u00eene de caract\u00e8res pour afficher chaque caract\u00e8re un \u00e0 un, le principe est le m\u00eame que pour les listes et les tuples :</p> <p>En r\u00e9cup\u00e9rant directement chaque \u00e9l\u00e9ment \u00e0 chaque it\u00e9ration d'une boucle :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>s = \"abcdefgh\"bksl-nlbksl-nlfor car in s:bksl-nl    print(car)bksl-nl</p> <p>En r\u00e9cup\u00e9rant chaque \u00e9l\u00e9ment par son indice (la variable <code>i</code> de la boucle prendra les valeurs <code>0</code>, puis <code>1</code>, puis <code>2</code>, juste qu'\u00e0 l'indice du dernier \u00e9l\u00e9ment):</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>s = \"abcdefgh\"bksl-nlbksl-nlfor i in range(len(s)):bksl-nl    print(s[i])bksl-nl</p> <p>Une autre op\u00e9ration bien utile sur les cha\u00eenes de caract\u00e8res est l'op\u00e9ration de concat\u00e9nation. Cela permet de cr\u00e9er une nouvelle cha\u00eene en combinant deux cha\u00eenes de caract\u00e8res \u00e0 l'aide du symbole <code>+</code>, par exemple (ex\u00e9cutez le script suivant pour observer le r\u00e9sultat de la concat\u00e9nation de <code>a</code> et <code>b</code>):</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>a = \"abc\"bksl-nlb = \"def\"bksl-nlbksl-nlprint(a + b)bksl-nl</p> <p>On peut \u00e9galement chercher un caract\u00e8re ou m\u00eame un mot dans une cha\u00eene de caract\u00e8res avec le mot-cl\u00e9 <code>in</code> :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>s = \"Bonjour tout le monde\"bksl-nlbksl-nlprint(\"tout\" in s)  # affichera Truebksl-nlprint(\"la\" in s)  # affichera Falsebksl-nl</p>"},{"location":"premiere/bases_python/dm1/","title":"Correction du DM 1","text":""},{"location":"premiere/bases_python/dm1/#correction-du-dm-1","title":"Correction du DM 1","text":"<p>T\u00e9l\u00e9charger le DM</p> <ul> <li>DM1.pdf - \u00c9nonc\u00e9 du DM 1.</li> </ul>"},{"location":"premiere/bases_python/dm1/#correction-partie-papier","title":"Correction partie papier","text":"<p>Exercice 1 - Vrai ou Faux ?</p> <ol> <li>Apr\u00e8s les instructions <code>x = 3</code>, <code>y = 5</code>, <code>x = y</code>, <code>y = x</code>, la valeur de x est 5 et la valeur de y est 3. C'est faux. Pour inverser les valeurs de <code>x</code> et de <code>y</code>, on a besoin d'une troisi\u00e8me variable temporaire pour y stocker l'une des deux valeurs. Sinon, la valeur de <code>x</code> est perdue car la variable prend la valeur de <code>y</code>. Une solution : <pre><code>x = 3\ny = 5\ntemp = x\nx = y\ny = temp\n</code></pre> </li> <li> <p>Apr\u00e8s les instructions <code>x = 3</code>, <code>y = 5</code>, <code>y == x</code>, <code>x = y</code>, la valeur de <code>x</code> est <code>5</code> et la valeur de <code>y</code> est <code>5</code>. C'est vrai. Ici, la troisi\u00e8me instruction effectue une comparaison (il y a deux <code>=</code> et pas un), et non pas une affectation. Cette expression bool\u00e9enne renvoie <code>True</code> ou <code>False</code>, mais la valeur n'est stock\u00e9e nul part. La variable <code>x</code> prend ensuite la valeur de <code>y</code>, donc <code>5</code>.</p> </li> <li> <p>L\u2019instruction <code>print(bonjour)</code> va afficher <code>\"bonjour\"</code>. C'est faux. La fonction <code>print</code> permet d'afficher une cha\u00eene de caract\u00e8res. Ici, <code>bonjour</code> n'est pas entour\u00e9 de guillemets, et est donc consid\u00e9r\u00e9 comme une variable. Une erreur indiquant que la variable <code>bonjour</code> n'existe pas sera donc lev\u00e9e.</p> </li> <li> <p>La fonction <code>input</code> renvoie une cha\u00eene de caract\u00e8res. C'est vrai. La fonction <code>input</code> renvoie une cha\u00eene de caract\u00e8res. Ainsi, si l'on a besoin de transformer la valeur renvoy\u00e9e par un <code>input</code> en un nombre entier par exemple, notamment pour utiliser la valeur dans un <code>range</code> (qui ne prend que des entiers), on peut convertir cette valeur avec la fonction <code>int</code>. Par exemple : <pre><code>nb = int(input(\"Saisissez un nombre : \"))\n</code></pre> Ici, la valeur retour de l'<code>input</code> sera convertie en nombre entier. ```</p> </li> <li> <p>L\u2019instruction <code>if ...</code> est une instruction conditionnelle. C'est vrai. Les instructions conditionnelles permettent d'ex\u00e9cuter des blocs de code seulement lorsqu'une condition est remplie. Voir cette partie du cours.</p> </li> <li> <p>Avec <code>for i in range(10)</code>, la variable <code>i</code> prend 9 valeurs, puisque la derni\u00e8re est <code>9</code>. C'est faux. Une boucle <code>for ... in range(...)</code>, lorsque le <code>range</code> ne prend qu'une seule valeur, commence \u00e0 l'indice <code>0</code> et se termine \u00e0 l'indice indiqu\u00e9 dans le <code>range</code> moins 1. Ici, il y a donc 10 valeurs, de 0 \u00e0 9.</p> </li> <li> <p>Avec <code>for i in range(9, 0, -3)</code>, les valeurs successives prises par la variable <code>i</code> sont <code>9</code>, <code>6</code>, <code>3</code>, <code>0</code>. C'est faux. Ici, le <code>range</code> contient trois valeurs, ce qui signifie que l'on commence \u00e0 la valeur <code>9</code>, jusqu'\u00e0 la valeur <code>0</code> EXCLUE, avec un pas de <code>-3</code>. Le <code>0</code> n'est pas pris, car on s'arr\u00eate toujours un cran avant. Ici, <code>i</code> ne prendra que les valeurs <code>9</code>, <code>6</code> et <code>3</code>.</p> </li> <li> <p>Si l\u2019on ex\u00e9cut\u00e9 l\u2019instruction \u00e2ge = int(input(\"Veuillez entrer votre \u00e2ge ! \")), la variable \u00e2ge cr\u00e9\u00e9e est de type str (cha\u00eene de caract\u00e8res). C'est vrai. <code>input</code> renvoie une valeur de type <code>str</code>, c'est-\u00e0-dire une cha\u00eene de caract\u00e8res.</p> </li> <li> <p>Une variable bool\u00e9enne ne peut prendre que deux valeurs. C'est vrai. Une variable bool\u00e9enne peut prendre soit la valeur <code>True</code>, soit la valeur <code>False</code>.</p> </li> <li> <p>Si a = True et b = False, alors le test <code>b or a and b</code> renvoie True. C'est faux. Lorsque l'on effectue le test <code>b or a and b</code>, on teste d'abord <code>b or a</code>, qui ici vaut <code>True</code>, puisque <code>True or False = True</code>, puis on teste enfin <code>True and b</code>, qui vaut <code>False</code>, puise <code>True and False = False</code> (avec l'op\u00e9rateur <code>and</code>, les deux variables doivent \u00eatre \u00e0 <code>True</code> pour obtenir <code>True</code>).</p> </li> </ol> <p>Exercice 2</p> <ol> <li> <p>En quelle ann\u00e9e le langage Python a t-il \u00e9t\u00e9 cr\u00e9\u00e9 ? Le langage Python a \u00e9t\u00e9 cr\u00e9\u00e9 en 1991 par Guido Van Rossum, un informaticien n\u00e9erlandais.</p> </li> <li> <p>Voici 4 propositions, entourez celles qui sont des expressions (ici en bleu) et soulignez celles qui sont des affectations (ici en vert) :</p> <ol> <li>a &lt; b</li> <li>a != b</li> <li>a = b</li> <li>a &gt;= b</li> </ol> </li> <li> <p>On consid\u00e8re les instructions suivantes ex\u00e9cut\u00e9es dans l\u2019ordre : <code>a=8</code>, <code>b=5</code>, <code>a==b+1</code>, <code>b=b +1</code>, <code>a==b+1</code>, <code>b=b+1</code>, <code>print(a==b+1)</code>. Quel est le r\u00e9sultat affich\u00e9 \u00e0 l\u2019issue de la derni\u00e8re instruction ? Le r\u00e9sultat obtenu \u00e0 l'issue de la derni\u00e8re instruction est <code>True</code>. <code>a</code> prend la valeur <code>8</code>, <code>b</code> prend la valeur <code>5</code>, ensuite, on fait une comparaison <code>a == b+1</code> qui est \u00e9valu\u00e9e \u00e0 <code>False</code> (car <code>8 != 6</code>), mais cette valeur <code>False</code> n'est stock\u00e9e nulle part. Ensuite, on affecte \u00e0 <code>b</code> la valeur <code>b + 1</code>, c'est-\u00e0-dire <code>6</code>. Donc <code>a = 8</code> et <code>b = 6</code>. On fait de nouveau une comparaison <code>a == b+1</code>, qui est \u00e9value \u00e0 <code>False</code> (car <code>8 != 7</code>). Cette valeur <code>False</code> n'est encore une fois pas stock\u00e9e. On continue en affectant de nouveau \u00e0 <code>b</code> la valeur <code>b + 1</code>, c'est-\u00e0-dire <code>7</code>. Finalement, on affiche (avec la fonction <code>print</code>) la valeur obtenue suite \u00e0 l'\u00e9valuation de la comparaison <code>a == b + 1</code>, qui vaut <code>True</code> car <code>a = 8</code> et <code>b + 1 = 7 + 1 = 8</code>.</p> </li> <li> <p>Voici une s\u00e9quence d\u2019instructions : </p><pre><code>n = 7\nfor i in range (2 , n):\n    print (i)\n</code></pre> Combien de fois la fonction <code>print</code> \u00e0 l'int\u00e9rieur du <code>for</code> est-elle ex\u00e9cut\u00e9e ? La fonction <code>print</code> est ici ex\u00e9cut\u00e9e 5 fois. En effet, lorsque le <code>range</code> contient 2 valeurs, on commence \u00e0 la premi\u00e8re valeur indiqu\u00e9e, et on s'arr\u00eate un cran avant la deuxi\u00e8me valeur. Ici, <code>i</code> prend donc les valeurs <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code> et <code>6.</code> </li> <li> <p>Voici une s\u00e9quence d\u2019instructions : </p><pre><code>x = 4\nwhile x &gt; 0:\n    y = 0\n    while y &lt; x:\n        y = y + 1\n        x = x - 1\n</code></pre> Quelles seront les valeurs finales de <code>x</code> et de <code>y</code> ? Apr\u00e8s ex\u00e9cution, <code>x = 0</code> et <code>y = 1</code>. Pour voir le d\u00e9roulement complet de ce programme, vous pouvez d\u00e9rouler le bloc suivant. </li> </ol> D\u00e9roulement du programme - Question 5 <pre><code>D\u00e9but du programme :\nx = 4\nComparaison du premier while : x &gt; 0\n4 &gt; 0 ? OUI, donc on rentre dans la premi\u00e8re boucle.\n    y = 0\n    Comparaison du deuxi\u00e8me while : y &lt; x\n    0 &lt; 4 ? OUI, donc on rentre dans la deuxi\u00e8me boucle.\n        y = y + 1 = 0 + 1 = 1\n        x = x - 1 = 4 - 1 = 3\n        Comparaison du deuxi\u00e8me while : y &lt; x\n        1 &lt; 3 ? OUI, donc on reste dans la deuxi\u00e8me boucle.\n        y = y + 1 = 1 + 1 = 2\n        x = x - 1 = 3 - 1 = 2\n        Comparaison du deuxi\u00e8me while : y &lt; x\n        2 &lt; 2 ? NON, donc on ne reste pas dans la deuxi\u00e8me boucle.\n    Comparaison du premier while : x &gt; 0\n    2 &gt; 0 ? OUI, donc on reste dans la premi\u00e8re boucle.\n    y = 0\n    Comparaison du deuxi\u00e8me while : y &lt; x\n    0 &lt; 2 ? OUI, donc on rentre dans la deuxi\u00e8me boucle.\n        y = y + 1 = 0 + 1 = 1\n        x = x - 1 = 2 - 1 = 1\n        Comparaison du deuxi\u00e8me while : y &lt; x\n        1 &lt; 1 ? NON, donc on ne reste pas dans la deuxi\u00e8me boucle.\n    Comparaison du premier while : x &gt; 0\n    1 &gt; 0 ? OUI, donc on reste dans la premi\u00e8re boucle.\n    y = 0\n    Comparaison du deuxi\u00e8me while : y &lt; x\n    0 &lt; 1 ? OUI, donc on rentre dans la deuxi\u00e8me boucle.\n        y = y + 1 = 0 + 1 = 1\n        x = x - 1 = 1 - 1 = 0\n        Comparaison du deuxi\u00e8me while : y &lt; x\n        1 &lt; 0 ? NON, donc on ne reste pas dans la deuxi\u00e8me boucle.\n    Comparaison du premier while : x &gt; 0\n    0 &gt; 0 ? NON, donc on ne reste pas dans la premi\u00e8re boucle.\nFin du programme.\n</code></pre> <p>Exercice 3</p> <p>\u00c9crire une fonction <code>plus_grand</code> qui prend en param\u00e8tres trois nombres entiers et renvoie le plus grand des trois nombres.</p> <pre><code>def plus_grand(a, b, c):\n    ''' Renvoie le plus grand des trois entiers.\n    :param a: (int) Un entier.\n    :param b: (int) Un autre entier.\n    :param c: (int) Encore un autre entier.\n    :return (int): La plus grande valeur entre a, b et c. '''\n\n    if a &gt; b and a &gt; c:\n        return a\n    elif b &gt; a and b &gt; c:\n        return b\n    else:\n        return c\n</code></pre> <p>Exercice 4</p> <p>\u00c9crire une fonction <code>temps</code> qui prend en param\u00e8tres un nombre entier de secondes et affiche le nombre d'heures, de minutes et de secondes qui correspond.</p> <pre><code>def temps(nbs):\n''' Renvoie le temps en heures, minutes et secondes.\n:param nbs: (int) Le temps en secondes.\n:return (None): On ne renvoie rien, on affiche avec print. '''\n\nheures = nbs // 3600  # 3600 secondes dans 1 heure\nnbs = nbs % 3600  # On r\u00e9cup\u00e8re le nombre de secondes restantes et on le restocke dans nbs\nminutes = nbs // 60  # 60 secondes dans 1 minutes\nsecondes = nbs % 60  # On r\u00e9cup\u00e8re le nombre de secodes restantes\nprint(f'{heures}h {minutes}min {secondes}s')\n</code></pre> <p>Exercice 5</p> <p>\u00c9crire une fonction qui prend en arguments deux mots (type <code>str</code>) et renvoie <code>True</code> si les deux mots commencent par la m\u00eame lettre et se terminent par la m\u00eame lettre et <code>False</code> sinon.</p> <pre><code>def jeu(mot1, mot2):\n''' Renvoie True si les deux mots commencent et finissent par la m\u00eame lettre.\nRenvoie False sinon.\n:param mot1: (str) Un mot.\n:param mot2: (str) Un autre mot.\n:return (bool): Un bool\u00e9en, c'est-\u00e0-dire soit True, soit False. '''\n\nreturn mot1[0] == mot2[0] and mot1[len(mot1) - 1] == mot2[len(mot2) - 1]\n</code></pre> <p>L'indice de la premi\u00e8re lettre est <code>0</code>. La fonction <code>len</code> permet de r\u00e9cup\u00e9rer le nombre de caract\u00e8res dans une cha\u00eene de caract\u00e8res. On trouve donc l'indice de la derni\u00e8re lettre du mot en retirant 1 \u00e0 sa longueur.</p> <p>Plut\u00f4t que d'\u00e9crire <code>mot1[len(mot1) - 1]</code> et <code>mot2[len(mot2) - 1]</code>, on peut \u00e9galement plus simplement \u00e9crire <code>mot1[-1]</code> et <code>mot2[-1]</code>. Attention toutefois, cela fonctionne en Python, mais pas dans tous les langages. Retenez donc aussi la premi\u00e8re m\u00e9thode.</p> <p>Exercice 6</p> <p>\u00c9crire une fonction <code>jeu</code> qui prend en param\u00e8tre un nombre entier <code>n</code> strictement positif, simule n fois le tirage d\u2019un nombre choisi au hasard parmi les nombres <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, <code>6</code>, et renvoie le pourcentage de 6 obtenus. On utilisera la fonction <code>randint</code> du module <code>random</code>.</p> <pre><code>def jeu(n):\n    ''' Renvoie le pourcentage du nombre de 6 obtenus sur n tirages al\u00e9atoires.\n    :param n: (int) Un nombre entier de tirages.\n    :return (float): Le pourcentage de 6 obtenus. '''\n\n    compteur = 0  # Compteur pour le nombre de 6 obtenus\n    for _ in range(n):\n        tirage = randint(1, 6)  # R\u00e9cup\u00e9rer une valeur al\u00e9atoire entre 1 et 6\n        if tirage == 6:\n            compteur = compteur + 1  # On peut aussi \u00e9crire compteur += 1\n    return compteur * 100 / n  # On calcule et on renvoie le pourcentage\n</code></pre> <p>Le pourcentage se calcule avec un simple produit en croix : les <code>n</code> tirages correspondent \u00e0 100% des tirages, et on cherche le pourcentage pour le nombre <code>compteur</code> de tirages (<code>compteur</code> contient le nombre de fois o\u00f9 l'on a tir\u00e9 la valeur <code>6</code>).</p>"},{"location":"premiere/bases_python/dm1/#correction-partie-ordinateur","title":"Correction partie ordinateur","text":"<p>Exercice 1</p> <p>\u00c9crire un programme qui trace la figure ci-dessous en utilisant deux boucles imbriqu\u00e9es. Vous utiliserez le module Python Turtle. Vous pouvez importer toutes les fonctions du module en pla\u00e7ant cette ligne au d\u00e9but de votre programme : <code>from turtle import *</code>.</p> <pre><code>from turtle import *\n\npenup()\ngoto(-240,0)\npendown()\nfor i in range(9):\n    c\u00f4t\u00e9 = 10 * (i + 1)\n    for j in range(4):\n        forward(c\u00f4t\u00e9)\n        left(90)\n    penup()\n    forward(c\u00f4t\u00e9 + 10)\n    pendown()\ndone()\n</code></pre> <p>Exercice 2</p> <p>\u00c9crire un programme qui demande \u00e0 l\u2019utilisateur de saisir un entier naturel <code>n</code> et qui calcule la somme des carr\u00e9s des entiers de 1 \u00e0 <code>n</code>. Afin de v\u00e9rifier votre programme, voici un exemple : 1\u00b2 + 2\u00b2 + 3\u00b2 + ... + 10\u00b2 = 385</p> <pre><code>n = int(input(\"Veuillez saisir un entier naturel : \"))\nsomme = 0\nfor i in range(1,n+1):\n    somme = somme + i * i   # ou somme += i*i\nprint(somme)\n</code></pre> <p>Exercice 3</p> <p>Au jeu de M\u00f6lkky, chaque joueur marque \u00e0 son tour de jeu entre 0 et 12 points, qui viennent s\u2019ajouter \u00e0 son score pr\u00e9c\u00e9dent. Mais gare ! Quiconque d\u00e9passe le score cible de 51 points revient imm\u00e9diatement \u00e0 25 points. \u00c9crire un programme qui demande un score et un nombre de points marqu\u00e9s, et qui affiche le nouveau score ou signale une \u00e9ventuelle victoire. Sources : Num\u00e9rique et Sciences Informatiques 1\u00e8re, Balabonski et al., Ed. Ellipses.</p> <pre><code>score = int(input(\"Quel est votre score ? \"))\nnbPoints = int(input(\"Combien de points avez-vous marqu\u00e9 (entre 0 et 12) ? \"))\nscore = score + nbPoints\nif score &gt; 51:\n    score = 25\nprint(\"Votre nouveau score est\",score)\nif score == 51:\n    print(\"Bravo, vous avez gagn\u00e9!\")\n</code></pre> <p>Exercice 4</p> <p>\u00c9crire un programme qui demande \u00e0 l\u2019utilisateur de saisir un entier naturel <code>n</code> et qui affiche tous ses diviseurs les uns apr\u00e8s les autres. Les diviseurs devront \u00eatre tous \u00e9crits sur une m\u00eame ligne et s\u00e9par\u00e9s par un tiret. Exemple avec les diviseurs de 15 : 1-3-5-15.</p> <pre><code>n = int(input(\"Veuillez saisir un entier naturel : \"))\nfor i in range(1,n):\n    if n % i == 0:\n        print(i,end=\"-\")\nprint(n)\n</code></pre>"},{"location":"premiere/bases_python/ds2_correction/","title":"Correction DS2","text":""},{"location":"premiere/bases_python/ds2_correction/#correction-ds-n2","title":"Correction DS n\u00b02","text":"<p>\u00c9nonc\u00e9 du DS</p> <p></p> T\u00e9l\u00e9charger l'\u00e9nonc\u00e9 du DS"},{"location":"premiere/bases_python/ds2_correction/#representation-des-donnees","title":"Repr\u00e9sentation des donn\u00e9es","text":"<p>Exercice 1</p> <p>On \u00e9criera chaque nombre entier sur 8 bits.</p> <p>\\(42 = 00101010\\) \\(~~~~~~~~~~11010101\\) (compl\u00e9ment \u00e0 1) \\(~~~~~~~~~~11010110 = -42\\) (apr\u00e8s compl\u00e9ment \u00e0 2)</p> <p>\\(120 = 01111000\\) \\(~~~~~~~~~~10000111\\) (compl\u00e9ment \u00e0 1) \\(~~~~~~~~~~10001000 = -120\\) (apr\u00e8s compl\u00e9ment \u00e0 2)</p> <p>Exercice 2</p> <p>\\(32,375 = 100000,011 = 1,00000011 \\times 2^5\\)</p> <p>\\(s = 1\\) (car n\u00e9gatif) \\(e = 5 + 127 = 132_{10} = 10000100_{2}\\) \\(f = 00000011000000000000000\\)</p> <p>Donc le r\u00e9sultat est :</p> <p>\\(1~10000100~00000011000000000000000\\)</p> <p>Exercice 3</p> <p>\\(s = 0\\) (donc nombre positif) \\(e = 10000101_{2} = 133_{10}\\) Donc \\(e' = 133 - 127 = 6\\)</p> <p>\\(1,0010111 \\times 2^6 = 1001011,1_{2} = 75,5_{10}\\)</p> <p>Exercice 4</p> <p>Il y a \\(2^7 = 128\\) caract\u00e8res possibles en ASCII.</p> <p>Exercice 5</p> <p>En hexad\u00e9cimal : 53 61 6C 75 74 20 21 En binaire : 1010011 1100001 1101100 1110101 1110100 0100000 0100001</p> <p>Exercice 6</p> <p>Attention, <code>ord</code> renvoie une valeur d\u00e9cimale (et non hexad\u00e9cimale), et <code>chr</code> prend \u00e9galement en entr\u00e9e une valeur d\u00e9cimale.</p> <pre><code>&gt;&gt;&gt; ord('%')\n37\n&gt;&gt;&gt; chr(64)\n@\n</code></pre> <p>Exercice 7</p> <pre><code>def printASCII(s):\n    for car in s:  # pour chaque caract\u00e8re de s\n        print(hex(ord(car)))\n</code></pre>"},{"location":"premiere/bases_python/ds2_correction/#programmation-python","title":"Programmation Python","text":"<p>Exercice 1</p> <p>Il suffit pour cela d'additionner <code>a</code> et <code>b</code> et de diviser par 2, en utilisant l'op\u00e9rateur <code>//</code> afin d'obtenir un entier :</p> <pre><code>def milieu(a, b):\n    ''' Renvoie l'entier du milieu compris entre a et b.\n    :param a: (int) un entier\n    :param b: (int) un autre entier\n    :return: (int) l'entier du milieu compris entre a et b '''\n\n    return a + b // 2\n</code></pre> <p>Exercice 2</p> <pre><code>def verifier_admission(age, moyenne, formation):\n    ``` Renvoie True si les conditions d'admission sont respect\u00e9es, False sinon.\n    :param age: (int) Un \u00e2ge\n    :param moyenne: (float) Une moyenne\n    :param formation: (str) Une formation\n    :return: (bool) True ou False ```\n\n    if age &gt;= 18 and moyenne &gt;= 12 and (formation == \"math\u00e9matiques\" or formation == \"informatique\" or formation == \"physique\"):\n        return True\n    else:\n        return False\n</code></pre> <p>Exercice 3</p> <pre><code>def pairs_impairs(nb, choix):\n    ''' Affiche les entiers pairs ou impairs de 0 \u00e0 nb, selon le choix indiqu\u00e9.\n    :param nb: (int) un nombre entier\n    :param choix: (str) le choix donn\u00e9, \"pairs\" ou \"impairs\"\n    :return: (None) pas de valeur de retour '''\n\n    if choix == \"pairs\":\n        for i in range(nb+1, 2):\n            print(i)\n    elif choix == \"impairs\":\n        for i in range(1, nb+1, 2):\n            print(i)\n    else:\n        print(\"Choix incorrect\")\n</code></pre> <p>Exercice 4</p> <pre><code>from random import randint\nr = randint(1, 100)  # g\u00e9n\u00e9rer une valeur al\u00e9atoire\nsaisie = input(\"Saisissez un nombre entre 1 et 100 : \")\nwhile saisie != r:  # tant que le nombre n'a pas \u00e9t\u00e9 trouv\u00e9\n    if r &lt; saisie:\n        print(\"C'est moins\")\n    else:\n        print(\"C'est plus\")\nprint(\"C'est gagn\u00e9 !\")\n</code></pre> <p>Exercice 5</p> <pre><code>from random import randint\n\ndef atteindre_objectif(objectif):\n    compteur = 0\n    progression = 0  # initialiser la progression\n    print(\"Progression actuelle : 0\")\n    while progression &lt; objectif:  # tant que l'on a pas attteint l'objectif\n        compteur += 1  # incr\u00e9menter le compteur\n        ajout = randint(1, 10)  # g\u00e9n\u00e9rer valeur \u00e0 ajouter al\u00e9atoirement\n        print(\"Ajout\u00e9 :\", ajout)  # afficher valeur d'ajout\n        progression += ajout  # ajouter valeur \u00e0 progression\n        print(\"Progression actuelle :\", progression)  # afficher la nouvelle progression\n    print(\"Objectif atteint en\", compteur, \"essais !\")\n</code></pre>"},{"location":"premiere/bases_python/exercices_fonctions/","title":"Exercices sur les fonctions","text":""},{"location":"premiere/bases_python/exercices_fonctions/#exercices-sur-les-fonctions","title":"Exercices sur les fonctions","text":"<p>Voici quelques exercices portant sur les fonctions en Python.</p> <p>Exercice 1</p> <p>T\u00e9l\u00e9chargez le fichier suivant et ouvrez-le dans Thonny :</p> <p></p> T\u00e9l\u00e9charger <code>exo1_fonctions.py</code> <p>Compl\u00e9tez les fonctions <code>est_pair</code>, <code>plus_grand</code> et <code>produit</code> en respectant la documentation (voir explications sur les docstrings plus bas).</p> <p>Voici quelques exemples d'appels \u00e0 ces fonctions dans la console :</p> <pre><code>&gt;&gt;&gt; est_pair(12)\nTrue\n&gt;&gt;&gt; est_pair(15)\nFalse\n&gt;&gt;&gt; plus_grand(5, 8, 3)\n8\n&gt;&gt;&gt; plus_grand(7, 7, 7)\n7\n&gt;&gt;&gt; produit(4, 8)\n32\n</code></pre> <p>Les docstrings</p> <p>Pour comprendre ce que doivent renvoyer ces fonctions, et quels sont leurs param\u00e8tres, lisez leurs documentations. Les documentations des fonctions sont \u00e9crites sous la forme de commentaires multilignes, que l'on appelle des docstrings. Par exemple, voici la docstring de la fonction <code>est_pair</code> :</p> <pre><code>''' Renvoie True si l'entier positif n est pair, False sinon.\n:param n: (int) un entier positif\n:return: (bool) True ou False '''\n</code></pre> <p>Cette docstring indique que la fonction doit renvoyer un bool\u00e9en, <code>True</code> ou <code>False</code>, selon si la param\u00e8tre <code>n</code> (un entier) est pair ou non. \u00c0 noter qu'il n'y a pas vraiment de convention sur la mani\u00e8re d'\u00e9crire une docstring. Toutefois, il doit au minimum y figurer :</p> <ul> <li>ce que fait la fonction,</li> <li>les param\u00e8tres d'entr\u00e9e et leur type,</li> <li>la valeur de retour et son type.</li> </ul> Correction - Exercice 1 <p>La fonction <code>est_pair</code> peut \u00eatre \u00e9crite na\u00efvement de la mani\u00e8re suivante :</p> <pre><code>def est_pair(n):\n''' Renvoie True si l'entier positif n est pair, False sinon.\n:param n: (int) un entier positif\n:return: (bool) True ou False '''\n\nif n % 2 == 0:\n    return True\nelse:\n    return False\n</code></pre> <p>Cependant, on peut l'\u00e9crire plus simplement de la mani\u00e8re suivante :</p> <pre><code>def est_pair(n):\n''' Renvoie True si l'entier positif n est pair, False sinon.\n:param n: (int) un entier positif\n:return: (bool) True ou False '''\n\nreturn n % 2 == 0\n</code></pre> <p>En effet, Python va d'abord \u00e9valuer l'expression <code>n % 2 == 0</code>, qui sera \u00e9valu\u00e9e \u00e0 <code>True</code> ou \u00e0 <code>False</code>, et cette valeur sera renvoy\u00e9e par le <code>return</code>.</p> <p>La fonction <code>plus_grand</code> peut \u00eatre \u00e9crite avec une suite d'instructions de branchement <code>if... elif... else</code>, en combinant plusieurs tests \u00e0 l'aide de l'op\u00e9rateur <code>and</code> :</p> <pre><code>def plus_grand(a, b, c):\n    ''' Renvoie la plus grande valeur parmi les trois entiers donn\u00e9s en entr\u00e9e.\n    :param a: (int) un entier\n    :param b: (int) un entier\n    :param c: (int) un entier\n    :return: (int) le plus grand des trois entiers '''\n\n    if a &gt;= b and a &gt;= c:  # si a est plus grand que b et plus grand que c\n        return a  # renvoyer a\n    elif b &gt;= a and b &gt;= c:  # si b est plus grand que a et plus grand que c\n        return b  # renvoyer b\n    else:  # sinon\n        return c  # renvoyer c\n</code></pre> <p>Enfin, la fonction <code>produit</code> peut \u00eatre \u00e9crite en transformant le produit en somme. On utilisera pour cela une boucle <code>for</code> :</p> <pre><code>def produit(x, y):\n    ''' Effectue le produit entre x et y SANS UTILISER LE SYMBOLE *.\n    :param x: (int) un entier positif\n    :param y: (int) un autre entier positif\n    :return: (int) r\u00e9sultat du produit des deux entiers '''\n\n    somme = 0  # initialiser la variable qui contiendra le r\u00e9sultat\n    for i in range(y):  # it\u00e9rer y fois\n        somme += x  # ajouter x \u00e0 la somme\n    return somme  # renvoyer la somme des x\n</code></pre> <p>Exercice 2</p> <p>Dans un nouveau script Python, \u00e9crire une fonction <code>compter_voyelles</code> qui re\u00e7oit une cha\u00eene de caract\u00e8res <code>mot</code> en entr\u00e9e et renvoie le nombre de voyelles (\"a\", \"e\", \"i\", \"o\", \"u\", \"y\") pr\u00e9sentes dans ce mot.</p> <p>Exemple :</p> <pre><code>print(compter_voyelles(\"python\"))  # 2\nprint(compter_voyelles(\"ananas\"))  # 3\n</code></pre> <p>Ensuite, en-dessous de la fonction, \u00e9crire un programme qui demande \u00e0 l'utilisateur de saisir un mot, puis afficher le nombre de voyelles de ce mot en faisant appel \u00e0 <code>compter_voyelles</code>.</p> Correction - Exercice 2 <p>Pour compter le nombre de voyelles, il faut parcourir chaque caract\u00e8re du mot donn\u00e9 en entr\u00e9e et incr\u00e9menter un compteur \u00e0 chaque fois qu'une voyelle est trouv\u00e9e.</p> <pre><code>def compter_voyelles(mot):\n    ''' Renvoie ne nombre de voyelles du mot donn\u00e9 en entr\u00e9e.\n    :param mot: (str) un mot\n    :return: (int) le nombre de voyelles du mot '''\n\n    compteur = 0  # initialiser un compteur \u00e0 0\n    for lettre in mot:  # pour chaque lettre du mot\n        if lettre in \"aeiouy\":  # si la lettre est dans la cha\u00eene \"aeiouy\"\n            compteur += 1  # incr\u00e9menter le compteur (augmenter de 1)\n    return compteur  # renvoyer le compteur\n</code></pre> <p>Ensuite, on cr\u00e9e un programme qui demande \u00e0 l'utilisateur de saisir un mot et qui affiche le nombre de voyelles de ce mot :</p> <pre><code>m = input(\"Saisissez un mot : \")  # demander \u00e0 l'utilisateur la saisie d'un mot\nnb_voyelles = compter_voyelles(m)  # calculer le nombre de voyelles du mot\nprint(\"Le nombre de voyelles est : \", nb_voyelles)  # afficher le r\u00e9sultat obtenu\n</code></pre> <p>Exercice 3</p> <p>\u00c9crire une fonction <code>factorielle</code> qui re\u00e7oit un nombre entier <code>nombre</code> en entr\u00e9e et renvoie la factorielle de ce nombre. Cliquez ici pour un rappel de ce qu'est une factorielle.</p> <p>Exemple :</p> <pre><code>print(factorielle(5))  # Affiche 120\nprint(factorielle(7))  # Affiche 5040\n</code></pre> <p>Ensuite, en-dessous de la fonction, \u00e9crire un programme qui demande \u00e0 l'utilisateur de saisir un nombre entier, puis qui affiche la factorielle de ce nombre en appelant <code>factorielle</code>.</p> Correction - Exercice 3 <p>On peut \u00e9crire la fonction <code>factorielle</code> de la mani\u00e8re suivante :</p> <pre><code>def factorielle(n):\n    ''' Renvoie la factorielle d'un nombre n donn\u00e9 en entr\u00e9e.\n    :param n: (int) un entier positif ou nul\n    :return: (int) la factorielle du nombre n '''\n\n    res = 1  # initialiser la variable qui contiendra le r\u00e9sultat\n    for i in range(1, n+1):  # i prendra chaque valeur de 1 jusqu'\u00e0 n\n        res = res * i  # ou res *= i, multiplier res par la valeur de i courante\n    return res  # renvoyer le r\u00e9sultat\n</code></pre> <p>Enfin, on \u00e9crit un programme qui demande \u00e0 l'utilisateur de saisir un nombre entier, et appelle <code>factorielle</code> pour calculer la factorielle de ce nombre.</p> <pre><code>nb = int(input(\"Saisissez un nombre entier positif : \"))  # demander de saisir un entier positif\nprint(factorielle(nb))  # appeler factorielle avec l'argument nb, et afficher la valeur renvoy\u00e9e\n</code></pre> <p>Exercice 4</p> <p>\u00c9crire une fonction <code>trouver_le_nombre</code>, qui prend un entier <code>nombre</code> entre <code>1</code> et <code>100</code> en entr\u00e9e, et qui :</p> <ul> <li>demande \u00e0 l'utilisateur de saisir un nombre entre 1 et 100,</li> <li>si le nombre saisi correspond au nombre g\u00e9n\u00e9r\u00e9 :<ul> <li>on affiche <code>\"Gagn\u00e9 !\"</code> et on renvoie <code>True</code> (et donc la fonction s'arr\u00eate),</li> </ul> </li> <li>sinon :<ul> <li>si le nombre \u00e0 trouver <code>nombre</code> est plus petit que le nombre saisi :<ul> <li>on affiche <code>\"Perdu, c'est moins...\"</code> et on renvoie <code>False</code>.</li> </ul> </li> <li>sinon :<ul> <li>on affiche <code>\"Perdu, c'est plus...\"</code> et on renvoie <code>False</code>.</li> </ul> </li> </ul> </li> </ul> <p>On souhaite ensuite \u00e9crire un programme r\u00e9utilisant <code>trouver_le_nombre</code> qui :</p> <ul> <li>g\u00e9n\u00e8re un nombre al\u00e9atoire \u00e0 l'aide de <code>randint</code>,</li> <li>initialise une variable <code>trouve</code> \u00e0 <code>False</code>,</li> <li>effectue une boucle de 5 it\u00e9rations, dans laquelle :<ul> <li>si <code>trouve</code> est \u00e9gal \u00e0 <code>False</code>, on appelle <code>trouver_le_nombre</code> pour demander \u00e0 l'utilisateur de saisir un nombre, et :<ul> <li>si la valeur renvoy\u00e9e par <code>trouver_le_nombre</code> vaut <code>True</code>, on affecte <code>True</code> \u00e0 <code>trouve</code>.</li> <li>sinon, on ne fait rien.</li> </ul> </li> </ul> </li> </ul> <p>Voici le squelette de ce programme, vous pouvez le copier/coller et remplacer les pointill\u00e9s par le code appropri\u00e9 :</p> <pre><code>from random import randint\nnombre_aleatoire = ...\ntrouve = ...\nfor ... in range(...):\n    if ...:\n        resultat = ...\n        if resultat == ...:\n            trouve = ...\n        else:\n            trouve = ...\n</code></pre>"},{"location":"premiere/bases_python/exercices_listes/","title":"Exercices sur les listes","text":""},{"location":"premiere/bases_python/exercices_listes/#exercices-sur-les-listes","title":"Exercices sur les listes","text":"<p>Travail \u00e0 la maison</p> <p>Pour les exercices \u00e0 faire \u00e0 la maison, vous pouvez les faire :</p> <ul> <li>soit sur une feuille, auquel cas, pensez \u00e0 ramener votre feuille en classe.</li> <li>soit sur votre ordinateur avec Thonny, auquel cas, rendez vos scripts Python <code>.py</code> sur \u00c9l\u00e9a, sur la page de rendus intitul\u00e9e \"Exercices sur les listes\".</li> </ul> <p>Cours sur les listes</p> <p>Pensez \u00e0 consulter le cours sur les listes si vous avez besoin d'aide pour faire les exercices suivants.</p> <p>Exercice 1</p> <p>\u00c9crire un programme qui :</p> <ul> <li>cr\u00e9e une nouvelle liste vide,</li> <li>ajoute les entiers de 1 \u00e0 1000 dans l'ordre dans la liste,</li> <li>affiche la liste.</li> </ul> <p>Exercice 2</p> <p>\u00c9crire une fonction <code>afficher_sup(liste, element)</code>, qui prend une liste <code>liste</code> ainsi qu'un entier <code>element</code> en entr\u00e9e, et qui affiche tous les \u00e9l\u00e9ments de la liste sup\u00e9rieurs \u00e0 <code>element</code>.</p> <p>Exercice 3</p> <p>\u00c9crire une fonction <code>generer(a, b)</code> qui renvoie une nouvelle liste contenant tous les entiers de <code>a</code> jusqu'\u00e0 <code>b</code>.</p> <p>Exemple d'utilisation : </p><pre><code>&gt;&gt;&gt; generer(5, 11)\n[5, 6, 7, 8, 9, 10]\n</code></pre>"},{"location":"premiere/bases_python/exercices_while/","title":"Exercices sur les boucles while","text":""},{"location":"premiere/bases_python/exercices_while/#exercices-sur-les-boucles-non-bornees-while","title":"Exercices sur les boucles non-born\u00e9es <code>while</code>","text":"<p>Exercice 1</p> <p>On veut \u00e9crire une simulation du jeu de Monopoly. Un joueur peut rejouer s'il fait un double.</p> <p>Mais attention ! S'il faut trois doubles de suite, il doit aller en prison.</p> <p>Le programme \u00e0 concevoir doit :</p> <ul> <li>Simuler le lancer al\u00e9atoire de deux d\u00e9s \u00e0 6 faces (vous utiliserez la fonction <code>randint</code> du module <code>random</code>.);</li> <li>Afficher la valeur de chaque face ainsi que le nombre de cases \u00e0 parcourir ;</li> <li>Relancer les d\u00e9s dans le cas d'un double ;</li> <li>Recommencer... et envoyer le joueur en prison s'il y a trois doubles de suite.</li> </ul> <p>Un exemple d'affichage avec envoi en prison :</p> <pre><code>Les faces sont 5 et 5 : Avancez de 10 cases.\nIl y a un double, rejouez.\nLes faces sont 2 et 2 : Avancez de 4 cases.\nIl y a un double, rejouez.\nLes faces sont 6 et 6 : Avancez de 12 cases.\nOups ! Encore un double, allez en prison !\n</code></pre> <p>Exercice 2</p> <p>On souhaite \u00e9crire un programme permettant de restreindre l'acc\u00e8s \u00e0 une plateforme aux visiteurs adultes.</p> <p>\u00c9crivez un programme qui :</p> <ul> <li>demande \u00e0 l'utilisateur son \u00e2ge,</li> <li>tant que l'\u00e2ge est inf\u00e9rieur \u00e0 18 ans, on redemande l'\u00e2ge.</li> <li>Si l'\u00e2ge est d'au moins 18 ans, on affiche \"Vous pouvez entrer\".</li> </ul>"},{"location":"premiere/bases_python/notebooks/","title":"Notebooks","text":""},{"location":"premiere/bases_python/notebooks/#les-bases-du-langage-python","title":"Les bases du langage Python","text":"<p>Pour approfondir votre apprentissage du langage Python, vous allez travailler avec des notebooks Jupyter. Un notebook est constitu\u00e9 de cellules en Markdown (en gros, du texte stylis\u00e9), et de cellules d'instructions Python pouvant \u00eatre directement ex\u00e9cut\u00e9es.</p> <p>\u00c0 faire</p> <p>Vous trouverez ci-dessous 7 notebooks \u00e0 compl\u00e9ter, directement sur l'application Capytale. Lisez attentivement et compl\u00e9tez chaque notebook dans l'ordre.</p> <p>Pensez \u00e0 enregistrer votre travail manuellement, il n'y a pas d'enregistrement automatique !</p> Notebooks Contenu Chapitre 1 - Bases du langage Python Expressions, variables, types de donn\u00e9es... Chapitre 2 - Boucle for Les boucles born\u00e9es (for) Chapitre 3 - Conditions, tests et bool\u00e9ens Conditions, tests et bool\u00e9ens. Chapitre 4 - Fonctions Cr\u00e9ation et appel de fonctions. Chapitre 5 - Boucle while Les boucles non born\u00e9es (while). Chapitre 6 - Listes Utilisation des listes Python. Chapitre 7 - Cha\u00eenes de caract\u00e8res Les cha\u00eenes de caract\u00e8res."},{"location":"premiere/bases_python/rappels_fonctions/","title":"Rappels sur les fonctions","text":""},{"location":"premiere/bases_python/rappels_fonctions/#exercices-de-rappels-sur-les-fonctions","title":"Exercices de rappels sur les fonctions","text":"Version PDF <p>Vous pouvez cliquer ici pour t\u00e9l\u00e9charger une version PDF de ces exercices.</p> <p>Les fonctions, k\u00e9zako ?</p> <p>Une fonction en langage Python (et dans la plupart des langages de programmation) est un bloc de code que l\u2019on peut r\u00e9utiliser. Elle permet de regrouper des instructions sous un nom, ce qui \u00e9vite de r\u00e9p\u00e9ter du code et rend le programme plus clair et plus facile \u00e0 modifier.\\newline</p> <p>Par exemple, si l'on souhaite cr\u00e9er une fonction <code>addition(a, b)</code>, qui effectue une addition de deux entiers donn\u00e9s et renvoie le r\u00e9sultat, on pourrait \u00e9crire :\\newline</p> <pre><code>def addition(a, b):  # a et b sont les param\u00e8tres de la fonction\n    return a + b  # le mot-cl\u00e9 return permet de renvoyer le r\u00e9sultat\n</code></pre> <p><code>a</code> et <code>b</code> sont appel\u00e9s param\u00e8tres de la fonction. Ce sont des variables d\u00e9finies uniquement dans la fonction.\\newline</p> <p>Pour utiliser la fonction, il faut alors l'\\hilight{\\textbf{l'appeler}}, voici un exemple d'appel :</p> <pre><code>resultat = addition(3, 5)  # Appel de la fonction avec 3 et 5 comme arguments\nprint(resultat)  # Affiche 8\n</code></pre> <p>Dans le bout de code ci-dessus, <code>3</code> et <code>5</code> sont appel\u00e9s arguments. La fonction est alors ex\u00e9cut\u00e9e en rempla\u00e7ant <code>a</code> par <code>3</code> et <code>b</code> par <code>5</code>. La valeur de retour de la fonction est ici stock\u00e9e dans une variable <code>resultat</code>, et on affiche ensuite avec un <code>print</code> le contenu de cette variable <code>resultat</code>.\\newline</p> <p>\u00c0 noter que si l'on souhaite appeler une fonction dans l'interpr\u00e9teur Python, il n'y a pas besoin d'utiliser un <code>print</code>.</p> <p></p> <p>Une fonction = une t\u00e2che</p> <p>G\u00e9n\u00e9ralement, une fonction permet de d\u00e9finir une t\u00e2che bien pr\u00e9cise dans un programme. Cela permet de maintenir une certaine clart\u00e9 et modularit\u00e9 dans l'\u00e9criture du programme.</p> <p>Exercice 1</p> <p>On consid\u00e8re d\u00e9finie la fonction suivante :</p> <pre><code>def mystere(a, b):\n    res = 0\n    for i in range(b):\n        res += a\n    return res\n</code></pre> <ol> <li>Donner le r\u00e9sultat de l'appel <code>mystere(3, 5)</code>.</li> <li>\u00c0 quoi sert cette fonction ?</li> </ol> <p>Exercice 2</p> <p>R\u00e9\u00e9crivez et compl\u00e9tez la fonction <code>pairs(x, y)</code> suivante qui affiche tous les nombres pairs de <code>x</code> \u00e0 <code>y</code> INCLUS.</p> <pre><code>def pairs(x, y):\n    for ... in range(..., ...):\n        if ... % 2 == ...:\n            print(...)\n</code></pre> <p>Sur le m\u00eame mod\u00e8le, \u00e9crivez une fonction <code>impairs(x, y)</code> qui affiche tous les nombres impairs de <code>x</code> \u00e0 <code>y</code> INCLUS.</p> <p>Une fonction ne renvoie pas obligatoirement quelque chose. Si l'on n'utilise pas de <code>return</code>, la valeur <code>None</code> (qui correspond au \"rien\" en Python) est alors renvoy\u00e9e automatiquement.</p> <p>Une fonction peut parfois \u00eatre utilis\u00e9e pour afficher quelque chose plut\u00f4t que pour renvoyer une valeur, comme c'est le cas de la fonction <code>print</code> par exemple.</p> <p>Exercice 3</p> <p>On souhaite \u00e9crire une fonction qui autorise ou non l'acc\u00e8s \u00e0 un man\u00e8ge selon le poids et la taille du visiteur.\\newline</p> <p>\u00c9crire une fonction <code>passe(taille, poids)</code> qui affiche <code>\"Acc\u00e8s autoris\u00e9\"</code> si la taille (un <code>float</code>) donn\u00e9  est comprise entre \\(1m50\\) (<code>= 1.50</code>) et \\(1m85\\) (<code>= 1.85</code>), et si le poids donn\u00e9 (un <code>int</code>) est compris entre \\(65\\) et \\(85~kg\\). Sinon, on affichera <code>\"Acc\u00e8s interdit\"</code>.\\newline</p> <p>Pour rappel, on peut utiliser l'op\u00e9rateur bool\u00e9en <code>and</code> pour combiner plusieurs conditions.</p> <p>Exercice 4</p> <p>\u00c9crire une fonction <code>dessiner(longueur, largeur)</code> qui dessine sur la console un rectangle de longueur et de largeur donn\u00e9es, \u00e0 l'aide d'\u00e9toiles (<code>*</code>).</p> <p>Voici un exemple d'appel de cette fonction :</p> <pre><code>&gt;&gt;&gt; dessiner(15, 3)\n***************\n***************\n***************\n</code></pre> <p>Exercice 5</p> <p>\u00c9crire une fonction <code>compter(v)</code>, qui simule <code>x</code> (un entier) lancers de d\u00e9s de 6 faces, et compte le nombre de fois o\u00f9 la valeur <code>v</code> (un entier) est tir\u00e9e.\\newline</p> <p>Testez ensuite votre fonction.</p>"},{"location":"premiere/bases_python/thonny/","title":"D\u00e9couverte de l'IDE Thonny","text":"Sources <p>Serge Bays - Sp\u00e9cialit\u00e9 Num\u00e9rique et sciences informatiques - Premi\u00e8re Zonensi - Programmation en Python et utilisation de Thonny</p>"},{"location":"premiere/bases_python/thonny/#decouverte-de-lide-thonny","title":"D\u00e9couverte de l'IDE Thonny","text":"<p>Tout au long de l'ann\u00e9e, nous utiliserons un IDE (pour integrated development environment) ou EDI en fran\u00e7ais (pour environnement de d\u00e9veloppement) gratuit et open source con\u00e7u sp\u00e9cialement pour les d\u00e9butants : Thonny.</p> <p>Installer Thonny \u00e0 la maison</p> <p>Thonny est un programme multiplateforme, vous pouvez donc l'installer sur Windows, mais aussi sur Linux ou MacOS. De plus, Thonny est livr\u00e9 avec Python version 3.10, vous n'avez donc pas \u00e0 installer Python s\u00e9par\u00e9ment. Vous pouvez t\u00e9l\u00e9charger Thonny depuis le site officiel en cliquant ici.</p>"},{"location":"premiere/bases_python/thonny/#presentation-de-thonny","title":"Pr\u00e9sentation de Thonny","text":"Source : zonensi Ouvrir l'image en plein \u00e9cran <p>Info</p> <p>L'interface se d\u00e9compose de la mani\u00e8re suivante :</p> <ul> <li>La zone d'ex\u00e9cution, ou Shell, ou console, est une zone interactive dans laquelle vous pouvez saisir une instruction Python. La console peut \u00eatre utilis\u00e9e pour tester une instruction ou s\u00e9rie d'instructions, mais elle est \u00e9galement utilis\u00e9e pour l'ex\u00e9cution des scripts. Pour utiliser la console, il vous suffit de saisir votre instruction \u00e0 droite des trois chevrons puis d'appuyer sur la touche \"Entr\u00e9e\" du clavier.</li> <li>La zone d'\u00e9dition ou zone de scripts, est la zone dans laquelle vous pouvez saisir une s\u00e9rie d'instructions Python, de mani\u00e8re \u00e0 la sauvegarder sous la forme d'un script Python. Un script Python porte d'extension <code>.py</code>.</li> <li>Pour ex\u00e9cuter un script, il faut appuyer soit sur la fl\u00e8che verte de la barre de menu, soit sur la touche F5 du clavier, ou encore par l'interm\u00e9diaire du menu \"Run &gt; Run current script\" (ou \"Ex\u00e9cuter &gt; Ex\u00e9cuter le script courant\" en fran\u00e7ais). Le r\u00e9sultat de l'ex\u00e9cution du script sera affich\u00e9 dans la console.</li> <li>La fen\u00eatre des variables est bien utile pour d\u00e9buter, elle permet de voir la liste des variables cr\u00e9\u00e9es et les valeurs associ\u00e9es suite \u00e0 l'ex\u00e9cution d'instructions ou d'un script.</li> <li>L'assistant d'\u00e9dition contient des informations qui peuvent \u00eatre utiles pour analyser un programme qui ne fonctionne pas.</li> </ul>"},{"location":"premiere/bases_python/thonny/#exercices-dentrainement","title":"Exercices d'entra\u00eenement","text":"<p>Exercice 1</p> <p>Dans la zone d'ex\u00e9cution, saisissez l'expression suivante :</p> <pre><code>&gt;&gt;&gt; 12 + 6\n</code></pre> <p>Quel r\u00e9sultat obtenez-vous ?</p> <p>Exercice 2</p> <p>Ex\u00e9cutez d'autres expressions arithm\u00e9tiques en utilisant les op\u00e9rateurs <code>+</code>, <code>-</code>, <code>*</code> et <code>/</code>.</p> <p>Exercice 3</p> <p>Voici un algorithme \u00e9crit en pseudo-code :</p> <p>\\(A \\leftarrow 14\\) \\(B \\leftarrow 2\\) \\(C \\leftarrow \\frac{A}{B}\\) \\(D \\leftarrow \\frac{A + 6}{B + 3}\\) \\(E \\leftarrow C - D\\)</p> <p>Transcrivez cet algorithme sous la forme d'instructions Python, en utilisant des variables nomm\u00e9es <code>a</code>, <code>b</code>, <code>c</code>, <code>d</code> et <code>e</code>, et saisissez-les dans la zone de scripts de Thonny. Enregistrez le script sous le nom <code>calcul.py</code>, puis ex\u00e9cutez le script.</p> <p>Observez la fen\u00eatre des variables, quelle est valeur associ\u00e9e \u00e0 la variable <code>e</code> ? Vous pouvez \u00e9galement voir le contenu de la variable en saisissant simplement <code>e</code> dans la console de Thonny. En effet, lorsque vous ex\u00e9cutez un script, vous pouvez ex\u00e9cuter des instructions dans la console en utilisant les variables d\u00e9finies suite \u00e0 l'ex\u00e9cution du script.</p>"},{"location":"premiere/interactions/","title":"Interactions Homme-Machine sur le web","text":""},{"location":"premiere/interactions/#interactions-homme-machine-sur-le-web","title":"Interactions Homme-Machine sur le web","text":"<p>Lors de la navigation sur le Web, les internautes interagissent avec la machine \u00e0 l'aide de pages Web. L\u2019Interface Homme-Machine (IHM) repose sur la gestion d\u2019\u00e9v\u00e8nements, \u00e9v\u00e8nements associ\u00e9s \u00e0 des \u00e9l\u00e9ments d'une page web, et d\u00e9clenchant \u00e0 des algorithmes. La relation client-serveur d\u00e9j\u00e0 abord\u00e9 en classe de seconde sera ici approfondie, en s'int\u00e9ressant aux requ\u00eates du client, aux calculs effctu\u00e9s puis aux r\u00e9ponses du serveur.</p> Liste des contenus Description Cours - Les langages HTML et CSS Rappels sur les langages HTML et CSS. Cours - Le JavaScript (JS) Cours sur le Javascript (JS). Cours - Mod\u00e8le client/serveur et protocole HTTP Cours sur le mod\u00e8le client/serveur, le protocole HTTP et les formulaires. Notebooks et exercices Notebooks et exercices sur l'IHM."},{"location":"premiere/interactions/clientserveur/","title":"Mod\u00e8le client/serveur et HTTP","text":"Sources <ul> <li>Balabonski Premi\u00e8re</li> <li>nsi-a-feuillade.fr</li> <li>geonov.fr</li> </ul>"},{"location":"premiere/interactions/clientserveur/#modele-clientserveur-et-protocole-http","title":"Mod\u00e8le client/serveur et protocole HTTP","text":"<p>Le Web \u00e9tait initialement une collection de documents hypertextes accessibles sur Internet. Toutefois, les sites Web ont \u00e9volu\u00e9 pour devenir de v\u00e9ritables applications, avec une interface graphique (d\u00e9crite en HTML et CSS), du code client de gestion d\u2019\u00e9l\u00e9ments interactifs (JavaScript) s\u2019ex\u00e9cutant dans le navigateur et des traitements de donn\u00e9es complexes effectu\u00e9s sur le serveur web (avec des langages comme PHP) h\u00e9bergeant le site.</p> <p>Dans cette partie, nous verrons les \u00e9l\u00e9ments communs \u00e0 la conception d\u2019une application Web interactive : le mod\u00e8le client/serveur, le protocole HTTP ainsi que la notion de formulaire Web.</p>"},{"location":"premiere/interactions/clientserveur/#le-modele-clientserveur","title":"Le mod\u00e8le client/serveur","text":"<p>Lorsqu'un ordinateur A veut \u00e9changer des donn\u00e9es avec un ordinateur B, l'ordinateur A va demander des fichiers (texte, photos, vid\u00e9os\u2026) \u00e0 l'ordinateur B.</p> <p>Dans ce cas l'ordinateur A est le client (il demande des ressources), l'ordinateur B (qui fournit les ressources) est le serveur.</p> <p></p> <p>L'exemple classique est lorsque l'on effectue une navigation sur internet. Notre navigateur web (donc nous sommes client) demande (on dit qu'il effectue une \"requ\u00eate\") le contenu d'une page web stock\u00e9e sur un serveur web (donc serveur). Ce dernier lui envoie le r\u00e9sultat (on parle de \"r\u00e9ponse\").</p> <p>Dans le cas d'une consultation de page web, le serveur enverra l'ensemble des donn\u00e9es qui accompagne le lecture correcte de la page: fichiers css, images, fichiers javascript\u2026</p> <p>Les types d'architecture client/serveur</p> <p>Si toutes les ressources n\u00e9cessaires sont pr\u00e9sentes sur un seul serveur, on parle d\u2019architecture \u00e0 deux niveaux ou 2 tiers. Ici par exemple, les deux tiers sont le client et le serveur :</p> <p></p> <p>Si certaines ressources sont pr\u00e9sentes sur un deuxi\u00e8me serveur (par exemple des bases de donn\u00e9es), on parle d\u2019architecture \u00e0 trois niveaux ou 3 tiers (1 client interroge le premier serveur qui lui-m\u00eame interroge le deuxi\u00e8me serveur)</p> <p></p> <p>Au-del\u00e0, on parle d'architecture \\(n\\)-tiers.</p> <p>Le peer-to-peer</p> <p>Dans certains cas, l'ordinateur peut \u00e0 la fois jouer le r\u00f4le de client et de serveur, (c'est le cas par exemple avec le peer-to-peer).</p> <p></p>"},{"location":"premiere/interactions/clientserveur/#les-datacenters","title":"Les datacenters","text":"<p>Afin d'assurer une continuit\u00e9 de service, dans les soci\u00e9t\u00e9s, plusieurs serveurs assurent exactement le m\u00eame r\u00f4le (on parle de redondance). Il est en effet peu envisageable d'utiliser un seul serveur d\u00e8s lors qu'un site g\u00e9n\u00e8re un trafic important, et donc implique un nombre cons\u00e9quent de requ\u00eates.</p> <p>Les tr\u00e8s gros sites web comme Google, Amazon ou encore Facebook, poss\u00e8dent un tr\u00e8s grand nombre de serveurs afin de pouvoir satisfaire les demandes des utilisateurs en permanence.</p> <p>Pour r\u00e9pondre \u00e0 ce nombre de requ\u00eates important, les serveurs sont concentr\u00e9s dans un datacenter (qui sont des b\u00e2timents tr\u00e8s s\u00e9curis\u00e9s).</p> <p></p> <p>Chaque armoire sur l'image ci-contre (qu'on appelle une baie) contient des centaines de serveur entass\u00e9s les uns sur les autres.</p> <p>Ces serveurs sont des machines plates, ce qui facilite leur entassement. Il n'y a pas de moniteur, car on ne les utilise pas directement. Ils se contentent de transmettre des donn\u00e9es sur le r\u00e9seau.</p> <p>Des serveurs sp\u00e9cialis\u00e9s</p> <p>Parfois, les sites web utilisent des serveurs sp\u00e9cialis\u00e9s dans certaines t\u00e2ches. Par exemple, les serveurs qui envoient aux clients des pages HTML sont appel\u00e9s serveurs web.</p> <p>Il existe des serveurs pour g\u00e9rer des fichiers (serveurs de fichier), des serveurs pour permettre l'impression de document (serveurs d'impression), pour g\u00e9rer les emails (serveurs de messagerie)...</p> <p>Les serveurs peuvent g\u00e9n\u00e9rer du code HTML. Ainsi le code HTML envoy\u00e9 aux clients d\u00e9pendra des actions du client lui-m\u00eame. On parle de page web dynamique. Pour g\u00e9rer le traitement des requ\u00eates et l'interaction avec les bases de donn\u00e9es, il existe des langages de programmation mais qui s'ex\u00e9cute \"cot\u00e9 serveur\". Le plus utilis\u00e9 se nomme PHP, mais on peut aussi utiliser du JavaScript (avec node.js), du python, du ruby...</p>"},{"location":"premiere/interactions/clientserveur/#le-protocole-http","title":"Le protocole HTTP","text":""},{"location":"premiere/interactions/clientserveur/#principe-et-fonctionnement","title":"Principe et fonctionnement","text":"<p>Le protocole HTTP (acronyme de Hypertext Transfer Protocol) est le protocole r\u00e9seau utilis\u00e9 par les navigateurs Web (Firefox, Internet Explorer...) et les serveurs Web (Apache, Nginx, Microsoft IIS...) pour communiquer entre eux.</p> <p>C'est ce protocole qui est utilis\u00e9 lorsque vous acc\u00e9dez \u00e0 une page web. Il permet ainsi d'obtenir les fichiers HTML, CSS, JavaScript, les images, les vid\u00e9os, bref, toutes les ressources dont votre navigateur a besoin pour afficher votre page web.</p> <p>Le protocole HTTP permet \u00e9galement de transmettre des donn\u00e9es au serveur, par l'interm\u00e9diaire de formulaires Internet.</p> <p>Techniquement, il s'agit d'un protocole texte (donc lisible en clair) s'appuyant les protocoles plus bas-niveau TCP et IP (voir le mod\u00e8le Internet ci-dessous).</p> <p>Les robots des moteurs de recherche (comme Googlebot) qui explorent les sites internet utilisent \u00e9galement le protocole HTTP pour communiquer avec les serveurs web.</p> <p>Fonctionnement du protocole HTTP</p> <p>Prenons comme exemple l'URL suivante : <code>http://nsi.erwandemerville.fr/premiere/ihm</code>.</p> <p>Lorsque l'on essaie d'acc\u00e9der \u00e0 cette URL avec un navigateur, voici ce qu'il se passe :</p> <ul> <li>le <code>http</code> au d\u00e9but de l'URL indique que l'on utilise le procole HTTP,</li> <li>le navigateur extrait le nom de domaine 'nsi.erwandemerville.fr' (ici, l'adresse est plus pr\u00e9cis\u00e9ment compos\u00e9e d'un sous-domaine <code>nsi</code> et d'un domaine <code>erwandemerville.fr</code>) et \u00e0 partir de cette information, il trouve le serveur web distant en faisant appel \u00e0 un serveur DNS qui fait le lien entre le nom de domaine et l'adresse IP,</li> <li>\u00e0 partir de l\u00e0, une connexion (bas\u00e9e sur les protocoles TCP/IP) est \u00e9tablie entre le navigateur et le serveur web distant,</li> <li>une requ\u00eate HTTP demandant la ressource '/premiere/ihm' est alors transmise par le navigateur,</li> <li>le serveur web trouve la ressource correspondante et en renvoie le contenu dans une r\u00e9ponse HTTP,</li> <li>le navigateur est d\u00e9sormais capable d'afficher le fichier HTML \u00e0 l'internaute.</li> </ul> <p>Une en-t\u00eate de requ\u00eate envoy\u00e9e par le navigateur</p> <p>Une en-t\u00eate de requ\u00eate envoy\u00e9e par le navigateur \u00e0 un serveur web ressemble \u00e0 ceci :</p> <pre><code>GET /fichier.html HTTP/1.1[CRLF]\nHost: www.monsite.com[CRLF]\nUser-Agent: Mozilla/5.0 Safari/531.9[CRLF][CRLF]\n</code></pre> <p>La premi\u00e8re ligne contient toujours : - le type de requ\u00eate (ici <code>GET</code>), la partie chemin de l'URL de la ressource cible et enfin la version du protocole (1.0 ou 1.1 g\u00e9n\u00e9ralement, ici <code>1.1</code>). - Les 2 types de requ\u00eate les plus courantes sont :   - GET : permet d'obtenir une ressource. Il s'agit de la requ\u00eate la plus utilis\u00e9e sur Internet, c'est celle qui est utilis\u00e9e lorsque vous acc\u00e9dez \u00e0 un site web dans votre navigateur.   - POST : permet d'envoyer le contenu d'un formulaire \u00e0 un serveur, afin que ces donn\u00e9es soient trait\u00e9es (par exemple, un formulaire de connexion \u00e0 un site web utilise la m\u00e9thode <code>POST</code>).</p> <p>Les <code>[CRLF]</code> symbolisent une s\u00e9quence ASCII, appel\u00e9e <code>[Carriage Return - Line feed]</code>. C'est en fait le d\u00e9limiteur utilis\u00e9 par le protocole HTTP pour s\u00e9parer les lignes de l'en-t\u00eate. En ASCII, c'est le caract\u00e8re 13 suivi du caract\u00e8re 10.</p> <p>Les lignes suivantes sont des champs HTTP, toujours format\u00e9es de cette mani\u00e8re <code>\"NomChamps: Valeur\"</code>.</p> <p>Une en-t\u00eate de r\u00e9ponse envoy\u00e9e par le serveur</p> <p>Une en-t\u00eate de r\u00e9ponse \u00e0 une requ\u00eate du navigateur ressemble \u00e0 ceci :</p> <pre><code>HTTP/1.1 200 OK[CRLF]\nDate: Thu, 24 Sep 2009 19:37:34 GMT[CRLF]\nServer: Apache/2.2.3[CRLF]\nContent-Length: 7234[CRLF]\nContent-Type: text/html; charset=UTF-8[CRLF][CRLF]\n[ici se trouve le corps de la r\u00e9ponse : la page HTML]\n</code></pre> <p>La premi\u00e8re ligne de la r\u00e9ponse contient toujours un code HTTP indiquant si la requ\u00eate a r\u00e9ussi ou pas (ici, le code est <code>200</code>, indiquant une r\u00e9ussite).</p> <p>Ensuite, comme pour la r\u00e9ponse, on trouve les lignes des champs HTTP. - La ligne Server indique le type de serveur qui a fourni la r\u00e9ponse (le plus</p> <p>souvent Apache..(install\u00e9 sur pr\u00e8s de la moiti\u00e9 des serveurs mondiaux) Ensuite se trouve le corps de la r\u00e9ponse, qui dans le cas d'un GET d'un fichier HTML contient par exemple le code HTML de la page vis\u00e9e.</p>"},{"location":"premiere/interactions/clientserveur/#la-commande-curl","title":"La commande <code>curl</code>","text":"<p>La commande <code>curl</code> permet d'effectuer une requ\u00eate vers un serveur web.</p> <p>Par exemple : <code>curl https://nsi.erwandemerville.fr --head</code>. Le <code>--head</code> permet de ne r\u00e9cup\u00e9rer que l'en-t\u00eate de la r\u00e9ponse, sans le code HTML.</p> Les informations obtenues <ul> <li>HTTP/2 200: C'est le code de statut HTTP qui indique que la requ\u00eate a r\u00e9ussi (200 OK). HTTP/2 est la version du protocole HTTP utilis\u00e9e pour cette r\u00e9ponse.</li> <li>server: GitHub.com: Cela indique le serveur qui a r\u00e9pondu \u00e0 la requ\u00eate. Dans ce cas, la r\u00e9ponse provient du serveur GitHub.com.</li> <li>content-type: text/html; charset=utf-8: Cela sp\u00e9cifie le type de contenu de la r\u00e9ponse, dans ce cas, c'est du texte au format HTML avec un encodage de caract\u00e8res UTF-8.</li> <li>last-modified: Fri, 05 Apr 2024 06:18:40 GMT: C'est la date et l'heure de la derni\u00e8re modification du contenu de la ressource sur le serveur. Cela peut \u00eatre utile pour les caches et les clients qui veulent savoir si la version qu'ils ont est \u00e0 jour.</li> <li>access-control-allow-origin : Cet en-t\u00eate indique quelles origines sont autoris\u00e9es \u00e0 acc\u00e9der \u00e0 la ressource en r\u00e9ponse \u00e0 une requ\u00eate d'origine crois\u00e9e. Ici, l'ast\u00e9risque () indique que toutes les origines sont autoris\u00e9es.</li> <li>etag: \"660f97c0-12b67\": C'est une cha\u00eene de caract\u00e8res qui repr\u00e9sente la version sp\u00e9cifique de la ressource. Il est utilis\u00e9 pour la mise en cache et la v\u00e9rification de la version.</li> <li>expires: Sun, 07 Apr 2024 23:43:03 GMT: C'est la date et l'heure \u00e0 laquelle la r\u00e9ponse ne sera plus consid\u00e9r\u00e9e comme valide sans effectuer une nouvelle requ\u00eate au serveur. Cela aide les navigateurs \u00e0 d\u00e9cider s'ils doivent utiliser une copie en cache ou demander une nouvelle version.</li> <li>cache-control: max-age=600: Cela indique les directives de mise en cache pour les clients et les caches interm\u00e9diaires. Dans ce cas, il sp\u00e9cifie que la r\u00e9ponse peut \u00eatre mise en cache pendant 600 secondes (10 minutes).</li> <li>x-proxy-cache: MISS: Cet en-t\u00eate indique si la r\u00e9ponse a \u00e9t\u00e9 r\u00e9cup\u00e9r\u00e9e \u00e0 partir d'un cache proxy. Dans ce cas, il indique qu'elle n'a pas \u00e9t\u00e9 trouv\u00e9e dans le cache (MISS).</li> <li>x-github-request-id: C'est un identifiant unique g\u00e9n\u00e9r\u00e9 par GitHub pour cette requ\u00eate sp\u00e9cifique. Il peut \u00eatre utilis\u00e9 pour le d\u00e9bogage et le suivi des requ\u00eates.</li> <li>accept-ranges: bytes: Cela indique au client que le serveur prend en charge les demandes de plage de ressources. Cela signifie que le client peut demander des parties sp\u00e9cifiques de la ressource plut\u00f4t que de la t\u00e9l\u00e9charger en entier.</li> <li>age: 0: C'est l'\u00e2ge de la r\u00e9ponse en secondes, indiquant depuis combien de temps la r\u00e9ponse est en cache sur un serveur interm\u00e9diaire.</li> <li>date: Sun, 07 Apr 2024 23:33:03 GMT: C'est la date et l'heure actuelle selon le serveur.</li> <li>via: 1.1 varnish: Cela indique que la r\u00e9ponse est pass\u00e9e par un serveur de mise en cache (Varnish) sur le chemin de retour au client.</li> <li>x-served-by: cache-par-lfpg1960049-PAR: Cet en-t\u00eate indique le serveur qui a servi la r\u00e9ponse, dans ce cas, un serveur de cache avec une certaine identification.</li> <li>x-cache: MISS: Cet en-t\u00eate fournit des informations sur l'\u00e9tat de mise en cache de la r\u00e9ponse. Dans ce cas, il indique que la r\u00e9ponse n'\u00e9tait pas dans le cache (MISS).</li> <li>x-cache-hits: 0: Cet en-t\u00eate indique le nombre de fois que cette r\u00e9ponse a \u00e9t\u00e9 trouv\u00e9e dans le cache. Dans ce cas, elle n'a pas \u00e9t\u00e9 trouv\u00e9e dans le cache pr\u00e9c\u00e9demment.</li> <li>x-timer: S1712532784.540291,VS0,VE113: Cet en-t\u00eate fournit des informations sur le temps qu'il a fallu pour traiter la requ\u00eate du serveur. Il comprend diff\u00e9rents marqueurs de temps li\u00e9s au traitement de la requ\u00eate.</li> <li>vary: Accept-Encoding: Cela indique que la r\u00e9ponse peut varier en fonction de l'en-t\u00eate Accept-Encoding envoy\u00e9 par le client, ce qui signifie que le serveur peut r\u00e9pondre avec diff\u00e9rentes versions en fonction des capacit\u00e9s de compression du client.</li> <li>x-fastly-request-id: c83fb09b8200e484b8cabe6906aee527a217a6cf: C'est un identifiant unique g\u00e9n\u00e9r\u00e9 par le service de mise en cache Fastly pour cette requ\u00eate sp\u00e9cifique. Il peut \u00eatre utilis\u00e9 pour le suivi et le d\u00e9bogage.</li> <li>content-length: 76647: C'est la longueur du contenu de la r\u00e9ponse en octets.</li> </ul> <p>Ces en-t\u00eates fournissent diverses informations sur la r\u00e9ponse HTTP qui peuvent \u00eatre utilis\u00e9es par le client pour interpr\u00e9ter et traiter la r\u00e9ponse de mani\u00e8re appropri\u00e9e.</p>"},{"location":"premiere/interactions/clientserveur/#exercices-activites","title":"Exercices - Activit\u00e9s","text":"Quelques exemples avec Flask  Un TP avec Flask"},{"location":"premiere/interactions/exercices/","title":"Notebooks et exercices","text":""},{"location":"premiere/interactions/exercices/#exercices-et-notebooks-sur-lihm","title":"Exercices et notebooks sur l'IHM","text":""},{"location":"premiere/interactions/exercices/#entrainement-sur-le-html-et-css","title":"Entra\u00eenement sur le HTML et CSS","text":"<p>Rendez-vous sur le site codepen.io, puis tentez de reproduire la page web suivante. N'h\u00e9sitez pas \u00e0 consulter les cours pour vous aider si besoin.</p> <p></p> <p>Partie HTML corrig\u00e9e</p> <p>Cliquez sur le lien ci-dessous pour acc\u00e9der \u00e0 un codepen contenant le code HTML complet :</p> <p></p> Cliquez ici pour acc\u00e9der au codepen"},{"location":"premiere/interactions/exercices/#notebooks-jupyter","title":"Notebooks Jupyter","text":"<p>HTML et CSS :</p> <ul> <li>Notebook - Les bases du HTML et du CSS</li> <li>Notebook - CSS approfondissement</li> </ul> <p>JavaScript :</p> <ul> <li>Notebook - Modifier les \u00e9l\u00e9ments du DOM avec JavaScript</li> </ul>"},{"location":"premiere/interactions/exercices/#autres-exercices","title":"Autres exercices","text":"<p>Voici d'autres exercices pour vous permettre d'aller plus loin dans votre apprentissage du JavaScript :</p> <ul> <li>http://portail.lyc-la-martiniere-diderot.ac-lyon.fr/srv1/html/cours_js_nsi/evenements/actions.html</li> <li>https://pixees.fr/informatiquelycee/n_site/nsi_prem_js.html</li> <li>https://frederic-junier.gitlab.io/parc-nsi/chapitre23/javascript-git2/</li> <li>https://odyssey.sdlm.be/</li> </ul>"},{"location":"premiere/interactions/htmlcss/","title":"Cours HTML et CSS","text":""},{"location":"premiere/interactions/htmlcss/#cours-html-et-le-css","title":"Cours - HTML et le CSS","text":"<p>Avant de d\u00e9couvrir le langage JavaScript permettant de rajouter du dynamisme \u00e0 vos pages web, il est important de ma\u00eetriser les bases du langage de description/balisage HTML (Hypertext Markup Language) et du langage de feuilles de style CSS (Cascading Style Sheets).</p> <p>Voici deux cours \u00e0 consulter en priorit\u00e9 :</p> <ul> <li>Cours de SNT sur HTML et CSS</li> <li>Cours de \u00c9ric ROUGIER et Paul GODARD </li> </ul> <p>Voici des liens additionnels int\u00e9ressants pour approfondir votre ma\u00eetrise des langages HTML et CSS :</p> <ul> <li>W3Schools</li> <li>Cours Openclassrooms</li> <li>MDN Web Docs</li> <li>Khan Academy</li> </ul>"},{"location":"premiere/interactions/js/","title":"Le JavaScript","text":""},{"location":"premiere/interactions/js/#dynamiser-une-page-web-avec-javascript","title":"Dynamiser une page web avec JavaScript","text":"<p>JavaScript est un langage de programmation largement utilis\u00e9 dans le d\u00e9veloppement Web, r\u00e9put\u00e9 pour sa polyvalence et sa capacit\u00e9 \u00e0 cr\u00e9er des interactions dynamiques sur les pages Web. Cr\u00e9\u00e9 par Brendan Eich, un ing\u00e9nieur logiciel de Netscape, en 1995, JavaScript a rapidement \u00e9volu\u00e9 pour devenir l'un des langages de programmation les plus populaires au monde. Contrairement \u00e0 HTML et CSS, qui sont utilis\u00e9s pour structurer et styliser les pages Web respectivement, JavaScript permet d'ajouter des fonctionnalit\u00e9s interactives et dynamiques aux sites Web, telles que des formulaires interactifs, des animations, des jeux en ligne, et bien plus encore.</p>"},{"location":"premiere/interactions/js/#introduction","title":"Introduction","text":"<p>Point de cours</p> <p>Javascript est un langage interpr\u00e9t\u00e9 (comme Python) qui s'ex\u00e9cute dans le navigateur du client. Javascript s'est impos\u00e9 depuis son apparition en 1995 dans le navigateur Netscape comme le principal langage de d\u00e9veloppement Web en frontend (c\u00f4t\u00e9 client) et depuis une dizaine d'ann\u00e9es, sa variante Node.js concurence les langages de d\u00e9veloppement backend (c\u00f4t\u00e9 serveur) comme PHP ou Python.</p> <p>Une page Web moderne, re\u00e7ue par un client, comporte au moins trois composants logiciels :</p> <ul> <li>HTML pour la structure du document.</li> <li>CSS pour le param\u00e9trage de l'apparence des \u00e9l\u00e9ments et leur positionnement.</li> <li>Javascript pour la d\u00e9finition de programmes qui vont r\u00e9agir \u00e0 des \u00e9v\u00e9nements d\u00e9clench\u00e9s par l'utilisateur de la page et modifier la structure de donn\u00e9es de la page ( \u00e9l\u00e9ments HTML et styles CSS) \u00e0 travers l'API nomm\u00e9e DOM2. Le DOM est une repr\u00e9sentation de l'ensemble de la structure de la page Web sous la forme d'un arbre : les noeuds sont les \u00e9l\u00e9ments HTML et ils ont une liste de propri\u00e9t\u00e9s : contenu, style, \u00e9v\u00e9nements associ\u00e9s... Ex\u00e9cuter du javascript va donc modifier l'arbre DOM de la page web. L'inspecteur des outils de d\u00e9veloppement, accessibles avec la touche F12 dans un navigateur, permet de visualiser et modifier les propri\u00e9t\u00e9s des \u00e9l\u00e9ments du DOM.</li> </ul> <p>L'environnement d'ex\u00e9cution d'un code Javascript est confin\u00e9 \u00e0 l'onglet de la page Web o\u00f9 il est charg\u00e9. Pour des raisons de s\u00e9curit\u00e9 il ne doit pas interagir avec d'autres pages ou des ressources du poste client. Par ailleurs, si on recharge la page aupr\u00e8s du serveur, l'environnement Javascript est r\u00e9initialis\u00e9 et les modifications de la page effectu\u00e9es par un code Javascript ne sont pas r\u00e9percut\u00e9es sur la page source disponible sur le serveur.</p> <p>Le Javascript correspond \u00e0 un paradigme de programmation \u00e9v\u00e9nementielle.</p> Sch\u00e9ma HTML DOM (voir en taille r\u00e9elle)"},{"location":"premiere/interactions/js/#premiers-pas-avec-javascript","title":"Premiers pas avec JavaScript","text":"<p>Une mani\u00e8re simple de mener une premi\u00e8re exp\u00e9rimentation du langage JavaScript est d'ouvrir la console Javascript dans la fen\u00eatre des outils de d\u00e9veloppement, en appuyant sur F12 ou Ctrl+Shift+K sous Firefox.</p> <p>On va ex\u00e9cuter de fa\u00e7on interactive une s\u00e9quence d'instructions Javascript pour exp\u00e9rimenter quelques constructions \u00e9l\u00e9mentaires et propri\u00e9t\u00e9s du langage. Chaque instruction pourra modifier l'\u00e9tat du DOM et donc le rendu graphique de la page Web.</p> <p>\u00c0 faire 1</p> <p>Ex\u00e9cutez les instructions suivantes, et observez les r\u00e9sultats obtenus.</p> <pre><code>&gt;&gt;&gt; let a = 1\n&gt;&gt;&gt; (a * 3 + 1) ** 2 / 5 - 1\n&gt;&gt;&gt; (a * 3 + 1) ** 2 // commentaire !\n&gt;&gt;&gt; let b = \"Hello\"\n&gt;&gt;&gt; b + \" World\"\n&gt;&gt;&gt; typeof(a)\n&gt;&gt;&gt; typeof(b)\n&gt;&gt;&gt; a = b + a\n&gt;&gt;&gt; typeof(a)\n</code></pre> <p>Indiquez les bonnes r\u00e9ponses dans la phrase suivante : Javascript est \u00e0 typage (fort | faible) et (dynamique | statique) et une variable \u00e9gale \u00e0 5 se d\u00e9clare avec (<code>let a = 5</code> | <code>a = 5</code>).</p> <p>\u00c0 faire 2</p> <p>Examinons un exemple avec une fonction, une structure conditionnelle et une boucle. Dans la console, passer en mode \u00e9diteur multiligne en appuyant sur Ctrl+B et saisissez le code ci-dessous :</p> <pre><code>function valabs(x){\n    if (x &lt; 0){\n        return -x;\n    }\n    else {\n        return x;\n    }\n}\n\nfor (let i = -4; i &lt; 5; i = i + 1){\n    if (valabs(i) &gt; 2){\n        alert(i);\n    }\n    else {\n        console.log(i);\n    }\n}\n</code></pre> <p>Indiquez les bonnes r\u00e9ponses dans les deux phrases suivantes :</p> <ol> <li>en JavaScript, les blocs d'instructions sont d\u00e9limit\u00e9s par (l'indentation | des accolades), les fonctions sont d\u00e9clar\u00e9es avec le mot clef (def | function) et une boucle born\u00e9e sur les entiers entre 1 et 10 commence par l'instruction ( <code>for k in range(1, 11)</code> | <code>for (let k = 1; k &lt; 11; k = k + 1)</code> )</li> <li>la fonction <code>alert</code> affiche son param\u00e8tre dans (une fen\u00eatre pop-up | la console) tandis que la fonction <code>console.log</code> affiche son param\u00e8tre dans (une fen\u00eatre pop-up | la console).</li> </ol>"},{"location":"premiere/interactions/js/#cours","title":"Cours","text":"Cours sur le langage JavaScript (\u00e0 lire) <p>Voici \u00e9galement d'autres ressources int\u00e9ressantes pour vous permettre d'approfondir votre ma\u00eetrise du langage javascript :</p> <ul> <li>https://developer.mozilla.org/fr/docs/Web/JavaScript/Guide</li> <li>https://www.lyceum.fr/1g/nsi/5-interactions-entre-lhomme-et-la-machine-sur-le-web/4-gestion-des-evenements-en-javascript/</li> <li>https://www.math93.com/lycee/nsi-1ere/nsi-1ere/146-pedagogie/lycee/nsi/993-nsi-numerique-et-sciences-informatiques-javascript-et-html.html</li> </ul> <p>Pour vous entra\u00eener, voir la partie exercices et notebooks.</p>"},{"location":"premiere/pyxel/","title":"Le module Pyxel","text":""},{"location":"premiere/pyxel/#le-module-pyxel","title":"Le module Pyxel","text":"Logo de Pyxel Liste des contenus Description  Un jeu de Snake R\u00e9alisation d'un petit jeu de Snake pour introduire le module Pyxel."},{"location":"premiere/pyxel/projetjv/","title":"Projet - R\u00e9aliser un jeu vid\u00e9o 2D","text":""},{"location":"premiere/pyxel/projetjv/#projet-realiser-un-jeu-video-2d","title":"Projet - R\u00e9aliser un jeu vid\u00e9o 2D","text":"<p>Voici le contenu li\u00e9 \u00e0 ce projet (\u00e0 consulter dans l'ordre) :</p> <ol> <li>Feuille de projet : feuille contenant toutes les informations sur l'activit\u00e9 (objectif, bar\u00e8me, etc.)</li> <li>Pad \"Cr\u00e9ation d'un jeu vid\u00e9o\" : quelques ressources pour vous aider dans la r\u00e9alisation de votre jeu.</li> </ol>"},{"location":"premiere/pyxel/realisations/","title":"R\u00e9alisations des \u00e9l\u00e8ves","text":""},{"location":"premiere/pyxel/realisations/#realisations-des-eleves","title":"R\u00e9alisations des \u00e9l\u00e8ves","text":"<p>Voici les jeux r\u00e9alis\u00e9s par les \u00e9l\u00e8ves de premi\u00e8re \u00e0 l'aide du module Pyxel.</p> <p>Cliquez sur le bouton Jouer pour lancer un jeu sur votre navigateur. Note : au moment o\u00f9 le texte <code>\"CLICK TO START\"</code> appara\u00eet, il faut parfois patienter quelques secondes apr\u00e8s avoir cliqu\u00e9 pour que le jeu d\u00e9marre. Vous pouvez \u00e9galement t\u00e9l\u00e9charger le jeu afin de l'ex\u00e9cuter sur votre machine avec le bouton T\u00e9l\u00e9charger.</p> <p></p> Fant\u00f4me Survivor <p></p> <p>Jouer   T\u00e9l\u00e9charger </p> <p></p> Ghost Invasion <p></p> <p>Jouer   T\u00e9l\u00e9charger </p> <p></p> Zombie Crusher <p></p> <p>Jouer   T\u00e9l\u00e9charger </p> <p></p> Cave's Runner <p></p> <p>Jouer   T\u00e9l\u00e9charger </p> <p></p> Bomberman <p></p> <p>Jouer   T\u00e9l\u00e9charger </p>"},{"location":"premiere/pyxel/snake/","title":"Jeu de snake","text":""},{"location":"premiere/pyxel/snake/#un-jeu-de-snake-avec-pyxel","title":"Un jeu de snake avec Pyxel","text":"<p>\u00c9nonc\u00e9 et programme de base</p> <p>Voici le PDF de l'\u00e9nonc\u00e9 de l'exercice comportant des trous, ainsi qu'un programme Python de base \u00e0 t\u00e9l\u00e9charger et ouvrir dans Thonny :</p> <ul> <li>Snake - \u00c9nonc\u00e9 \u00e0 trous</li> <li>Programme Python de base</li> </ul>"},{"location":"premiere/pyxel/snake/#pistes-damelioration","title":"Pistes d'am\u00e9lioration","text":"<p>On pourrait am\u00e9liorer davantage le jeu, par exemple :</p> <ul> <li>en faisant en sorte qu'en sortant de l'\u00e9cran d'un c\u00f4t\u00e9, le snake r\u00e9apparaisse de l'autre c\u00f4t\u00e9,</li> <li>en ajoutant un \u00e9cran de \"Game Over\" en cas d'\u00e9chec,</li> <li>en cr\u00e9ant un syst\u00e8me de niveaux de plus en plus durs et en y ajoutant des obstacles,</li> <li>etc.</li> </ul>"},{"location":"premiere/representation_donnees/","title":"Repr\u00e9sentation des donn\u00e9es en machine","text":""},{"location":"premiere/representation_donnees/#representation-des-donnees-en-machine","title":"Repr\u00e9sentation des donn\u00e9es en machine","text":"Liste des contenus Description Cours - Repr\u00e9sentation des donn\u00e9es Cours portant sur la repr\u00e9sentation des donn\u00e9es en machine. Notebooks et exercices Des exercices suppl\u00e9mentaires sur la repr\u00e9sentation des donn\u00e9es."},{"location":"premiere/representation_donnees/cours/","title":"Cours","text":""},{"location":"premiere/representation_donnees/cours/#representation-des-donnees-en-machine","title":"Repr\u00e9sentation des donn\u00e9es en machine","text":"Extrait du programme <p>Voici un extrait du programme indiquant les notions \u00e0 ma\u00eetriser sur ce th\u00e8me.</p> <p></p> <p>Dans un ordinateur, toutes les informations (donn\u00e9es ou programmes) sont repr\u00e9sent\u00e9es \u00e0 l\u2019aide de deux chiffres : le 0 et 1, appel\u00e9s chiffres binaires ou Binary Digits (bits) en anglais.</p> <p>Dans la m\u00e9moire d\u2019un ordinateur (RAM, ROM, registres des microprocesseurs, etc.), ces chiffres binaires sont regroup\u00e9s par paquets de 8, que l'on appelle octets (ou bytes en anglais), puis organis\u00e9s en mots machine (ou words en anglais) de 2, 4 ou 8 octets en g\u00e9n\u00e9ral. Un ordinateur de 32 bits par exemple manipule directement des mots de 4 octets (4 octets \u00d7 8 bits = 32 bits) lorsqu\u2019il effectue des op\u00e9rations en m\u00e9moire ou dans ses calculateurs.</p> <p>Le regroupement des bits en octets ou mots machine permet de repr\u00e9senter des donn\u00e9es telles que des nombres entiers, des nombres r\u00e9els (on verra que l'on ne peut repr\u00e9senter que des approximations des nombres r\u00e9els), ou encore des caract\u00e8res et des textes (on introduira la notion d'encodage).</p>"},{"location":"premiere/representation_donnees/cours/#representation-des-entiers-naturels","title":"Repr\u00e9sentation des entiers naturels","text":"<p>L'encodage le plus simple est celui des nombres entiers naturels (nombres entiers positifs).</p> <p>Pour repr\u00e9senter des nombres, les ordinateurs utilisent le syst\u00e8me binaire : Le codage binaire d\u2019un nombre positif \\(n\\) est la suite de \\(k\\) bits \\(b_{k - 1} ... b_0\\) telle que \\(n = b_{k \u2212 1} \u00d7 2^{k \u2212 1} + b_{k \u2212 2} \u00d7 2^{k \u2212 2} + ... + b_1 \u00d7 2^1 + b_0 \u00d7 2^0\\) . Ainsi le nombre \\(42\\) en d\u00e9cimal est repr\u00e9sent\u00e9 par \\(101010\\) en binaire : \\(42 = \\textbf{1} \u00d7 2\u2075 + \\textbf{0} \u00d7 2\u2074 + \\textbf{1} \u00d7 2\u00b3 + \\textbf{0} \u00d7 2\u00b2 + \\textbf{1} \u00d7 2\u00b9 + \\textbf{0} \u00d7 2\u2070\\) \\(42 = \\textbf{1} \u00d7 2\u2075 + \\textbf{1} \u00d7 2\u00b3 + \\textbf{1} \u00d7 2^1\\) \\(42 = 32 + 8 + 2\\)</p> <p>\u00c0 vous de jouer</p> <p>Voici des nombres entiers en base binaire, donner l'\u00e9criture en base d\u00e9cimale de ces nombres :</p> <ul> <li>\\(0100 1010_2\\)</li> <li>\\(1111 0101_2\\)</li> </ul> Correction <ul> <li>\\(0100 1010_2 = 2^1 + 2^3 + 2^6 = 2 + 8 + 64 = 74_{10}\\)</li> <li>\\(1111 0101_2 = 2^0 + 2^2 + 2^4 + 2^5 + 2^6 + 2^7 = 1 + 2 + 16 + 32 + 64 + 128 = 243_{10}\\)</li> </ul> <p>Le codage binaire d'un nombre d\u00e9cimal consiste \u00e0 passer de la base 10 (base d\u00e9cimale) \u00e0 la base 2, mais il existe d'autres bases comme la base 8 (base octale), ou la base 16 (base hexad\u00e9cimale).</p> <p>Chiffres autoris\u00e9s selon la base X de repr\u00e9sentation</p> <p>Base 2 : chiffre \\(0\\) et \\(1\\). Base 8 : chiffre \\(0, 1, 2, 3, 4, 5, 6, 7\\). Base 10 : chiffre \\(0, 1, 2, 3, 4, 5, 6, 7, 8, 9\\) Base 16 : chiffre \\(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F\\) avec \\(A = 10_{10}, B = 11_{10}, C = 12_{10}, D = 13_{10}, E = 14_{10}, F = 15_{10}\\).</p> Rappels - \u00c9criture en base 10 <p>Un nombre entier en base 10 est une s\u00e9quence de chiffres compris entre \\(0\\) et \\(9\\). Pour calculer la valeur d\u2019une s\u00e9quence \\(c_{k\u22121} , c_{k\u22122} , . . . , c_{1} , c_{0}\\) de \\(k\\) chiffres, on affecte \u00e0 chaque chiffre \\(c_n\\) un poids \\(10^n\\), ce poids \u00e9tant une puissance de 10 qui d\u00e9pend de sa position \\(n\\) dans la s\u00e9quence, et on calcule la somme des termes \\(c_n \u00d7 10^n\\). </p> <p>Si l'on prend l\u2019exemple de la s\u00e9quence \\(61027\\), et qu'on la repr\u00e9sente en diff\u00e9rentes colonnes, en indiquant la position de chaque chiffre, en commen\u00e7ant \u00e0 compter les indices et les poids correspondants \u00e0 partir de \\(0\\) de la droite vers la gauche, on obtient : </p> s\u00e9quence 6 1 0 2 7 position 4 3 2 1 0 poids 10\u2074 10\u00b3 10\u00b2 10\u00b9 10\u2070 <p>La valeur de la s\u00e9quence est un entier, que l'on notera \\(N\\), calcul\u00e9 de la mani\u00e8re suivante :</p> <p>\\(N = 6 \u00d7 10^4 + 1 \u00d7 10^3 + 0 \u00d7 10^2 + 2 \u00d7 10^1 + 7 \u00d7 10^0\\)</p> <p>Plus g\u00e9n\u00e9ralement, une s\u00e9quence \\(d_{k\u22121} , d_{k\u22122} , . . . , d_1 , d_0\\) de \\(k\\) chiffres d\u00e9cimaux \\(d_i\\) correspond au nombre \\(N\\) suivant :</p> <p>\\(N = d_{k\u22121} \u00d7 10^{k\u22121} + d_{k\u22122} \u00d7 10^{k\u22122} + \u00b7 \u00b7 \u00b7 + d_1 \u00d7 10^1 + d_0 \u00d7 10^0\\)</p> Rappels - \u00c9criture en base 2 <p>Tout comme l\u2019encodage en base 10, une s\u00e9quence de chiffres binaires peut s\u2019interpr\u00e9ter comme un nombre \u00e9crit en base 2. Dans cette base, chaque chiffre (0 ou 1), appel\u00e9 bit, de la s\u00e9quence est associ\u00e9e \u00e0 un poids \\(2^i\\) et \u00e0 une puissance de 2 qui d\u00e9pend de sa position \\(i\\).</p> <p>Par exemple, l\u2019octet (suite de 8 bits) \\(0100 1101\\) peut \u00eatre repr\u00e9sent\u00e9 de la mani\u00e8re suivante.</p> s\u00e9quence 0 1 0 0 1 1 0 1 position 7 6 5 4 3 2 1 0 poids 2\u2077 2\u2076 2\u2075 2\u2074 2\u00b3 2\u00b2 2\u00b9 2\u2070 <p>La valeur de cette s\u00e9quence, que l'on notera \\(N\\), est calcul\u00e9e comme suit :</p> <p>\\(N = 0 \u00d7 2^7 + 1 \u00d7 2^6 + 0 \u00d7 2^5 + 0 \u00d7 2^4 + 1 \u00d7 2^3 + 1 \u00d7 2^2 + 0 \u00d7 2^1 + 1 \u00d7 2^0\\) \\(N = 77_{10}\\)</p> <p>Plus g\u00e9n\u00e9ralement, une s\u00e9quence \\(b_{k\u22121} , b_{k\u22122} , . . . , b_1, b_0\\) de \\(k\\) bits \\(b_i\\) correspond au nombre \\(N\\) suivant :</p> <p>\\(N = b_{k\u22121} \u00d7 2^{k\u22121} + b_{k\u22122} \u00d7 2^{k\u22122} + \u00b7 \u00b7 \u00b7 + b_1 \u00d7 2^1 + d_0 \u00d7 b^0\\)</p> <p>Cette mani\u00e8re d'encoder les entiers naturels \u00e0 l'aide de s\u00e9quences de \\(k\\) bits permet de repr\u00e9senter les entiers de \\(0\\) \u00e0 \\(2^k \u2212 1\\). Sur 1 octet (= 8 bits) par exemple, on peut donc repr\u00e9senter les entiers naturels de \\(0\\) \u00e0 \\(255\\).</p> Rappels - Base 16 (hexad\u00e9cimale) <p>Un nombre entier en base 16, aussi appel\u00e9e base hexad\u00e9cimale, est une s\u00e9quence de chiffres qui utilise 16 symboles distincts :</p> <p>\\(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F\\)</p> <ul> <li>Les symboles \\(0\\) \u00e0 \\(9\\) repr\u00e9sentent les valeurs \\(0\\) \u00e0 \\(9\\).</li> <li>Les symboles \\(A\\) \u00e0 \\(F\\) repr\u00e9sentent les valeurs d\u00e9cimales \\(10\\) \u00e0 \\(15\\).</li> </ul> <p>Chaque chiffre hexad\u00e9cimal est associ\u00e9 \u00e0 un poids \\(16^i\\), correspondant \u00e0 une puissance de \\(16\\) qui d\u00e9pend de sa position \\(i\\) dans la s\u00e9quence, en partant de la droite vers la gauche. Une s\u00e9quence hexad\u00e9cimale \\(h_{k\u22121}, h_{k\u22122}, \\ldots, h_1, h_0\\) de \\(k\\) chiffres hexad\u00e9cimaux correspond au nombre entier \\(N\\) suivant :</p> <p>\\(N = h_{k\u22121} \\times 16^{k\u22121} + h_{k\u22122} \\times 16^{k\u22122} + \\cdots + h_1 \\times 16^1 + h_0 \\times 16^0\\)</p> <p>Exemple : La s\u00e9quence hexad\u00e9cimale \\(2F3\\) :</p> S\u00e9quence 2 F 3 Position 2 1 0 Poids \\(16^2\\) \\(16^1\\) \\(16^0\\) <ul> <li>\\(2 \\times 16^2 = 2 \\times 256 = 512\\)</li> <li>\\(F \\times 16^1 = 15 \\times 16 = 240\\)</li> <li>\\(3 \\times 16^0 = 3 \\times 1 = 3\\)</li> </ul> <p>La valeur totale est donc :</p> <p>\\(N = 512 + 240 + 3 = 755_{10}\\)</p>"},{"location":"premiere/representation_donnees/cours/#methode-des-divisions-euclidiennes-successives","title":"M\u00e9thode des divisions euclidiennes successives","text":"<p>Si l'on souhaite par exemple repr\u00e9senter \\(235_{10}\\) en base 2 :</p> <p> </p> M\u00e9thode des divisions successives <p>L'\u00e9criture binaire de \\(235_{10}\\) sur 8 bits est donc \\(1110 1011_2\\).</p> <p>Si l'on souhaite convertir un nombre vers la base 16 (en hexad\u00e9cimal), le principe est le m\u00eame, mais on divisera par 16 au lieu de diviser par 2. On rappelle qu'en hexad\u00e9cimal, les valeurs vont de \\(0\\) \u00e0 \\(F\\) : \\(1, 2, ..., 8, 9, A, B, ... E, F\\), les restes sup\u00e9rieurs \u00e0 \\(9\\) devront donc \u00eatre remplac\u00e9s par une lettre.</p>"},{"location":"premiere/representation_donnees/cours/#methode-des-soustractions","title":"M\u00e9thode des soustractions","text":"<p>Pour convertir un entier not\u00e9 \\(N\\) en base \\(X\\), on proc\u00e8de comme suit :</p> <p>La plus grande puissance de \\(X\\) qui est inf\u00e9rieure ou \u00e9gale \u00e0 \\(N\\) est soustraite \u00e0 \\(N\\). Ce processus de soustraction est r\u00e9p\u00e9t\u00e9 sur le reste de la diff\u00e9rence, jusqu\u2019\u00e0 obtenir un r\u00e9sultat \u00e9gal \u00e0 0. Le nombre \\(N\\) exprim\u00e9 en base \\(X\\) est alors obtenu en notant le nombre de fois o\u00f9 une m\u00eame puissance de \\(X\\) a \u00e9t\u00e9 retir\u00e9e, et cela pour chaque puissance depuis la plus grande apparaissant, dans l\u2019ordre d\u00e9croissant des puissances.</p> <p>Dans le cas d'une conversion vers la base 2, chaque puissance de \\(X\\) ne peut \u00eatre retir\u00e9e qu'une seule fois (car les seules valeurs possibles en binaire sont 0 et 1.)</p> <p>Exemples :</p> <p>Si l'on souhaite convertir \\(125_{10}\\) en base 2 : On sait que \\(2\u2070 = 1; 2\u00b9 = 2; 2\u00b2 = 4; 2\u00b3 = 8; 2\u2074 = 16; 2\u2075 = 32; 2\u2076 = 64; 2\u2077 = 128\\). \\(125 - \\textbf{64} = 61; 61 - \\textbf{32} = 29; 29 - \\textbf{16} = 13; 13 - \\textbf{8} = 5; 5 - \\textbf{4} = 1; 1 - \\textbf{1} = 0;\\)</p> <p>Donc \\(125_{10} = 0111~1101\\).</p> <p>Si l'on souhaite convertir \\(235_{10}\\) en base 8 : On sait que \\(8^0 = 1; 8\u00b9 = 1; 8^2 = 64; 8^3 = 512\\).   \\(235 \u2013 64 = 171; 171 \u2013 64 = 107; 107 \u2013 64 = 43; 43 \u2013 8 = 35; 35 \u2013 8 = 27; 27 \u2013 8 = 19;\\) \\(19 \u2013 8 = 11; 11 \u2013 8 = 3; 3 \u2013 1 = 2; 2 \u2013 1 = 1; 1 \u2013 1 = 0\\)</p> <p>Donc \\(235_{10} = 3 \u00d7 64 + 5 \u00d7 8 + 3 \u00d7 1 = 353_8\\).</p>"},{"location":"premiere/representation_donnees/cours/#convertir-un-nombre-de-la-base-2-vers-la-base-16","title":"Convertir un nombre de la base 2 vers la base 16","text":"<p>Pour convertir un nombre de la base 2 vers la base 16, c'est simple : il suffit de faire des paquets de 4 bits, et de coder chaque paquet avec une valeur hexad\u00e9cimale. Par exemple, si l'on reprend l'\u00e9criture binaire pr\u00e9c\u00e9dente : \\(1110~1011_2\\), le premier groupe \\(1110\\) se code par \\(14\\) en d\u00e9cimal, et donc par \\(E\\) en hexad\u00e9cimal. Le deuxi\u00e8me groupe \\(1011\\) se code par \\(11\\) en d\u00e9cimal, et donc par \\(B\\) en hexad\u00e9cimal. Ainsi, \\(235_{10} = 1110~1011_2 = EB_{16}\\).</p> <p>\u00c0 l'inverse, convertir un nombre exprim\u00e9 en base 16 vers la base 2 s\u2019effectue en rempla\u00e7ant simplement chacun des chiffres du nombre en base 16 par leur \u00e9quivalent binaire sur 4 bits.</p> <p>Par exemple : \\(45 A_{16} = 0100~0101~1010_2\\) et \\(1100~1111_2 = CF_{16}\\)</p>"},{"location":"premiere/representation_donnees/cours/#quelques-exercices","title":"Quelques exercices","text":"<p>Exercice 1</p> <p>En utilisant la m\u00e9thode des divisions euclidiennes successives, donner l'\u00e9criture binaire du nombre 147 sur 8 bits. \u00c0 partir de l'\u00e9criture binaire obtenue, donner son \u00e9criture hexad\u00e9cimale.</p> <p>Exercice 2</p> <p>En utilisant la m\u00e9thode des soustractions successives, donner l'\u00e9criture binaire du nombre 169 sur 8 bits. \u00c0 partir de l'\u00e9criture binaire obtenue, donner son \u00e9criture hexad\u00e9cimale.</p> <p>Exercice 3</p> <p>Donner la repr\u00e9sentation en base 2 et sur 8 bits des entiers 14, 218, 42 et 57.</p> <p>Vous pourrez v\u00e9rifier vos r\u00e9ponses avec la fonction <code>bin</code> de Python. La fonction <code>bin</code> prend un nombre entier en entr\u00e9e, et renvoie la repr\u00e9sentation binaire de ce nombre.</p> <p>Par exemple :</p> <pre><code>&gt;&gt;&gt; bin(42)\n'0b101010'\n</code></pre> <p>Ici, on voit que l'\u00e9criture binaire de 42 est \\(101010\\). Le <code>0b</code> indique la base (<code>b</code> pour binaire, <code>o</code> pour octal, <code>x</code> pour hexad\u00e9cimal).</p> <p>Exercice 4</p> <p>Donner la repr\u00e9sentation en base 16 des entiers binaires suivants.</p> <ul> <li>1001010</li> <li>100010001</li> <li>1010010011110010</li> </ul> <p>Vous pourrez v\u00e9rifier vos r\u00e9ponses avec la fonction <code>hex</code> de Python. La fonction <code>hex</code> prend un nombre entier en entr\u00e9e, et renvoie la repr\u00e9sentation hexad\u00e9cimale de ce nombre.</p> <p>Par exemple :</p> <pre><code>&gt;&gt;&gt; hex(42)\n'0x2A'\n</code></pre> <p>Ici, on voit que l'\u00e9criture hexad\u00e9cimale de 42 est \\(2A\\). Le <code>0x</code> indique la base (<code>b</code> pour binaire, <code>o</code> pour octal, <code>x</code> pour hexad\u00e9cimal).</p> <p>Exercice 5</p> <p>Quelle est la valeur en base 10 de l\u2019entier qui s\u2019\u00e9crit \\(BEEF\\) en base 16 ? </p>"},{"location":"premiere/representation_donnees/cours/#representation-des-entiers-relatifs","title":"Repr\u00e9sentation des entiers relatifs","text":"<p>La repr\u00e9sentation d\u2019un nombre sign\u00e9 s\u2019effectue selon une s\u00e9quence binaire d\u2019une longueur fix\u00e9e \u00e0 \\(n\\) bits. Cette longueur peut \u00eatre de 8 bits, de 16 bits ou de 32 bits.</p> <p>Plusieurs conventions de repr\u00e9sentation existent. Le choix de la convention est effectu\u00e9 par le constructeur de la machine, et \u00e9ventuellement par le programmeur en fonction du type affect\u00e9 aux variables d\u00e9clar\u00e9es. Dans le langage C par exemple, d\u00e9clarer une variable avec un type <code>int</code>, d\u00e9termine une repr\u00e9sentation sur 2 octets selon la convention du compl\u00e9ment \u00e0 2. Par ailleurs, une d\u00e9claration avec un type <code>unsigned short</code> d\u00e9termine une repr\u00e9sentation d\u2019un nombre sur 8 bits, non sign\u00e9.</p>"},{"location":"premiere/representation_donnees/cours/#convention-de-la-valeur-signee","title":"Convention de la valeur sign\u00e9e","text":"<p>Dans cette convention, le bit de poids fort (c'est-\u00e0-dire celui qui est tout \u00e0 gauche de l'\u00e9criture) correspond au signe (\\(0\\) pour un entier positif, \\(1\\) pour un entier n\u00e9gatif). Tous les autres bits codent la valeur absolue du nombre.</p> <p>Exemple :</p> <ul> <li>Repr\u00e9sentation de \\(+ 77_{10}\\) sur 8 bits : \\(01001101_2\\).</li> <li>Repr\u00e9sentation de \\(\u2013 77_{10}\\) sur 8 bits : \\(11001101_2\\).</li> </ul> <p>On peut faire les remarques suivantes sur cette repr\u00e9sentation :</p> <ul> <li>deux repr\u00e9sentations de la valeur \\(0\\) sont possibles, l'une correspondant \u00e0 un z\u00e9ro positif (\\(00000000_2\\) = \\((+ 0)_{10}\\) sur 8 bits), l'autre \u00e0 un z\u00e9ro n\u00e9gatif (\\(10000000_2\\) = \\((\u2013 0)_{10}\\) sur \\(8\\) bits);</li> <li>l\u2019intervalle des nombres sign\u00e9s repr\u00e9sentables est born\u00e9 en fonction de la longueur de la cha\u00eene binaire utilis\u00e9e pour la repr\u00e9sentation. Sur \\(8\\) bits par exemple, l\u2019intervalle des nombres repr\u00e9sentables est \\([11111111_2, 01111111_2]\\), soit l\u2019intervalle \\([-127_{10}, + 127_{10}]\\). L\u2019arithm\u00e9tique des machines est donc diff\u00e9rente de celle de l\u2019\u00eatre humain puisque l\u2019intervalle des nombres n\u2019est pas infini, mais d\u00e9pend de la longueur des cha\u00eenes de bits manipul\u00e9es par la machine;</li> <li>pour effectuer une soustraction, il est n\u00e9cessaire d'utiliser un circuit particulier diff\u00e9rent de celui permettant d'effectuer des additions.</li> </ul> <p>Voici les valeurs repr\u00e9sentables avec cette convention selon la longueur de la chaine de bits fix\u00e9e :</p> Longueur de la chaine de bits Intervalle de base 10 \\(8\\) bits \\([- 127, + 127]\\) \\(16\\) bits \\([- 32 767, + 32 767]\\) \\(32\\) bits \\([\u2013 2 147 483 647, + 2 147 483 647]\\) \\(p\\) bits \\([\u2013 2^{p \u2013 1} \u2013 1, + 2^{p \u2013 1} \u2013 1]\\)"},{"location":"premiere/representation_donnees/cours/#convention-du-complement-a-2","title":"Convention du compl\u00e9ment \u00e0 2","text":"<p>Le compl\u00e9ment \u00e0 2 ou compl\u00e9ment vrai d\u2019un nombre binaire \\(N = b_{n\u20131} ... b_0\\) s\u2019obtient en ajoutant la valeur \\(1\\) au compl\u00e9ment restreint ou compl\u00e9ment \u00e0 1 de ce nombre.</p> <p>Le compl\u00e9ment \u00e0 1 ou compl\u00e9ment restreint d\u2019un nombre binaire \\(N = b_{n-1} ... b_0\\) s\u2019obtient en inversant la valeur de chacun des bits de ce nombre.</p> <p>Exemple :</p> \\(10001001_2\\) compl\u00e9ment \u00e0 1 \\(01110110_2\\) + \\(1_2\\) compl\u00e9ment \u00e0 2 \\(01110111_2\\) <p>Dans la convention du compl\u00e9ment \u00e0 2, un nombre n\u00e9gatif \\(\u2013 N\\) exprim\u00e9 sur \\(n\\) bits est repr\u00e9sent\u00e9 en prenant le compl\u00e9ment \u00e0 2 de son \u00e9quivalent positif \\(+ N\\). Un nombre positif \\(+ N\\) est quant \u00e0 lui repr\u00e9sent\u00e9 par sa valeur binaire sur \\(n\\) bits.</p> <p>Exemple :</p> Repr\u00e9sentation de \\(+ 77_{10}\\) sur 8 bits : \\(01001101_2\\) Repr\u00e9sentation de \\(\u2013 77_{10}\\) sur 8 bits : \\(+ 77_{10}\\) \\(01001101_2\\) compl\u00e9ment restreint : \\(10110010_2\\) \\(+\\) \\(1_2\\) compl\u00e9ment vrai : \\(10110011_2\\) <p>On peut faire les remarques suivantes sur cette repr\u00e9sentation :</p> <ul> <li>une seule repr\u00e9sentation du z\u00e9ro est admise : \\(00000000_2\\) = \\((+ 0)_{10}\\) sur \\(8\\) bits.</li> <li>l\u2019intervalle des nombres sign\u00e9s repr\u00e9sentables est born\u00e9 en fonction de la longueur de la cha\u00eene binaire utilis\u00e9e pour la repr\u00e9sentation. Sur \\(8\\) bits par exemple, l\u2019intervalle des nombres repr\u00e9sentables est \\([10000000_2, 01111111_2]\\), soit l\u2019intervalle \\([\u2013 128_{10}, + 127_{10}]\\). La cha\u00eene \\(10000000_2\\) apr\u00e8s le compl\u00e9ment \u00e0 2 donne de nouveau la cha\u00eene \\(10000000_2\\). Par convention, elle repr\u00e9sente la valeur \\(- 128_{10}\\) ;</li> <li>pour effectuer une soustraction, il n'est pas n\u00e9cessaire d'utiliser un circuit particulier, puisque soustraire un nombre A \u00e0 un autre nombre B \u00e9quivaut \u00e0 additionner au nombre B le compl\u00e9ment \u00e0 2 du nombre A.</li> </ul> <p>Voici les valeurs repr\u00e9sentables avec cette convention selon la longueur de la chaine de bits fix\u00e9e :</p> Longueur de la chaine de bits Intervalle de base 10 \\(8\\) bits \\([- 128, + 127]\\) \\(16\\) bits \\([- 32 768, + 32 767]\\) \\(32\\) bits \\([\u2013 2 147 483 648, + 2 147 483 647]\\) \\(p\\) bits \\([\u2013 2^{p \u2013 1}, + 2^{p \u2013 1} \u2013 1]\\)"},{"location":"premiere/representation_donnees/cours/#binaire-vers-decimal","title":"Binaire vers d\u00e9cimal","text":"<p>L'op\u00e9ration inverse, permettant de retrouver un entier cod\u00e9 avec la convention du compl\u00e9ment \u00e0 2, est assez simple \u00e0 effectuer.</p> <p>Le bit de poids fort (celui qui est tout \u00e0 gauche) de la cha\u00eene binaire peut \u00eatre \u00e9galement inter-pr\u00e9t\u00e9 comme bit de signe. Ainsi :</p> <ul> <li>s'il vaut \\(\\textbf{0}\\), alors la cha\u00eene binaire repr\u00e9sente un nombre positif \\(+ N\\) dont la valeur d\u00e9cimale est donn\u00e9e directement par la conversion de la cha\u00eene depuis la base 2 vers la base 10;</li> <li>s'il vaut \\(\\textbf{1}\\), alors la cha\u00eene binaire repr\u00e9sente un nombre n\u00e9gatif \\(\u2013 N\\) dont la valeur d\u00e9cimale est celle du nombre positif associ\u00e9 \\(+ N\\) obtenu en compl\u00e9mentant de nouveau \u00e0 2 la cha\u00eene, ou plus simplement en inversant tous les bits situ\u00e9s \u00e0 gauche de premier bit \u00e0 1 (en partant de la droite).</li> </ul> <p>Conversion binaire (compl\u00e9ment \u00e0 2) vers d\u00e9cimal</p> <p>\\(0011~0011_2\\) : Le bit de poids fort est \u00e0 0 (nombre positif), donc on convertit simplement vers la base 10 :</p> <p></p> \\(0011~0011_2 = 2^0 + 2^1 + 2^4 + 2^5 = 1 + 2 + 16 + 32 = + 51_{10}\\) <p>\\(1011~1100_2\\) : Le bit de poids fort est \u00e0 1 (nombre n\u00e9gatif), donc :</p> <ul> <li>soit on refait le compl\u00e9ment \u00e0 2,</li> <li>soit on inverse tous les bits situ\u00e9s \u00e0 gauche du premier bit \u00e0 1 en partant de la droite, ce qui donne ici : \\(\\textbf{1011 1}100_2 \u2192 \\textbf{0100 0}100_2\\). \\(0100~0100_2 = 68_{10}\\), donc il ne reste qu'\u00e0 ajouter le signe \\(-\\) </li> </ul> <p></p> \\(1011~1100_2 = - 68_{10}\\)"},{"location":"premiere/representation_donnees/cours/#bit-de-carry","title":"Bit de carry","text":"<p>Lors d\u2019une op\u00e9ration arithm\u00e9tique effectu\u00e9e sur des nombres de \\(p\\) bits, un \\(p + 1er\\) bit peut \u00eatre g\u00e9n\u00e9r\u00e9. Ce bit suppl\u00e9mentaire de poids fort est m\u00e9moris\u00e9 comme \u00e9tant le bit de carry par un indicateur de 1 bit not\u00e9 \\(C\\) dans un registre du processeur appel\u00e9 registre d'\u00e9tat (PSW).</p> <p>Par exemple, l'addition de \\(0111~1111_2\\) (\\(+ 127\\)) et \\(1111~1110\\) (\\(- 2\\)) :</p> \\(0111\\) \\(1111_2\\) + \\(1111\\) \\(1110_2\\) 1 \\(0111\\) \\(1101_2\\) <p>Ici, le 9\u00e8me bit est le bit de carry.</p>"},{"location":"premiere/representation_donnees/cours/#overflow","title":"Overflow","text":"<p>Lorsque l'on effectue une op\u00e9ration math\u00e9matique impliquant des nombres de m\u00eame signe et ayant chacun \\(p\\) bits, il est possible que le r\u00e9sultat d\u00e9passe la capacit\u00e9 de repr\u00e9sentation de la machine. En d'autres termes, ce r\u00e9sultat peut \u00eatre en dehors de la plage des nombres que la machine peut repr\u00e9senter en utilisant la convention choisie pour ces nombres sign\u00e9s.</p> <p>Dans de tels cas, le r\u00e9sultat obtenu est incorrect par rapport \u00e0 son interpr\u00e9tation pr\u00e9vue : on appelle cela un overflow ou un d\u00e9passement de capacit\u00e9. Tout comme le carry, la survenue d'un overflow est enregistr\u00e9e dans le registre d'\u00e9tat (PSW) du processeur \u00e0 l'aide d'un indicateur d'un bit, g\u00e9n\u00e9ralement not\u00e9 \\(O\\).</p> <p>Par exemple, si l'on effectue l'addition des nombres \\(+ 127_{10}\\) et \\(+ 2_{10}\\) repr\u00e9sent\u00e9s selon la convention du compl\u00e9ment \u00e0 2 :</p> \\(0111\\) \\(1111_2\\) + \\(0000\\) \\(0010_2\\) \\(1000\\) \\(0001_2\\) <p>Le r\u00e9sultat obtenu est le nombre \\(\u2013 127_{10}\\) et non pas la valeur attendue \\(+ 129_{10}\\). Il y a ici un d\u00e9passement de capacit\u00e9. En effet, l\u2019intervalle des nombres repr\u00e9sentables sur \\(8\\) bits selon la convention du compl\u00e9ment \u00e0 2 est \\([\u2013 127_{10}, + 127_{10}]\\).</p> <p>Pourquoi pr\u00e9f\u00e8re t-on cette convention ?</p> <p>La convention du compl\u00e9ment \u00e0 2 est g\u00e9n\u00e9ralement pr\u00e9f\u00e9r\u00e9e \u00e0 celle de la valeur sign\u00e9e pour les raisons suivantes :</p> <ol> <li> <p>Simplicit\u00e9 des op\u00e9rations arithm\u00e9tiques : Avec le compl\u00e9ment \u00e0 2, les op\u00e9rations arithm\u00e9tiques telles que l'addition et la soustraction fonctionnent de la m\u00eame mani\u00e8re que pour les nombres non sign\u00e9s, en utilisant le m\u00eame mat\u00e9riel de calcul. Cela simplifie consid\u00e9rablement la conception des circuits \u00e9lectroniques et les op\u00e9rations de base, car il n'est pas n\u00e9cessaire de traiter les cas sp\u00e9ciaux pour les nombres sign\u00e9s.</p> </li> <li> <p>Unicit\u00e9 de la repr\u00e9sentation : En utilisant le compl\u00e9ment \u00e0 2, chaque nombre a une repr\u00e9sentation unique. Cela signifie qu'il n'y a pas de valeur positive et n\u00e9gative qui se chevauchent, ce qui \u00e9vite les ambigu\u00eft\u00e9s.</p> </li> <li> <p>Facilit\u00e9 de conversion : La conversion entre nombres sign\u00e9s et non sign\u00e9s (et vice versa) est plus simple avec le compl\u00e9ment \u00e0 2 que avec d'autres m\u00e9thodes de repr\u00e9sentation sign\u00e9e. Il suffit d'appliquer le compl\u00e9ment \u00e0 2 sur un nombre n\u00e9gatif pour obtenir sa repr\u00e9sentation positive, et vice versa.</p> </li> <li> <p>Prise en charge native des op\u00e9rations binaires : Le compl\u00e9ment \u00e0 2 est id\u00e9al pour les ordinateurs, qui traitent naturellement les op\u00e9rations binaires. La repr\u00e9sentation en compl\u00e9ment \u00e0 2 facilite les op\u00e9rations bit \u00e0 bit, ce qui est essentiel pour la conception des processeurs.</p> </li> <li> <p>Gestion de l'overflow : Lorsque des op\u00e9rations arithm\u00e9tiques d\u00e9passent la capacit\u00e9 de stockage d'un registre, le compl\u00e9ment \u00e0 2 permet de g\u00e9rer naturellement les d\u00e9passements (overflow) sans n\u00e9cessiter de mat\u00e9riel ou de logiciel suppl\u00e9mentaire compliqu\u00e9.</p> </li> </ol> <p>Exercice 6</p> <p>Donner la repr\u00e9sentation en compl\u00e9ment \u00e0 2 et sur 8 bits des entiers -10, -128, -42 et 97.</p> <p>Exercice 7</p> <p>Donner en base 10 la valeur des octets sign\u00e9s \\(11100111\\) et \\(11000001\\).</p> <p>Plus d'exercices</p> <p>Vous pouvez \u00e9galement vous entra\u00eener sur les exercices propos\u00e9s \u00e0 la fin de cette page (IUT de Reims).</p>"},{"location":"premiere/representation_donnees/cours/#addition-et-soustraction-de-nombres-entiers","title":"Addition et soustraction de nombres entiers","text":"<p>Pour additionner deux nombres entiers en \u00e9criture binaire, on utilise le m\u00eame principe que dans le syst\u00e8me d\u00e9cimal, en additionnant les chiffres un \u00e0 un, de droite \u00e0 gauche. La table d\u2019addition des nombres binaires est la suivante :</p> <ul> <li>0 + 0 = 0</li> <li>0 + 1 = 1</li> <li>1 + 0 = 1</li> <li>1 + 1 = 10, c\u2019est-\u00e0-dire 0 avec une retenue de 1</li> <li>1 + 1 + 1 = 11, c\u2019est-\u00e0-dire 1 avec une retenue de 1</li> </ul> <p>On souhaite par exemple additionner les entiers \\(42_{10} = 00101010_2\\) et \\(14_{10} = 00001110_2\\) :</p> (1) (1) (1) 0 0 1 0 1 0 1 0 (42) + 0 0 0 0 1 1 1 0 (14) = 0 0 1 1 1 0 0 0 (56) <p>Si l'on souhaite faire une soustraction, par exemple si l'on souhaite soustraire \\(14\\) \u00e0 \\(42\\), le plus simple est de faire une addition entre \\(42\\) et le compl\u00e9ment \u00e0 2 de \\(14\\). Le compl\u00e9ment \u00e0 2 de \\(14_{10} = 00001110_2\\) est \\(11110010_2\\), donc :</p> (1) (1) (1) (1) 0 0 1 0 1 0 1 0 (42) + 1 1 1 1 0 0 1 0 (-14) = 0 0 0 1 1 1 0 0 (28) <p>D\u00e9passement de capacit\u00e9 :</p> <p>L\u2019addition de deux nombres entiers peut d\u00e9passer la capacit\u00e9 de repr\u00e9sentation des mots binaires: en effet, pour repr\u00e9senter un nombre \\(n\\) en binaire, il faut \\(\\lceil log_2(n) \\rceil\\) bits. La somme de deux nombres \\(n\\) et \\(m\\) est inf\u00e9rieure ou \u00e9gale \u00e0 \\(2 \u00d7 max(n, m)\\), donc le nombre de bits n\u00e9cessaires pour repr\u00e9senter cette somme est, au plus : \\(\\lceil log_2(2 \u00d7 max (n,m)) \\rceil = \\lceil log_2(max(n,m) + 1) \\rceil\\), soit 1 bit de plus que le nombre de bits significatifs du plus grand des deux nombres.</p> <p>Il existe des solutions pour tester l'existence d'un d\u00e9passement, par exemple en utilisant un OU EXCLUSIF (xor) pour comparer la retenue entrante et la retenue sortante de l'addition des deux bits de poids fort. Il y a d\u00e9passement si ces deux bits sont oppos\u00e9s.</p>"},{"location":"premiere/representation_donnees/cours/#representation-des-nombres-reels","title":"Repr\u00e9sentation des nombres r\u00e9els","text":"<p>Nous avons vu que le langage Python \u00e9tait capable de calculer des nombres d\u00e9cimaux particuliers appel\u00e9s nombres flottants (type <code>float</code>). Nous allons voir que ces nombres ont un encodage tr\u00e8s compact, ce codage pouvant \u00eatre sur 32 ou sur 64 bits, ce qui permet de repr\u00e9senter des nombres tr\u00e8s grands ou de tr\u00e8s petits nombres, bien au-del\u00e0 de ce qu\u2019il est possible de repr\u00e9senter avec un codage des entiers sur le m\u00eame nombre de bits.</p> <p>Pour repr\u00e9senter en binaire des nombres r\u00e9els (nombres avec une partie fractionnaire), il faut d\u00e9composer celle-ci en une somme de puissances inverses de 2 : \\(b_1 ... b_k\\) est la repr\u00e9sentation binaire de \\(d(0 \\lt d \\lt 1)\\) si : \\(d = b_1 \u00d7 2^{-1} + b_2 \u00d7 2^{-2} + b_3 \u00d7 2^{-3} + ... + b_k \u00d7 2^{-k}\\) \\(d = b_1 \u00d7 \\frac{1}{2} + b_2 \u00d7 \\frac{1}{2^2} + b_3 \u00d7 \\frac{1}{2\u00b3} + ... + b_k \u00d7 \\frac{1}{2^k}\\).</p> <p>Codage inexact</p> <p>Contrairement au codage de la partie enti\u00e8re, le codage de la partie d\u00e9cimale peut \u00eatre infini, de la m\u00eame fa\u00e7on que des nombres fractionnaires peuvent avoir une partie d\u00e9cimales infinie, comme par exemple \\(\\frac{1}{3} = 0,3333...\\).</p> <p>Il y a donc des nombres d\u00e9cimaux que l'on ne peut pas repr\u00e9senter de mani\u00e8re exacte en machine. Si l'on prend le nombre <code>0.3</code> par exemple, le nombre de bits n\u00e9cessaire pour le repr\u00e9senter est infini. Si on le repr\u00e9sente sur un octet par exemple, son \u00e9criture binaire serait <code>01001100</code>, soit : \\(0 \u00d7 \\frac{1}{2} + 1 \u00d7 \\frac{1}{4} + 0 \u00d7 \\frac{1}{8}+ 0 \u00d7 \\frac{1}{16} + 1 \u00d7 \\frac{1}{32} + 1 \u00d7 \\frac{1}{64} + 0 \u00d7 \\frac{1}{2} + 0 \u00d7 \\frac{1}{256}\\), ce qui vaut \\(0,296875\\).</p> <p>Les nombres r\u00e9els repr\u00e9sentables avec une partie d\u00e9cimale finie en binaire sont ceux dont le d\u00e9nominateur est une puissance de 2, comme \\(\\frac{1}{2}\\), \\(\\frac{1}{4}\\), \\(\\frac{1}{8}\\)...</p> <p>\u00c0 vous de jouer 1</p> <p>Essayez de saisir dans l'interpr\u00e9teur Python l'expression <code>0.1 + 0.2</code>. Que devriez-vous obtenir ? Qu'obtenez-vous, et pourquoi ?</p> <p>\u00c0 vous de jouer 2</p> <p>Quelle est la repr\u00e9sentation binaire du nombre r\u00e9el dont l'\u00e9criture d\u00e9cimale est \\(1.25\\) ? \\(12.125\\) ? \\(0.3\\) (sur 8 bits) ?</p> <p>\u00c0 vous de jouer 3</p> <p>Quelle est la repr\u00e9sentation d\u00e9cimale du nombre r\u00e9el dont l'\u00e9criture binaire est : \\(0.0101\\) ? \\(1011.00001\\) ?</p>"},{"location":"premiere/representation_donnees/cours/#codage-en-virgule-fixe","title":"Codage en virgule fixe","text":"<p>Une approche initiale pour la repr\u00e9sentation des nombres r\u00e9els avec une partie fractionnaire est le codage en virgule fixe, o\u00f9 la partie enti\u00e8re et la partie d\u00e9cimale sont toutes deux repr\u00e9sent\u00e9es sur un nombre pr\u00e9alablement d\u00e9fini de bits, par exemple 8 bits chacune.</p> <p>Avec cette approche, pour encoder les nombres r\u00e9els n\u00e9gatifs, on utilise simplement le compl\u00e9ment \u00e0 2 apr\u00e8s avoir effectu\u00e9 le codage en virgule fixe du nombre positif \u00e9quivalent.</p> <p>Cependant, cette m\u00e9thode pr\u00e9sente des limitations importantes. Tout d'abord, l'intervalle de nombres que l'on peut repr\u00e9senter reste restreint, correspondant \u00e0 la plage d'entiers sur 8 bits, c'est-\u00e0-dire \\([-128, +127]\\). De plus, la repr\u00e9sentation de la partie d\u00e9cimale est \u00e9galement limit\u00e9e, avec la possibilit\u00e9 de repr\u00e9senter seulement \\(256\\) valeurs distinctes. En cons\u00e9quence il devient impossible de repr\u00e9senter tous les nombres r\u00e9els, tous les nombres d\u00e9cimaux, et m\u00eame des nombres \"simples\" tels que \\(0,1\\) de mani\u00e8re exacte. Seules quelques valeurs d\u00e9cimales sp\u00e9cifiques peuvent \u00eatre repr\u00e9sent\u00e9es pr\u00e9cis\u00e9ment, tandis que d'autres doivent \u00eatre approxim\u00e9es. Ces approximations sont la principale source d'erreurs de calcul.</p> <p></p> Voir des exemples d'encodage en virgule fixe"},{"location":"premiere/representation_donnees/cours/#codage-en-virgule-flottante-norme-ieee-754","title":"Codage en virgule flottante - Norme IEEE 754","text":"<p>La norme IEEE 754 d\u00e9finit un format standardis\u00e9 qui vise \u00e0 unifier la repr\u00e9sentation des nombres flottants, qui est tr\u00e8s diverse selon les constructeurs.</p> <p>Formats de repr\u00e9sentation</p> <p>Cette norme propose deux formats de repr\u00e9sentation : un format simple pr\u00e9cision sur 32 bits et un format double pr\u00e9cision sur 64 bits.</p> <p></p> <p>En simple pr\u00e9cision, la cha\u00eene de 32 bits repr\u00e9sentant le nombre est d\u00e9compos\u00e9e en :</p> <ul> <li>1 bit de signe (not\u00e9 \\(s\\)) indiquant le signe de la mantisse, </li> <li>8 bits pour l\u2019exposant (not\u00e9 \\(e\\)),</li> <li>23 bits pour le codage de la fraction de la mantisse (not\u00e9e \\(f\\)).</li> </ul> <p>En double pr\u00e9cision, la cha\u00eene de 64 bits repr\u00e9sentant le nombre est d\u00e9compos\u00e9e en :</p> <ul> <li>1 bit de signe indiquant le signe de la mantisse, </li> <li>11 bits pour l\u2019exposant,</li> <li>52 bits pour le codage de la fraction de la mantisse.</li> </ul>"},{"location":"premiere/representation_donnees/cours/#bit-de-signe","title":"Bit de signe","text":"<p>Le signe \\(s\\) est cod\u00e9 sur un bit (le bit de poids fort de l\u2019entier de 32 bits ou de 64 bits) : ce bit vaut \\(0\\) si le nombre repr\u00e9sent\u00e9 est positif, et \\(1\\) s'il est n\u00e9gatif.</p>"},{"location":"premiere/representation_donnees/cours/#exposant","title":"Exposant","text":"<p>Pour pouvoir repr\u00e9senter \u00e0 la fois des exposants positifs et n\u00e9gatifs dans la norme IEEE 754, une m\u00e9thode diff\u00e9rente du compl\u00e9ment \u00e0 2 est employ\u00e9e. Cette m\u00e9thode consiste \u00e0 stocker l'exposant sous une forme d\u00e9cal\u00e9e, en tant qu'entier non sign\u00e9. Plus pr\u00e9cis\u00e9ment, l'exposant d\u00e9cal\u00e9, not\u00e9 \\(n\\), est repr\u00e9sent\u00e9 par un entier de 8 bits pouvant prendre des valeurs entre \\(0\\) et \\(255\\) :</p> <ul> <li>dans le format 32 bits, ce d\u00e9calage est de \\(d = +127_{10}\\), ce qui permet de repr\u00e9senter des exposants sign\u00e9s dans l'intervalle \\([-127_{10}, + 128_{10}]\\). Toutefois, les valeurs \\(0_{10}\\) et \\(255_{10}\\) sont r\u00e9serv\u00e9es pour repr\u00e9senter des cas sp\u00e9ciaux, donc les exposants sign\u00e9s r\u00e9ellement utilisables se situent dans l'intervalle \\([-126_{10}, + 127_{10}]\\),</li> <li>dans le format 64 bits, ce d\u00e9calage est de \\(d = +1023_{10}\\), ce qui permet de repr\u00e9senter des exposants sign\u00e9s dans l'intervalle \\([-1023_{10}, + 1024_{10}]\\). Toutefois, les valeurs \\(0_{10}\\) et \\(2047_{10}\\) sont r\u00e9serv\u00e9es pour repr\u00e9senter des cas sp\u00e9ciaux, donc les exposants sign\u00e9s r\u00e9ellement utilisables se situent dans l'intervalle \\([-1022_{10}, + 1023_{10}]\\),</li> <li>de mani\u00e8re g\u00e9n\u00e9rale, pour un exposant stock\u00e9 sur un nombre \\(n\\) de bits, le d\u00e9calage sera de \\(2^{n - 1} - 1\\).</li> </ul>"},{"location":"premiere/representation_donnees/cours/#mantisse","title":"Mantisse","text":"<p>La mantisse \\(m\\) est toujours comprise dans l\u2019intervalle \\([1, 2[\\), et repr\u00e9sente un nombre de la forme \\(1, xx . . . xx\\), c\u2019est-\u00e0-dire un nombre commen\u00e7ant n\u00e9cessairement par le chiffre 1. Par cons\u00e9quent, pour gagner 1 bit de pr\u00e9cision, les 23 bits (en simple pr\u00e9cision) ou 52 bits (en double pr\u00e9cision) d\u00e9di\u00e9s \u00e0 la mantisse sont uniquement utilis\u00e9s pour repr\u00e9senter les chiffres apr\u00e8s la virgule, qu\u2019on appelle la fraction de la mantisse (qu'on notera \\(f\\)).</p> <p>Ainsi, si les 23 bits d\u00e9di\u00e9s \u00e0 la mantisse sont \\(b_1 b_2 . . . b_{23}\\) , alors la mantisse repr\u00e9sente le nombre \\(1 + b_1 \u00d7 2^{\u22121} + b_2 \u00d7 2^{\u22122} + \u00b7 \u00b7 \u00b7 + b_{23} \u00d7 2^{\u221223}\\).</p> <p>Repr\u00e9sentation normalis\u00e9e d'un nombre flottant</p> <p>Ainsi, avec la mantisse sous sa forme normalis\u00e9e, les nombres flottants seront repr\u00e9sent\u00e9s comme suit.</p> <p>Sur 32 bits :</p> <p></p> \\((\u22121)^s \\times 1, f \\times 2^{(e\u2212127)}\\) <p>Sur 64 bits :</p> <p></p> \\((\u22121)^s \\times 1, f \\times 2^{(e\u22121023)}\\) <p>o\u00f9 \\(s\\) est le bit de signe, \\(f\\) est la fraction de la mantisse et \\(e\\) est l'exposant.</p> <p>Conversion binaire (virgule flottante) \u2192 d\u00e9cimal (extrait du Balabonski Premi\u00e8re)</p> <p>Voici un mot de 32 bits et le nombre d\u00e9cimal qu'il repr\u00e9sente.</p> <p></p> <p>Pour voir des exemples suppl\u00e9mentaires : </p> IUT de Reims - Virgule flottante \u2192 d\u00e9cimal"},{"location":"premiere/representation_donnees/cours/#recapitulatif-des-encodages","title":"R\u00e9capitulatif des encodages","text":"exposant (\\(e\\)) fraction (\\(f\\)) valeur \\(32\\) bits 8 bits 23 bits \\((\u22121)^s \u00d7 1, f \u00d7 2^{(e\u2212127)}\\) \\(64\\) bits 11 bits 52 bits \\((\u22121)^s \u00d7 1, f \u00d7 2^{(e\u22121023)}\\) <p>En simple pr\u00e9cision (32 bits), les nombres flottants positifs peuvent repr\u00e9senter les nombres d\u00e9cimaux compris (approximativement) dans l\u2019intervalle \\([10^{\u221238}, 10^{38}]\\).</p> <p>En double pr\u00e9cision (64 bits), cet intervalle est (approximativement) de \\([10^{\u2212308}, 10^{308}]\\).</p> <p>Conversion d\u00e9cimal \u2192 binaire (virgule flottante)</p> <p>On cherche \u00e0 repr\u00e9senter le nombre \\(\u2013 10,125_{10}\\) selon le format IEEE 754 simple pr\u00e9cision.</p> <p>\\(10,125_{10} = 1010,001_{2} = 1,010001_{2} \u00d7 2^3\\).</p> <p>L\u2019exposant \\(e = 3\\) est translat\u00e9 de la valeur \\(+127_{10}\\). \\(e' = e + 127_{10} = 130_{10} = 10000010_2\\).</p> <p>Le signe de la mantisse est n\u00e9gatif et vaut donc 1.</p> <p>Finalement, le codage du nombre \\(- 10,125_{10}\\) donne la cha\u00eene binaire suivante : \\(1~10000010~01000100000000000000000_2 = C1220000_{16}\\)</p> <p>Pour plus de d\u00e9tails sur ce codage et des exemples suppl\u00e9mentaires : </p> IUT de Reims - Codage en virgule flottante"},{"location":"premiere/representation_donnees/cours/#valeurs-speciales","title":"Valeurs sp\u00e9ciales","text":"signe exposant fraction valeur sp\u00e9ciale 0 0 0 \\(+0\\) 1 0 0 \\(-0\\) 0 255 0 \\(+\\infty\\) 1 255 0 \\(-\\infty\\) 0 255 \\(\\ne 0\\) \\(NaN\\)"},{"location":"premiere/representation_donnees/cours/#nombres-denormalises","title":"Nombres d\u00e9normalis\u00e9s","text":"<p>Comme vu pr\u00e9c\u00e9demment, si l\u2019exposant \\(e\\) d\u2019un nombre flottant (sur 32 bits) est compris entre \\(1\\) et \\(254\\), la valeur repr\u00e9sent\u00e9e par l\u2019encodage est :</p> <p></p> \\((\u22121)^s \\times 1, f \\times 2^{(e\u2212127)}\\) <p>Les nombres repr\u00e9sent\u00e9s ainsi sont dits normalis\u00e9s. Avec cet encodage, le plus petit nombre d\u00e9cimal positif repr\u00e9sentable est donc \\(2^{\u2212126}\\) (soit \\(\u223c 10^{\u221238}\\)).</p> <p>\u00c9tant donn\u00e9 que la mantisse est implicitement de la forme \\(1, f\\) , il n\u2019y a pas de nombres repr\u00e9sentables dans l\u2019intervalle \\([0, 2^{\u2212126} [\\), l\u00e0 o\u00f9 il y en a \\(2^{23}\\) dans l\u2019intervalle \\([1 \u00d7 2^{\u2212126} , 2 \\times 2^{\u2212126}]\\) = \\([2^{\u2212126} , 2^{\u2212125}]\\).</p> <p>Afin de pouvoir repr\u00e9senter des tr\u00e8s petits nombres, la norme IEEE 754 permet d\u2019encoder des nombres de la forme suivante, avec une mantisse commen\u00e7ant implicitement par un \\(0\\) au lieu d'un \\(1\\) :</p> <p></p> \\((\u22121)^s \\times 0, f \\times 2^{\u2212126}\\) <p>On appelle ces nombres flottants des nombres d\u00e9normalis\u00e9s, dont :</p> <ul> <li>l'exposant \\(e\\) est \u00e0 \\(0\\),</li> <li>la fraction de la mantisse est diff\u00e9rente de \\(0\\). </li> </ul> <p>La plus petite valeur repr\u00e9sentable avec des nombres d\u00e9normalis\u00e9s est ainsi : \\(2^{\u221223} \u00d7 2^{\u2212126} = 2^{\u2212149}\\) repr\u00e9sent\u00e9e par la cha\u00eene binaire \\(0~00000000~00000000000000000000001_2\\).</p>"},{"location":"premiere/representation_donnees/cours/#exercices","title":"Exercices","text":"<p>Exercice 8</p> <p>Donner la repr\u00e9sentation flottante en simple pr\u00e9cision de \\(128\\) et \\(\u221232,75\\).</p> <p>Exercice 9</p> <p>Donner la valeur d\u00e9cimale des nombres flottants suivants cod\u00e9s en simple pr\u00e9cision :</p> <ul> <li>\\(1~10000011~00110101000000000000000\\)</li> <li>\\(0~10000011~11100000000000000000000\\).</li> </ul> <p>Plus d'exercices</p> <p>Vous pouvez \u00e9galement vous entra\u00eener sur les exercices propos\u00e9s par l'IUT de Reims :</p> <ul> <li>D\u00e9cimal \u2192 virgule flottante : exercices \u00e0 la fin de cette page</li> <li>Virgule flottante \u2192 d\u00e9cimal : exercices \u00e0 la fin de cette page</li> </ul>"},{"location":"premiere/representation_donnees/cours/#representation-des-textes","title":"Repr\u00e9sentation des textes","text":"<p>La repr\u00e9sentation des caract\u00e8res dans un ordinateur permet de stocker ou d'\u00e9changer des textes. </p> <p>Th\u00e9oriquement, cela consiste simplement \u00e0 associer un num\u00e9ro unique \u00e0 chaque caract\u00e8re. Toutefois, le choix de la norme d'encodage utilis\u00e9e n\u00e9cessite de respecter certaines contraintes. Tout d\u2019abord, il faut que tous les ordinateurs utilisent le m\u00eame encodage. Ensuite, on doit pouvoir repr\u00e9senter le plus de caract\u00e8res possible, des caract\u00e8res \u00e9ditables comme des lettres majuscules et minuscules, des signes de ponctuation et signes math\u00e9matiques, mais aussi des caract\u00e8res dits \u00ab non imprimables \u00bb, qui peuvent correspondre \u00e0 des actions comme celle permettant de passer \u00e0 la ligne ou d'\u00e9mettre un beep, mais aussi \u00e0 des commandes de protocoles de communication comme accuser r\u00e9ception, d\u00e9but de texte, etc. Par ailleurs, le but est \u00e9galement d'\u00eatre le plus compact possible pour \u00e9conomiser la m\u00e9moire ou le volume des \u00e9changes r\u00e9seaux.</p>"},{"location":"premiere/representation_donnees/cours/#norme-ascii","title":"Norme ASCII","text":"Table ASCII standard <p>Le codage ASCII (American Standard Code for Information Interchange) est un codage \u00e0 7 bits qui permet donc de repr\u00e9senter 128 caract\u00e8res. Chacun des codes associ\u00e9s \u00e0 un caract\u00e8re est donn\u00e9 dans une table \u00e0 deux entr\u00e9es, la premi\u00e8re entr\u00e9e codant la valeur du quartet de poids faible et la seconde entr\u00e9e codant la valeur des 3 bits de poids fort du code associ\u00e9 au caract\u00e8re.</p> <p>Le caract\u00e8re <code>A</code> est cod\u00e9 par la cha\u00eene \\(100~0001_2\\) soit le code hexad\u00e9cimal \\(41_{16}\\).</p> <p>Le code ASCII est notamment tr\u00e8s utilis\u00e9 sur les processeurs de la famille Intel.</p> <p>La table ASCII contient plusieurs cat\u00e9gories de caract\u00e8res :</p> <ul> <li>les lettres de l\u2019alphabet latin en majuscule (entre \\(41\\) et \\(5A\\)) et en minuscule (entre \\(61\\) et \\(7A\\)) ;</li> <li>les chiffres de \\(0\\) \u00e0 \\(9\\) (entre \\(30\\) et \\(39\\)) ;</li> <li>des signes de ponctuations (comme la virgule <code>,</code> qui vaut \\(2C\\)), des parenth\u00e8ses ou des crochets (comme le symbole <code>(</code> qui vaut \\(28\\) ou le crochet ouvrant <code>[</code> qui vaut \\(5B\\)) ;</li> <li>des op\u00e9rateurs arithm\u00e9tiques (comme le signe <code>+</code> qui vaut \\(2B\\)).</li> </ul> <p>La table ASCII contient \u00e9galement des caract\u00e8res sp\u00e9ciaux :</p> <p>Quelques caract\u00e8res sp\u00e9ciaux</p> caract\u00e8re num\u00e9ro signification HT 09 Tabulation horizontale LF 0A Nouvelle ligne VT 0B Tabulation verticale FF 0C Nouvelle page CR 0D Retour chariot SP 20 Espace BS 08 Suppression DEL 7F Effacement <p>Elle contient \u00e9galement des caract\u00e8res de contr\u00f4le non imprimables, par exemple :</p> <p>Quelques caract\u00e8res de contr\u00f4le</p> caract\u00e8re num\u00e9ro signification SOH 01 D\u00e9but d\u2019ent\u00eate STX 02 D\u00e9but de texte ETX 03 Fin de texte EOT 04 Fin de transmission ENQ 05 Demande ACK 06 Accus\u00e9 de r\u00e9ception DC1 11 Contr\u00f4le de p\u00e9riph\u00e9rique 1 BEL 07 Son sur le haut-parleur <p>Bit de parit\u00e9</p> <p>M\u00eame si 7 bits suffisent pour repr\u00e9senter 128 caract\u00e8res (de <code>000 0000</code> \u00e0 <code>111 1111</code>), en pratique chaque caract\u00e8re occupe 1 octet (8 bits) en m\u00e9moire. Le bit de poids fort est utilis\u00e9 pour effectuer une somme de contr\u00f4le afin de d\u00e9tecter d\u2019\u00e9ventuelles erreurs de transmission. L'id\u00e9e est de fixer la valeur de ce bit de mani\u00e8re \u00e0 ce que le nombre de bits \u00e0 <code>1</code> dans l\u2019octet soit toujours pair. C\u2019est la raison pour laquelle on appelle ce bit le bit de parit\u00e9.</p> <p>ASCII et Python</p> <p>La fonction ord de Python renvoie le code ASCII correspondant \u00e0 un caract\u00e8re. L\u2019entier renvoy\u00e9 est en base 10, mais on peut le convertir en hexad\u00e9cimal avec la fonction <code>hex</code>.</p> <pre><code>&gt;&gt;&gt; ord(\u2019A\u2019)\n65\n&gt;&gt;&gt; hex(ord(\u2019A\u2019))\n'0x41'\n</code></pre> <p>Inversement, la fonction chr renvoient le caract\u00e8re correspondant \u00e0 un entier.</p> <pre><code>&gt;&gt;&gt; chr(0x26)\n\u2019&amp;\u2019\n</code></pre> <p>Les caract\u00e8res peuvent \u00e9galement \u00eatre saisis directement par leur code ASCII en utilisant la notation \\xhh, o\u00f9 hh est le code hexad\u00e9cimal du caract\u00e8re.</p> <pre><code>&gt;&gt;&gt; print(\u2019\\x43e\\x63i es\\x74...\u2019)\nCeci est...\n</code></pre> <p>Exercice 10</p> <p>Donner le codage ASCII (en hexad\u00e9cimal et binaire) des deux cha\u00eenes de caract\u00e8res Python ci-dessous :</p> <ul> <li><code>\u2019bonjour tout le monde!\u2019</code></li> <li><code>\u2019\u2019\u2019programmer en Python\u2019\u2019\u2019</code></li> </ul> <p>Exercice 11</p> <p>\u00c9crire une fonction <code>printASCII(s)</code> qui affiche \u00e0 l\u2019\u00e9cran les codes ASCII au format hexad\u00e9cimal d\u2019une cha\u00eene de caract\u00e8res. Utiliser cette fonction pour v\u00e9rifier les r\u00e9ponses \u00e0 l\u2019exercice pr\u00e9c\u00e9dent.</p>"},{"location":"premiere/representation_donnees/cours/#normes-iso-8859","title":"Normes ISO 8859","text":"<p>Les caract\u00e8res imprimables de la table ASCII se sont r\u00e9v\u00e9l\u00e9s rapidement insuffisants pour repr\u00e9senter efficacement des textes dans des langues autres que l'anglais. Cela est particuli\u00e8rement \u00e9vident pour les langues utilisant l'alphabet latin, car la table ASCII ne prend pas en compte de nombreux \u00e9l\u00e9ments tels que les lettres accentu\u00e9es et les symboles de monnaie. Pour r\u00e9soudre cette limitation, l'ISO (Organisation Internationale de Normalisation) a introduit la norme ISO 8859, une extension de l'ASCII qui utilise huit bits par octet pour repr\u00e9senter les caract\u00e8res, permettant ainsi un total de 256 caract\u00e8res encod\u00e9s. Malgr\u00e9 cette expansion, cela reste encore insuffisant pour englober tous les caract\u00e8res utilis\u00e9s dans les langues latines.</p> <p>Afin de maximiser la repr\u00e9sentation des caract\u00e8res, la norme ISO 8859 propose plusieurs tables de correspondance, \u00e9galement appel\u00e9es pages et not\u00e9es ISO-8859-n, o\u00f9 n repr\u00e9sente le num\u00e9ro de la table. Bien que ces tables soient ind\u00e9pendantes les unes des autres, elles ont \u00e9t\u00e9 con\u00e7ues pour \u00eatre compatibles entre elles. Les premiers 128 caract\u00e8res correspondent \u00e0 la norme ASCII, tandis que les 128 suivants sont sp\u00e9cifiques \u00e0 la table n. De plus, les caract\u00e8res identiques ont le m\u00eame code.</p> <p>La norme 8859 inclut un total de seize tables, dont dix sont d\u00e9di\u00e9es aux langues latines. Plut\u00f4t que de les r\u00e9f\u00e9rencer par leur nomenclature ISO, elles sont parfois appel\u00e9es latin-1, latin-2, etc.</p> <p> </p> Tables de la norme 8859"},{"location":"premiere/representation_donnees/cours/#norme-unicode","title":"Norme Unicode","text":"<p>Les pages ISO-8859-n, bien qu'elles permettent un encodage \u00e9tendu, ne conviennent pas pour les textes avec un m\u00e9lange de caract\u00e8res provenant de diff\u00e9rentes pages ISO 8859. Pour rem\u00e9dier \u00e0 cela, l'ISO a introduit l'Universal Character Set (UCS) sous la norme ISO-10646. Cette norme attribue \u00e0 chaque caract\u00e8re un nom unique et un num\u00e9ro appel\u00e9 point de code. Elle recense plus de 110 000 caract\u00e8res et peut contenir ceux de n'importe quelle langue, avec une capacit\u00e9 maximale de 4 294 967 295 caract\u00e8res.</p> <p>Les 256 premiers points de code de l'ISO-8859-1 sont inclus par souci de compatibilit\u00e9. La notation \\(U+xxxx\\) repr\u00e9sente les points de code du jeu universel de caract\u00e8res, o\u00f9 chaque \\(x\\) est un chiffre hexad\u00e9cimal. Par exemple, \\(U+006F\\) d\u00e9signe le point de code de la lettre \"o\".</p> <p>UNICODE reprend le codage ASCII concernant les principaux caract\u00e8res, en \u00e9tendant le code \u00e0 16 bits. Ainsi, le caract\u00e8re <code>A</code> a pour point de code \\(0041_{16}\\).</p> <p>Unicode, cr\u00e9\u00e9 en 1991 et encore en d\u00e9veloppement, comporte d\u00e9j\u00e0 137 374 caract\u00e8res d\u2019une centaine d\u2019\u00e9critures dont les id\u00e9ogrammes, l\u2019alphabet grec etc.</p> <p>La norme Unicode d\u00e9finit plusieurs techniques d'encodage pour repr\u00e9senter les points de code de mani\u00e8re plus ou moins \u00e9conomique, selon la technique choisie. Ces encodages, appel\u00e9s formats de transformation universelle ou Universal Transformation Format (UTF) en anglais, portent les noms UTF-n, o\u00f9 n indique le nombre minimal de bits utilis\u00e9s pour repr\u00e9senter un point de code.</p>"},{"location":"premiere/representation_donnees/cours/#utf-8","title":"UTF-8","text":"<p>C\u2019est le format le plus utilis\u00e9 sous Linux, dans les protocoles r\u00e9seaux et les sites Web. Comme son nom l\u2019indique, il faut seulement 8 bits pour coder les principaux caract\u00e8res. L\u2019UTF-8 est enti\u00e8rement compatible avec le standard ASCII, c\u2019est-\u00e0-dire que les 127 premiers caract\u00e8res sont repr\u00e9sent\u00e9s sur 1 octet, exactement comme en ASCII. Les programmes fonctionnant sur des textes encod\u00e9s en ASCII devraient \u00e9galement fonctionner si ces textes sont encod\u00e9s en UTF-8.</p> <p>L\u2019unicode et en particulier UTF-8 vise \u00e0 :</p> <ul> <li>minimiser l\u2019espace occup\u00e9 par un caract\u00e8re</li> <li>proposer un encodage adaptable \u00e0 tous les caract\u00e8res employ\u00e9s sur terre</li> <li>conserver l\u2019ordre de la table ascii de d\u00e9part</li> </ul> <p>UTF-8 est utilis\u00e9 par 90,5% des sites web en 2017 et dans la majorit\u00e9 des syst\u00e8mes UNIX.</p> <p>Principe de l'encodage UTF-8</p> <p>Le principe de l\u2019encodage UTF-8 est le suivant :</p> <ul> <li>Si le bit de poids fort d\u2019un octet est \u00e0 0, alors il s\u2019agit d\u2019un caract\u00e8re ASCII cod\u00e9 sur les 7 bits restant.</li> <li>Sinon, les premiers bits de poids fort de l\u2019octet indiquent le nombre d\u2019octets utilis\u00e9s pour encoder le caract\u00e8re \u00e0 l\u2019aide d\u2019une s\u00e9quence de bits \u00e0 1 et se terminant par un bit \u00e0 0. Par exemple, si le premier octet commence par \\(110xxxxx\\), cela signifie que le caract\u00e8re est cod\u00e9 par 2 octets puisqu\u2019il commence par une s\u00e9quence de deux bits de poids fort \u00e0 1 suivie d\u2019un 0. De m\u00eame, si le premier octet commence par \\(1110xxxx\\), cela signifie que le caract\u00e8re est cod\u00e9 par 3 octets.</li> <li>Enfin, dans le cas d\u2019un encodage sur \\(k\\) octets, les \\(k \u2212 1\\) octets qui suivent l\u2019octet de poids fort doivent tous \u00eatre de la forme \\(10xxxxxx\\), c\u2019est-\u00e0-dire commencer par deux bits de poids fort valant \\(10\\).</li> </ul> <p>Voici un tableau r\u00e9sumant le principe de l\u2019encodage UTF-8, avec la plage des caract\u00e8res repr\u00e9sentables selon le nombre d\u2019octets utilis\u00e9s.</p> <p> </p> Principe de l'encodage UTF-8 <p>Et voici quelques exemples de repr\u00e9sentations de points de code selon le format UTF-8 :</p> <p> </p> Exemples de repr\u00e9sentations selon UTF-8 <p>Exercice 12</p> <p>Sachant que le point de code du symbole <code>\u00e9</code> est \\(233\\), donner la s\u00e9quence de points de code du mot <code>\u00e9l\u00e9gance</code>, puis les octets en binaire correspondant \u00e0 l\u2019encodage UTF-8 de ce mot.</p> <p>Voici comment proc\u00e9der :</p> <ul> <li>Chercher le point de code de chaque lettre en hexad\u00e9cimal et en binaire.</li> <li>En vous aidant de la table Principe de l'encodage UTF-8 ci-dessus, retrouver l'encodage en UTF-8 de chaque symbole en choisissant le bon nombre d'octets. On rappelle que les symboles pr\u00e9sents dans la table ASCII (comme les lettres de <code>a</code> \u00e0 <code>z</code>) sont cod\u00e9s sur un seul octet, donc avec 7 bits codants.</li> <li>Enfin, \u00e9crire les octets en binaire correspondant \u00e0 l'encodage du mot complet.</li> </ul> <p>Exercice 13</p> <p>Pour chacun des caract\u00e8res suivants, dont le point de code est donn\u00e9 en d\u00e9cimal, donner l\u2019encodage UTF-8 du caract\u00e8re, en donnant les octets en d\u00e9cimal et en hexad\u00e9cimal.</p> <ol> <li>caract\u00e8re <code>A</code> (point de code \\(65\\))</li> <li>caract\u00e8re <code>\u00e8</code> (point de code \\(232\\))</li> <li>caract\u00e8re (\u00e9toile) (point de code \\(8902\\))</li> </ol>"},{"location":"premiere/representation_donnees/cours_corr/","title":"Repr\u00e9sentation des donn\u00e9es en machine","text":""},{"location":"premiere/representation_donnees/cours_corr/#representation-des-donnees-en-machine","title":"Repr\u00e9sentation des donn\u00e9es en machine","text":"Extrait du programme <p>Voici un extrait du programme indiquant les notions \u00e0 ma\u00eetriser sur ce th\u00e8me.</p> <p></p> <p>Dans un ordinateur, toutes les informations (donn\u00e9es ou programmes) sont repr\u00e9sent\u00e9es \u00e0 l\u2019aide de deux chiffres : le 0 et 1, appel\u00e9s chiffres binaires ou Binary Digits (bits) en anglais.</p> <p>Dans la m\u00e9moire d\u2019un ordinateur (RAM, ROM, registres des microprocesseurs, etc.), ces chiffres binaires sont regroup\u00e9s par paquets de 8, que l'on appelle octets (ou bytes en anglais), puis organis\u00e9s en mots machine (ou words en anglais) de 2, 4 ou 8 octets en g\u00e9n\u00e9ral. Un ordinateur de 32 bits par exemple manipule directement des mots de 4 octets (4 octets \u00d7 8 bits = 32 bits) lorsqu\u2019il effectue des op\u00e9rations en m\u00e9moire ou dans ses calculateurs.</p> <p>Le regroupement des bits en octets ou mots machine permet de repr\u00e9senter des donn\u00e9es telles que des nombres entiers, des nombres r\u00e9els (on verra que l'on ne peut repr\u00e9senter que des approximations des nombres r\u00e9els), ou encore des caract\u00e8res et des textes (on introduira la notion d'encodage).</p>"},{"location":"premiere/representation_donnees/cours_corr/#representation-des-entiers-naturels","title":"Repr\u00e9sentation des entiers naturels","text":"<p>L'encodage le plus simple est celui des nombres entiers naturels (nombres entiers positifs).</p> <p>Pour repr\u00e9senter des nombres, les ordinateurs utilisent le syst\u00e8me binaire : Le codage binaire d\u2019un nombre positif \\(n\\) est la suite de \\(k\\) bits \\(b_{k - 1} ... b_0\\) telle que \\(n = b_{k \u2212 1} \u00d7 2^{k \u2212 1} + b_{k \u2212 2} \u00d7 2^{k \u2212 2} + ... + b_1 \u00d7 2^1 + b_0 \u00d7 2^0\\) . Ainsi le nombre \\(42\\) en d\u00e9cimal est repr\u00e9sent\u00e9 par \\(101010\\) en binaire : \\(42 = \\textbf{1} \u00d7 2\u2075 + \\textbf{0} \u00d7 2\u2074 + \\textbf{1} \u00d7 2\u00b3 + \\textbf{0} \u00d7 2\u00b2 + \\textbf{1} \u00d7 2\u00b9 + \\textbf{0} \u00d7 2\u2070\\) \\(42 = \\textbf{1} \u00d7 2\u2075 + \\textbf{1} \u00d7 2\u00b3 + \\textbf{1} \u00d7 2^1\\) \\(42 = 32 + 8 + 2\\)</p> <p>\u00c0 vous de jouer</p> <p>Voici des nombres entiers en base binaire, donner l'\u00e9criture en base d\u00e9cimale de ces nombres :</p> <ul> <li>\\(0100 1010_2\\)</li> <li>\\(1111 0101_2\\)</li> </ul> <p>Le codage binaire d'un nombre d\u00e9cimal consiste \u00e0 passer de la base 10 (base d\u00e9cimale) \u00e0 la base 2, mais il existe d'autres bases comme la base 8 (base octale), ou la base 16 (base hexad\u00e9cimale).</p> <p>Chiffres autoris\u00e9s selon la base X de repr\u00e9sentation</p> <p>Base 2 : chiffre \\(0\\) et \\(1\\). Base 8 : chiffre \\(0, 1, 2, 3, 4, 5, 6, 7\\). Base 10 : chiffre \\(0, 1, 2, 3, 4, 5, 6, 7, 8, 9\\) Base 16 : chiffre \\(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F\\) avec \\(A = 10_{10}, B = 11_{10}, C = 12_{10}, D = 13_{10}, E = 14_{10}, F = 15_{10}\\).</p> Rappels - \u00c9criture en base 10 <p>Un nombre entier en base 10 est une s\u00e9quence de chiffres compris entre \\(0\\) et \\(9\\). Pour calculer la valeur d\u2019une s\u00e9quence \\(c_{k\u22121} , c_{k\u22122} , . . . , c_{1} , c_{0}\\) de \\(k\\) chiffres, on affecte \u00e0 chaque chiffre \\(c_n\\) un poids \\(10^n\\), ce poids \u00e9tant une puissance de 10 qui d\u00e9pend de sa position \\(n\\) dans la s\u00e9quence, et on calcule la somme des termes \\(c_n \u00d7 10^n\\). </p> <p>Si l'on prend l\u2019exemple de la s\u00e9quence \\(61027\\), et qu'on la repr\u00e9sente en diff\u00e9rentes colonnes, en indiquant la position de chaque chiffre, en commen\u00e7ant \u00e0 compter les indices et les poids correspondants \u00e0 partir de \\(0\\) de la droite vers la gauche, on obtient : </p> s\u00e9quence 6 1 0 2 7 position 4 3 2 1 0 poids 10\u2074 10\u00b3 10\u00b2 10\u00b9 10\u2070 <p>La valeur de la s\u00e9quence est un entier, que l'on notera \\(N\\), calcul\u00e9 de la mani\u00e8re suivante :</p> <p>\\(N = 6 \u00d7 10^4 + 1 \u00d7 10^3 + 0 \u00d7 10^2 + 2 \u00d7 10^1 + 7 \u00d7 10^0\\)</p> <p>Plus g\u00e9n\u00e9ralement, une s\u00e9quence \\(d_{k\u22121} , d_{k\u22122} , . . . , d_1 , d_0\\) de \\(k\\) chiffres d\u00e9cimaux \\(d_i\\) correspond au nombre \\(N\\) suivant :</p> <p>\\(N = d_{k\u22121} \u00d7 10^{k\u22121} + d_{k\u22122} \u00d7 10^{k\u22122} + \u00b7 \u00b7 \u00b7 + d_1 \u00d7 10^1 + d_0 \u00d7 10^0\\)</p> Rappels - \u00c9criture en base 2 <p>Tout comme l\u2019encodage en base 10, une s\u00e9quence de chiffres binaires peut s\u2019interpr\u00e9ter comme un nombre \u00e9crit en base 2. Dans cette base, chaque chiffre (0 ou 1), appel\u00e9 bit, de la s\u00e9quence est associ\u00e9e \u00e0 un poids \\(2^i\\) et \u00e0 une puissance de 2 qui d\u00e9pend de sa position \\(i\\).</p> <p>Par exemple, l\u2019octet (suite de 8 bits) \\(0100 1101\\) peut \u00eatre repr\u00e9sent\u00e9 de la mani\u00e8re suivante.</p> s\u00e9quence 0 1 0 0 1 1 0 1 position 7 6 5 4 3 2 1 0 poids 2\u2077 2\u2076 2\u2075 2\u2074 2\u00b3 2\u00b2 2\u00b9 2\u2070 <p>La valeur de cette s\u00e9quence, que l'on notera \\(N\\), est calcul\u00e9e comme suit :</p> <p>\\(N = 0 \u00d7 2^7 + 1 \u00d7 2^6 + 0 \u00d7 2^5 + 0 \u00d7 2^4 + 1 \u00d7 2^3 + 1 \u00d7 2^2 + 0 \u00d7 2^1 + 1 \u00d7 2^0\\) \\(N = 77_{10}\\)</p> <p>Plus g\u00e9n\u00e9ralement, une s\u00e9quence \\(b_{k\u22121} , b_{k\u22122} , . . . , b_1, b_0\\) de \\(k\\) bits \\(b_i\\) correspond au nombre \\(N\\) suivant :</p> <p>\\(N = b_{k\u22121} \u00d7 2^{k\u22121} + b_{k\u22122} \u00d7 2^{k\u22122} + \u00b7 \u00b7 \u00b7 + b_1 \u00d7 2^1 + d_0 \u00d7 b^0\\)</p> <p>Cette mani\u00e8re d'encoder les entiers naturels \u00e0 l'aide de s\u00e9quences de \\(k\\) bits permet de repr\u00e9senter les entiers de \\(0\\) \u00e0 \\(2^k \u2212 1\\). Sur 1 octet (= 8 bits) par exemple, on peut donc repr\u00e9senter les entiers naturels de \\(0\\) \u00e0 \\(255\\).</p> Rappels - Base 16 (hexad\u00e9cimale) <p>...</p>"},{"location":"premiere/representation_donnees/cours_corr/#methode-des-divisions-euclidiennes-successives","title":"M\u00e9thode des divisions euclidiennes successives","text":"<p>Si l'on souhaite par exemple repr\u00e9senter \\(235_{10}\\) en base 2 :</p> <p> </p> M\u00e9thode des divisions successives <p>L'\u00e9criture binaire de \\(235_{10}\\) sur 8 bits est donc \\(1110 1011_2\\).</p> <p>Si l'on souhaite convertir un nombre vers la base 16 (en hexad\u00e9cimal), le principe est le m\u00eame, mais on divisera par 16 au lieu de diviser par 2. On rappelle qu'en hexad\u00e9cimal, les valeurs vont de \\(0\\) \u00e0 \\(F\\) : \\(1, 2, ..., 8, 9, A, B, ... E, F\\), les restes sup\u00e9rieurs \u00e0 \\(9\\) devront donc \u00eatre remplac\u00e9s par une lettre.</p>"},{"location":"premiere/representation_donnees/cours_corr/#methode-des-soustractions","title":"M\u00e9thode des soustractions","text":"<p>Pour convertir un entier not\u00e9 \\(N\\) en base \\(X\\), on proc\u00e8de comme suit :</p> <p>La plus grande puissance de \\(X\\) qui est inf\u00e9rieure ou \u00e9gale \u00e0 \\(N\\) est soustraite \u00e0 \\(N\\). Ce processus de soustraction est r\u00e9p\u00e9t\u00e9 sur le reste de la diff\u00e9rence, jusqu\u2019\u00e0 obtenir un r\u00e9sultat \u00e9gal \u00e0 0. Le nombre \\(N\\) exprim\u00e9 en base \\(X\\) est alors obtenu en notant le nombre de fois o\u00f9 une m\u00eame puissance de \\(X\\) a \u00e9t\u00e9 retir\u00e9e, et cela pour chaque puissance depuis la plus grande apparaissant, dans l\u2019ordre d\u00e9croissant des puissances.</p> <p>Dans le cas d'une conversion vers la base 2, chaque puissance de \\(X\\) ne peut \u00eatre retir\u00e9e qu'une seule fois (car les seules valeurs possibles en binaire sont 0 et 1.)</p> <p>Exemples :</p> <p>Si l'on souhaite convertir \\(125_{10}\\) en base 2 : On sait que \\(2\u2070 = 1; 2\u00b9 = 2; 2\u00b2 = 4; 2\u00b3 = 8; 2\u2074 = 16; 2\u2075 = 32; 2\u2076 = 64; 2\u2077 = 128\\). \\(125 - \\textbf{64} = 61; 61 - \\textbf{32} = 29; 29 - \\textbf{16} = 13; 13 - \\textbf{8} = 5; 5 - \\textbf{4} = 1; 1 - \\textbf{1} = 0;\\)</p> <p>Donc \\(125_{10} = 0111~1101\\).</p> <p>Si l'on souhaite convertir \\(235_{10}\\) en base 8 : On sait que \\(8^0 = 1; 8\u00b9 = 1; 8^2 = 64; 8^3 = 512\\).   \\(235 \u2013 64 = 171; 171 \u2013 64 = 107; 107 \u2013 64 = 43; 43 \u2013 8 = 35; 35 \u2013 8 = 27; 27 \u2013 8 = 19;\\) \\(19 \u2013 8 = 11; 11 \u2013 8 = 3; 3 \u2013 1 = 2; 2 \u2013 1 = 1; 1 \u2013 1 = 0\\)</p> <p>Donc \\(235_{10} = 3 \u00d7 64 + 5 \u00d7 8 + 3 \u00d7 1 = 353_8\\).</p>"},{"location":"premiere/representation_donnees/cours_corr/#convertir-un-nombre-de-la-base-2-vers-la-base-16","title":"Convertir un nombre de la base 2 vers la base 16","text":"<p>Pour convertir un nombre de la base 2 vers la base 16, c'est simple : il suffit de faire des paquets de 4 bits, et de coder chaque paquet avec une valeur hexad\u00e9cimale. Par exemple, si l'on reprend l'\u00e9criture binaire pr\u00e9c\u00e9dente : \\(1110~1011_2\\), le premier groupe \\(1110\\) se code par \\(14\\) en d\u00e9cimal, et donc par \\(E\\) en hexad\u00e9cimal. Le deuxi\u00e8me groupe \\(1011\\) se code par \\(11\\) en d\u00e9cimal, et donc par \\(B\\) en hexad\u00e9cimal. Ainsi, \\(235_{10} = 1110~1011_2 = EB_{16}\\).</p> <p>\u00c0 l'inverse, convertir un nombre exprim\u00e9 en base 16 vers la base 2 s\u2019effectue en rempla\u00e7ant simplement chacun des chiffres du nombre en base 16 par leur \u00e9quivalent binaire sur 4 bits.</p> <p>Par exemple : \\(45 A_{16} = 0100~0101~1010_2\\) et \\(1100~1111_2 = CF_{16}\\)</p>"},{"location":"premiere/representation_donnees/cours_corr/#quelques-exercices","title":"Quelques exercices","text":"<p>Exercice 1</p> <p>En utilisant la m\u00e9thode des divisions euclidiennes successives, donner l'\u00e9criture binaire du nombre 147 sur 8 bits. \u00c0 partir de l'\u00e9criture binaire obtenue, donner son \u00e9criture hexad\u00e9cimale.</p> <p>Exercice 2</p> <p>En utilisant la m\u00e9thode des soustractions successives, donner l'\u00e9criture binaire du nombre 169 sur 8 bits. \u00c0 partir de l'\u00e9criture binaire obtenue, donner son \u00e9criture hexad\u00e9cimale.</p> <p>Exercice 3</p> <p>Donner la repr\u00e9sentation en base 2 et sur 8 bits des entiers 14, 218, 42 et 57.</p> <p>Vous pourrez v\u00e9rifier vos r\u00e9ponses avec la fonction <code>bin</code> de Python. La fonction <code>bin</code> prend un nombre entier en entr\u00e9e, et renvoie la repr\u00e9sentation binaire de ce nombre.</p> <p>Par exemple :</p> <pre><code>&gt;&gt;&gt; bin(42)\n'0b101010'\n</code></pre> <p>Ici, on voit que l'\u00e9criture binaire de 42 est \\(101010\\). Le <code>0b</code> indique la base (<code>b</code> pour binaire, <code>o</code> pour octal, <code>x</code> pour hexad\u00e9cimal).</p> <p>Exercice 4</p> <p>Donner la repr\u00e9sentation en base 16 des entiers binaires suivants.</p> <ul> <li>1001010</li> <li>100010001</li> <li>1010010011110010</li> </ul> <p>Vous pourrez v\u00e9rifier vos r\u00e9ponses avec la fonction <code>hex</code> de Python. La fonction <code>hex</code> prend un nombre entier en entr\u00e9e, et renvoie la repr\u00e9sentation hexad\u00e9cimale de ce nombre.</p> <p>Par exemple :</p> <pre><code>&gt;&gt;&gt; hex(42)\n'0x2A'\n</code></pre> <p>Ici, on voit que l'\u00e9criture hexad\u00e9cimale de 42 est \\(2A\\). Le <code>0x</code> indique la base (<code>b</code> pour binaire, <code>o</code> pour octal, <code>x</code> pour hexad\u00e9cimal).</p> <p>Exercice 5</p> <p>Quelle est la valeur en base 10 de l\u2019entier qui s\u2019\u00e9crit \\(BEEF\\) en base 16 ? </p>"},{"location":"premiere/representation_donnees/cours_corr/#representation-des-entiers-relatifs","title":"Repr\u00e9sentation des entiers relatifs","text":"<p>La repr\u00e9sentation d\u2019un nombre sign\u00e9 s\u2019effectue selon une s\u00e9quence binaire d\u2019une longueur fix\u00e9e \u00e0 \\(n\\) bits. Cette longueur peut \u00eatre de 8 bits, de 16 bits ou de 32 bits.</p> <p>Plusieurs conventions de repr\u00e9sentation existent. Le choix de la convention est effectu\u00e9 par le constructeur de la machine, et \u00e9ventuellement par le programmeur en fonction du type affect\u00e9 aux variables d\u00e9clar\u00e9es. Dans le langage C par exemple, d\u00e9clarer une variable avec un type <code>int</code>, d\u00e9termine une repr\u00e9sentation sur 2 octets selon la convention du compl\u00e9ment \u00e0 2. Par ailleurs, une d\u00e9claration avec un type <code>unsigned short</code> d\u00e9termine une repr\u00e9sentation d\u2019un nombre sur 8 bits, non sign\u00e9.</p>"},{"location":"premiere/representation_donnees/cours_corr/#convention-de-la-valeur-signee","title":"Convention de la valeur sign\u00e9e","text":"<p>Dans cette convention, le bit de poids fort (c'est-\u00e0-dire celui qui est tout \u00e0 gauche de l'\u00e9criture) correspond au signe (\\(0\\) pour un entier positif, \\(1\\) pour un entier n\u00e9gatif). Tous les autres bits codent la valeur absolue du nombre.</p> <p>Exemple :</p> <ul> <li>Repr\u00e9sentation de \\(+ 77_{10}\\) sur 8 bits : \\(01001101_2\\).</li> <li>Repr\u00e9sentation de \\(\u2013 77_{10}\\) sur 8 bits : \\(11001101_2\\).</li> </ul> <p>On peut faire les remarques suivantes sur cette repr\u00e9sentation :</p> <ul> <li>deux repr\u00e9sentations de la valeur \\(0\\) sont possibles, l'une correspondant \u00e0 un z\u00e9ro positif (\\(00000000_2\\) = \\((+ 0)_{10}\\) sur 8 bits), l'autre \u00e0 un z\u00e9ro n\u00e9gatif (\\(10000000_2\\) = \\((\u2013 0)_{10}\\) sur \\(8\\) bits);</li> <li>l\u2019intervalle des nombres sign\u00e9s repr\u00e9sentables est born\u00e9 en fonction de la longueur de la cha\u00eene binaire utilis\u00e9e pour la repr\u00e9sentation. Sur \\(8\\) bits par exemple, l\u2019intervalle des nombres repr\u00e9sentables est \\([11111111_2, 01111111_2]\\), soit l\u2019intervalle \\([-127_{10}, + 127_{10}]\\). L\u2019arithm\u00e9tique des machines est donc diff\u00e9rente de celle de l\u2019\u00eatre humain puisque l\u2019intervalle des nombres n\u2019est pas infini, mais d\u00e9pend de la longueur des cha\u00eenes de bits manipul\u00e9es par la machine;</li> <li>pour effectuer une soustraction, il est n\u00e9cessaire d'utiliser un circuit particulier diff\u00e9rent de celui permettant d'effectuer des additions.</li> </ul> <p>Voici les valeurs repr\u00e9sentables avec cette convention selon la longueur de la chaine de bits fix\u00e9e :</p> Longueur de la chaine de bits Intervalle de base 10 \\(8\\) bits \\([- 127, + 127]\\) \\(16\\) bits \\([- 32 767, + 32 767]\\) \\(32\\) bits \\([\u2013 2 147 483 647, + 2 147 483 647]\\) \\(p\\) bits \\([\u2013 2^{p \u2013 1} \u2013 1, + 2^{p \u2013 1} \u2013 1]\\)"},{"location":"premiere/representation_donnees/cours_corr/#convention-du-complement-a-2","title":"Convention du compl\u00e9ment \u00e0 2","text":"<p>Le compl\u00e9ment \u00e0 2 ou compl\u00e9ment vrai d\u2019un nombre binaire \\(N = b_{n\u20131} ... b_0\\) s\u2019obtient en ajoutant la valeur \\(1\\) au compl\u00e9ment restreint ou compl\u00e9ment \u00e0 1 de ce nombre.</p> <p>Le compl\u00e9ment \u00e0 1 ou compl\u00e9ment restreint d\u2019un nombre binaire \\(N = b_{n-1} ... b_0\\) s\u2019obtient en inversant la valeur de chacun des bits de ce nombre.</p> <p>Exemple :</p> \\(10001001_2\\) compl\u00e9ment \u00e0 1 \\(01110110_2\\) + \\(1_2\\) compl\u00e9ment \u00e0 2 \\(01110111_2\\) <p>Dans la convention du compl\u00e9ment \u00e0 2, un nombre n\u00e9gatif \\(\u2013 N\\) exprim\u00e9 sur \\(n\\) bits est repr\u00e9sent\u00e9 en prenant le compl\u00e9ment \u00e0 2 de son \u00e9quivalent positif \\(+ N\\). Un nombre positif \\(+ N\\) est quant \u00e0 lui repr\u00e9sent\u00e9 par sa valeur binaire sur \\(n\\) bits.</p> <p>Exemple :</p> Repr\u00e9sentation de \\(+ 77_{10}\\) sur 8 bits : \\(01001101_2\\) Repr\u00e9sentation de \\(\u2013 77_{10}\\) sur 8 bits : \\(+ 77_{10}\\) \\(01001101_2\\) compl\u00e9ment restreint : \\(10110010_2\\) \\(+\\) \\(1_2\\) compl\u00e9ment vrai : \\(10110011_2\\) <p>On peut faire les remarques suivantes sur cette repr\u00e9sentation :</p> <ul> <li>une seule repr\u00e9sentation du z\u00e9ro est admise : \\(00000000_2\\) = \\((+ 0)_{10}\\) sur \\(8\\) bits.</li> <li>l\u2019intervalle des nombres sign\u00e9s repr\u00e9sentables est born\u00e9 en fonction de la longueur de la cha\u00eene binaire utilis\u00e9e pour la repr\u00e9sentation. Sur \\(8\\) bits par exemple, l\u2019intervalle des nombres repr\u00e9sentables est \\([10000000_2, 01111111_2]\\), soit l\u2019intervalle \\([\u2013 128_{10}, + 127_{10}]\\). La cha\u00eene \\(10000000_2\\) apr\u00e8s le compl\u00e9ment \u00e0 2 donne de nouveau la cha\u00eene \\(10000000_2\\). Par convention, elle repr\u00e9sente la valeur \\(- 128_{10}\\) ;</li> <li>pour effectuer une soustraction, il n'est pas n\u00e9cessaire d'utiliser un circuit particulier, puisque soustraire un nombre A \u00e0 un autre nombre B \u00e9quivaut \u00e0 additionner au nombre B le compl\u00e9ment \u00e0 2 du nombre A.</li> </ul> <p>Voici les valeurs repr\u00e9sentables avec cette convention selon la longueur de la chaine de bits fix\u00e9e :</p> Longueur de la chaine de bits Intervalle de base 10 \\(8\\) bits \\([- 128, + 127]\\) \\(16\\) bits \\([- 32 768, + 32 767]\\) \\(32\\) bits \\([\u2013 2 147 483 648, + 2 147 483 647]\\) \\(p\\) bits \\([\u2013 2^{p \u2013 1}, + 2^{p \u2013 1} \u2013 1]\\)"},{"location":"premiere/representation_donnees/cours_corr/#binaire-vers-decimal","title":"Binaire vers d\u00e9cimal","text":"<p>L'op\u00e9ration inverse, permettant de retrouver un entier cod\u00e9 avec la convention du compl\u00e9ment \u00e0 2, est assez simple \u00e0 effectuer.</p> <p>Le bit de poids fort (celui qui est tout \u00e0 gauche) de la cha\u00eene binaire peut \u00eatre \u00e9galement inter-pr\u00e9t\u00e9 comme bit de signe. Ainsi :</p> <ul> <li>s'il vaut \\(\\textbf{0}\\), alors la cha\u00eene binaire repr\u00e9sente un nombre positif \\(+ N\\) dont la valeur d\u00e9cimale est donn\u00e9e directement par la conversion de la cha\u00eene depuis la base 2 vers la base 10;</li> <li>s'il vaut \\(\\textbf{1}\\), alors la cha\u00eene binaire repr\u00e9sente un nombre n\u00e9gatif \\(\u2013 N\\) dont la valeur d\u00e9cimale est celle du nombre positif associ\u00e9 \\(+ N\\) obtenu en compl\u00e9mentant de nouveau \u00e0 2 la cha\u00eene, ou plus simplement en inversant tous les bits situ\u00e9s \u00e0 gauche de premier bit \u00e0 1 (en partant de la droite).</li> </ul> <p>Conversion binaire (compl\u00e9ment \u00e0 2) vers d\u00e9cimal</p> <p>\\(0011~0011_2\\) : Le bit de poids fort est \u00e0 0 (nombre positif), donc on convertit simplement vers la base 10 :</p> <p></p> \\(0011~0011_2 = 2^0 + 2^1 + 2^4 + 2^5 = 1 + 2 + 16 + 32 = + 51_{10}\\) <p>\\(1011~1100_2\\) : Le bit de poids fort est \u00e0 1 (nombre n\u00e9gatif), donc :</p> <ul> <li>soit on refait le compl\u00e9ment \u00e0 2,</li> <li>soit on inverse tous les bits situ\u00e9s \u00e0 gauche du premier bit \u00e0 1 en partant de la droite, ce qui donne ici : \\(\\textbf{1011 1}100_2 \u2192 \\textbf{0100 0}100_2\\). \\(0100~0100_2 = 68_{10}\\), donc il ne reste qu'\u00e0 ajouter le signe \\(-\\) </li> </ul> <p></p> \\(1011~1100_2 = - 68_{10}\\)"},{"location":"premiere/representation_donnees/cours_corr/#bit-de-carry","title":"Bit de carry","text":"<p>Lors d\u2019une op\u00e9ration arithm\u00e9tique effectu\u00e9e sur des nombres de \\(p\\) bits, un \\(p + 1er\\) bit peut \u00eatre g\u00e9n\u00e9r\u00e9. Ce bit suppl\u00e9mentaire de poids fort est m\u00e9moris\u00e9 comme \u00e9tant le bit de carry par un indicateur de 1 bit not\u00e9 \\(C\\) dans un registre du processeur appel\u00e9 registre d'\u00e9tat (PSW).</p> <p>Par exemple, l'addition de \\(0111~1111_2\\) (\\(+ 127\\)) et \\(1111~1110\\) (\\(- 2\\)) :</p> \\(0111\\) \\(1111_2\\) + \\(1111\\) \\(1110_2\\) 1 \\(0111\\) \\(1101_2\\) <p>Ici, le 9\u00e8me bit est le bit de carry.</p>"},{"location":"premiere/representation_donnees/cours_corr/#overflow","title":"Overflow","text":"<p>Lorsque l'on effectue une op\u00e9ration math\u00e9matique impliquant des nombres de m\u00eame signe et ayant chacun \\(p\\) bits, il est possible que le r\u00e9sultat d\u00e9passe la capacit\u00e9 de repr\u00e9sentation de la machine. En d'autres termes, ce r\u00e9sultat peut \u00eatre en dehors de la plage des nombres que la machine peut repr\u00e9senter en utilisant la convention choisie pour ces nombres sign\u00e9s.</p> <p>Dans de tels cas, le r\u00e9sultat obtenu est incorrect par rapport \u00e0 son interpr\u00e9tation pr\u00e9vue : on appelle cela un overflow ou un d\u00e9passement de capacit\u00e9. Tout comme le carry, la survenue d'un overflow est enregistr\u00e9e dans le registre d'\u00e9tat (PSW) du processeur \u00e0 l'aide d'un indicateur d'un bit, g\u00e9n\u00e9ralement not\u00e9 \\(O\\).</p> <p>Par exemple, si l'on effectue l'addition des nombres \\(+ 127_{10}\\) et \\(+ 2_{10}\\) repr\u00e9sent\u00e9s selon la convention du compl\u00e9ment \u00e0 2 :</p> \\(0111\\) \\(1111_2\\) + \\(0000\\) \\(0010_2\\) \\(1000\\) \\(0001_2\\) <p>Le r\u00e9sultat obtenu est le nombre \\(\u2013 127_{10}\\) et non pas la valeur attendue \\(+ 129_{10}\\). Il y a ici un d\u00e9passement de capacit\u00e9. En effet, l\u2019intervalle des nombres repr\u00e9sentables sur \\(8\\) bits selon la convention du compl\u00e9ment \u00e0 2 est \\([\u2013 127_{10}, + 127_{10}]\\).</p> <p>Pourquoi pr\u00e9f\u00e8re t-on cette convention ?</p> <p>La convention du compl\u00e9ment \u00e0 2 est g\u00e9n\u00e9ralement pr\u00e9f\u00e9r\u00e9e \u00e0 celle de la valeur sign\u00e9e pour les raisons suivantes :</p> <ol> <li> <p>Simplicit\u00e9 des op\u00e9rations arithm\u00e9tiques : Avec le compl\u00e9ment \u00e0 2, les op\u00e9rations arithm\u00e9tiques telles que l'addition et la soustraction fonctionnent de la m\u00eame mani\u00e8re que pour les nombres non sign\u00e9s, en utilisant le m\u00eame mat\u00e9riel de calcul. Cela simplifie consid\u00e9rablement la conception des circuits \u00e9lectroniques et les op\u00e9rations de base, car il n'est pas n\u00e9cessaire de traiter les cas sp\u00e9ciaux pour les nombres sign\u00e9s.</p> </li> <li> <p>Unicit\u00e9 de la repr\u00e9sentation : En utilisant le compl\u00e9ment \u00e0 2, chaque nombre a une repr\u00e9sentation unique. Cela signifie qu'il n'y a pas de valeur positive et n\u00e9gative qui se chevauchent, ce qui \u00e9vite les ambigu\u00eft\u00e9s.</p> </li> <li> <p>Facilit\u00e9 de conversion : La conversion entre nombres sign\u00e9s et non sign\u00e9s (et vice versa) est plus simple avec le compl\u00e9ment \u00e0 2 que avec d'autres m\u00e9thodes de repr\u00e9sentation sign\u00e9e. Il suffit d'appliquer le compl\u00e9ment \u00e0 2 sur un nombre n\u00e9gatif pour obtenir sa repr\u00e9sentation positive, et vice versa.</p> </li> <li> <p>Prise en charge native des op\u00e9rations binaires : Le compl\u00e9ment \u00e0 2 est id\u00e9al pour les ordinateurs, qui traitent naturellement les op\u00e9rations binaires. La repr\u00e9sentation en compl\u00e9ment \u00e0 2 facilite les op\u00e9rations bit \u00e0 bit, ce qui est essentiel pour la conception des processeurs.</p> </li> <li> <p>Gestion de l'overflow : Lorsque des op\u00e9rations arithm\u00e9tiques d\u00e9passent la capacit\u00e9 de stockage d'un registre, le compl\u00e9ment \u00e0 2 permet de g\u00e9rer naturellement les d\u00e9passements (overflow) sans n\u00e9cessiter de mat\u00e9riel ou de logiciel suppl\u00e9mentaire compliqu\u00e9.</p> </li> </ol> <p>Exercice 6</p> <p>Donner la repr\u00e9sentation en compl\u00e9ment \u00e0 2 et sur 8 bits des entiers -10, -128, -42 et 97.</p> <p>Exercice 7</p> <p>Donner en base 10 la valeur des octets sign\u00e9s \\(11100111\\) et \\(11000001\\).</p> <p>Plus d'exercices</p> <p>Vous pouvez \u00e9galement vous entra\u00eener sur les exercices propos\u00e9s \u00e0 la fin de cette page (IUT de Reims).</p>"},{"location":"premiere/representation_donnees/cours_corr/#addition-et-soustraction-de-nombres-entiers","title":"Addition et soustraction de nombres entiers","text":"<p>Pour additionner deux nombres entiers en \u00e9criture binaire, on utilise le m\u00eame principe que dans le syst\u00e8me d\u00e9cimal, en additionnant les chiffres un \u00e0 un, de droite \u00e0 gauche. La table d\u2019addition des nombres binaires est la suivante :</p> <ul> <li>0 + 0 = 0</li> <li>0 + 1 = 1</li> <li>1 + 0 = 1</li> <li>1 + 1 = 10, c\u2019est-\u00e0-dire 0 avec une retenue de 1</li> <li>1 + 1 + 1 = 11, c\u2019est-\u00e0-dire 1 avec une retenue de 1</li> </ul> <p>On souhaite par exemple additionner les entiers \\(42_{10} = 00101010_2\\) et \\(14_{10} = 00001110_2\\) :</p> (1) (1) (1) 0 0 1 0 1 0 1 0 (42) + 0 0 0 0 1 1 1 0 (14) = 0 0 1 1 1 0 0 0 (56) <p>Si l'on souhaite faire une soustraction, par exemple si l'on souhaite soustraire \\(14\\) \u00e0 \\(42\\), le plus simple est de faire une addition entre \\(42\\) et le compl\u00e9ment \u00e0 2 de \\(14\\). Le compl\u00e9ment \u00e0 2 de \\(14_{10} = 00001110_2\\) est \\(11110010_2\\), donc :</p> (1) (1) (1) (1) 0 0 1 0 1 0 1 0 (42) + 1 1 1 1 0 0 1 0 (-14) = 0 0 0 1 1 1 0 0 (28) <p>D\u00e9passement de capacit\u00e9 :</p> <p>L\u2019addition de deux nombres entiers peut d\u00e9passer la capacit\u00e9 de repr\u00e9sentation des mots binaires: en effet, pour repr\u00e9senter un nombre \\(n\\) en binaire, il faut \\(\\lceil log_2(n) \\rceil\\) bits. La somme de deux nombres \\(n\\) et \\(m\\) est inf\u00e9rieure ou \u00e9gale \u00e0 \\(2 \u00d7 max(n, m)\\), donc le nombre de bits n\u00e9cessaires pour repr\u00e9senter cette somme est, au plus : \\(\\lceil log_2(2 \u00d7 max (n,m)) \\rceil = \\lceil log_2(max(n,m) + 1) \\rceil\\), soit 1 bit de plus que le nombre de bits significatifs du plus grand des deux nombres.</p> <p>Il existe des solutions pour tester l'existence d'un d\u00e9passement, par exemple en utilisant un OU EXCLUSIF (xor) pour comparer la retenue entrante et la retenue sortante de l'addition des deux bits de poids fort. Il y a d\u00e9passement si ces deux bits sont oppos\u00e9s.</p>"},{"location":"premiere/representation_donnees/cours_corr/#representation-des-nombres-reels","title":"Repr\u00e9sentation des nombres r\u00e9els","text":"<p>Nous avons vu que le langage Python \u00e9tait capable de calculer des nombres d\u00e9cimaux particuliers appel\u00e9s nombres flottants (type <code>float</code>). Nous allons voir que ces nombres ont un encodage tr\u00e8s compact, ce codage pouvant \u00eatre sur 32 ou sur 64 bits, ce qui permet de repr\u00e9senter des nombres tr\u00e8s grands ou de tr\u00e8s petits nombres, bien au-del\u00e0 de ce qu\u2019il est possible de repr\u00e9senter avec un codage des entiers sur le m\u00eame nombre de bits.</p> <p>Pour repr\u00e9senter en binaire des nombres r\u00e9els (nombres avec une partie fractionnaire), il faut d\u00e9composer celle-ci en une somme de puissances inverses de 2 : \\(b_1 ... b_k\\) est la repr\u00e9sentation binaire de \\(d(0 \\lt d \\lt 1)\\) si : \\(d = b_1 \u00d7 2^{-1} + b_2 \u00d7 2^{-2} + b_3 \u00d7 2^{-3} + ... + b_k \u00d7 2^{-k}\\) \\(d = b_1 \u00d7 \\frac{1}{2} + b_2 \u00d7 \\frac{1}{2^2} + b_3 \u00d7 \\frac{1}{2\u00b3} + ... + b_k \u00d7 \\frac{1}{2^k}\\).</p> <p>Codage inexact</p> <p>Contrairement au codage de la partie enti\u00e8re, le codage de la partie d\u00e9cimale peut \u00eatre infini, de la m\u00eame fa\u00e7on que des nombres fractionnaires peuvent avoir une partie d\u00e9cimales infinie, comme par exemple \\(\\frac{1}{3} = 0,3333...\\).</p> <p>Il y a donc des nombres d\u00e9cimaux que l'on ne peut pas repr\u00e9senter de mani\u00e8re exacte en machine. Si l'on prend le nombre <code>0.3</code> par exemple, le nombre de bits n\u00e9cessaire pour le repr\u00e9senter est infini. Si on le repr\u00e9sente sur un octet par exemple, son \u00e9criture binaire serait <code>01001100</code>, soit : \\(0 \u00d7 \\frac{1}{2} + 1 \u00d7 \\frac{1}{4} + 0 \u00d7 \\frac{1}{8}+ 0 \u00d7 \\frac{1}{16} + 1 \u00d7 \\frac{1}{32} + 1 \u00d7 \\frac{1}{64} + 0 \u00d7 \\frac{1}{2} + 0 \u00d7 \\frac{1}{256}\\), ce qui vaut \\(0,296875\\).</p> <p>Les nombres r\u00e9els repr\u00e9sentables avec une partie d\u00e9cimale finie en binaire sont ceux dont le d\u00e9nominateur est une puissance de 2, comme \\(\\frac{1}{2}\\), \\(\\frac{1}{4}\\), \\(\\frac{1}{8}\\)...</p> <p>\u00c0 vous de jouer 1</p> <p>Essayez de saisir dans l'interpr\u00e9teur Python l'expression <code>0.1 + 0.2</code>. Que devriez-vous obtenir ? Qu'obtenez-vous, et pourquoi ?</p> <p>\u00c0 vous de jouer 2</p> <p>Quelle est la repr\u00e9sentation binaire du nombre r\u00e9el dont l'\u00e9criture d\u00e9cimale est \\(1.25\\) ? \\(12.125\\) ? \\(0.3\\) (sur 8 bits) ?</p> <p>\u00c0 vous de jouer 3</p> <p>Quelle est la repr\u00e9sentation d\u00e9cimale du nombre r\u00e9el dont l'\u00e9criture binaire est : \\(0.0101\\) ? \\(1011.00001\\) ?</p>"},{"location":"premiere/representation_donnees/cours_corr/#codage-en-virgule-fixe","title":"Codage en virgule fixe","text":"<p>Une approche initiale pour la repr\u00e9sentation des nombres r\u00e9els avec une partie fractionnaire est le codage en virgule fixe, o\u00f9 la partie enti\u00e8re et la partie d\u00e9cimale sont toutes deux repr\u00e9sent\u00e9es sur un nombre pr\u00e9alablement d\u00e9fini de bits, par exemple 8 bits chacune.</p> <p>Avec cette approche, pour encoder les nombres r\u00e9els n\u00e9gatifs, on utilise simplement le compl\u00e9ment \u00e0 2 apr\u00e8s avoir effectu\u00e9 le codage en virgule fixe du nombre positif \u00e9quivalent.</p> <p>Cependant, cette m\u00e9thode pr\u00e9sente des limitations importantes. Tout d'abord, l'intervalle de nombres que l'on peut repr\u00e9senter reste restreint, correspondant \u00e0 la plage d'entiers sur 8 bits, c'est-\u00e0-dire \\([-128, +127]\\). De plus, la repr\u00e9sentation de la partie d\u00e9cimale est \u00e9galement limit\u00e9e, avec la possibilit\u00e9 de repr\u00e9senter seulement \\(256\\) valeurs distinctes. En cons\u00e9quence il devient impossible de repr\u00e9senter tous les nombres r\u00e9els, tous les nombres d\u00e9cimaux, et m\u00eame des nombres \"simples\" tels que \\(0,1\\) de mani\u00e8re exacte. Seules quelques valeurs d\u00e9cimales sp\u00e9cifiques peuvent \u00eatre repr\u00e9sent\u00e9es pr\u00e9cis\u00e9ment, tandis que d'autres doivent \u00eatre approxim\u00e9es. Ces approximations sont la principale source d'erreurs de calcul.</p> <p></p> Voir des exemples d'encodage en virgule fixe"},{"location":"premiere/representation_donnees/cours_corr/#codage-en-virgule-flottante-norme-ieee-754","title":"Codage en virgule flottante - Norme IEEE 754","text":"<p>La norme IEEE 754 d\u00e9finit un format standardis\u00e9 qui vise \u00e0 unifier la repr\u00e9sentation des nombres flottants, qui est tr\u00e8s diverse selon les constructeurs.</p> <p>Formats de repr\u00e9sentation</p> <p>Cette norme propose deux formats de repr\u00e9sentation : un format simple pr\u00e9cision sur 32 bits et un format double pr\u00e9cision sur 64 bits.</p> <p></p> <p>En simple pr\u00e9cision, la cha\u00eene de 32 bits repr\u00e9sentant le nombre est d\u00e9compos\u00e9e en :</p> <ul> <li>1 bit de signe (not\u00e9 \\(s\\)) indiquant le signe de la mantisse, </li> <li>8 bits pour l\u2019exposant (not\u00e9 \\(e\\)),</li> <li>23 bits pour le codage de la fraction de la mantisse (not\u00e9e \\(f\\)).</li> </ul> <p>En double pr\u00e9cision, la cha\u00eene de 64 bits repr\u00e9sentant le nombre est d\u00e9compos\u00e9e en :</p> <ul> <li>1 bit de signe indiquant le signe de la mantisse, </li> <li>11 bits pour l\u2019exposant,</li> <li>52 bits pour le codage de la fraction de la mantisse.</li> </ul>"},{"location":"premiere/representation_donnees/cours_corr/#bit-de-signe","title":"Bit de signe","text":"<p>Le signe \\(s\\) est cod\u00e9 sur un bit (le bit de poids fort de l\u2019entier de 32 bits ou de 64 bits) : ce bit vaut \\(0\\) si le nombre repr\u00e9sent\u00e9 est positif, et \\(1\\) s'il est n\u00e9gatif.</p>"},{"location":"premiere/representation_donnees/cours_corr/#exposant","title":"Exposant","text":"<p>Pour pouvoir repr\u00e9senter \u00e0 la fois des exposants positifs et n\u00e9gatifs dans la norme IEEE 754, une m\u00e9thode diff\u00e9rente du compl\u00e9ment \u00e0 2 est employ\u00e9e. Cette m\u00e9thode consiste \u00e0 stocker l'exposant sous une forme d\u00e9cal\u00e9e, en tant qu'entier non sign\u00e9. Plus pr\u00e9cis\u00e9ment, l'exposant d\u00e9cal\u00e9, not\u00e9 \\(n\\), est repr\u00e9sent\u00e9 par un entier de 8 bits pouvant prendre des valeurs entre \\(0\\) et \\(255\\) :</p> <ul> <li>dans le format 32 bits, ce d\u00e9calage est de \\(d = +127_{10}\\), ce qui permet de repr\u00e9senter des exposants sign\u00e9s dans l'intervalle \\([-127_{10}, + 128_{10}]\\). Toutefois, les valeurs \\(0_{10}\\) et \\(255_{10}\\) sont r\u00e9serv\u00e9es pour repr\u00e9senter des cas sp\u00e9ciaux, donc les exposants sign\u00e9s r\u00e9ellement utilisables se situent dans l'intervalle \\([-126_{10}, + 127_{10}]\\),</li> <li>dans le format 64 bits, ce d\u00e9calage est de \\(d = +1023_{10}\\), ce qui permet de repr\u00e9senter des exposants sign\u00e9s dans l'intervalle \\([-1023_{10}, + 1024_{10}]\\). Toutefois, les valeurs \\(0_{10}\\) et \\(2047_{10}\\) sont r\u00e9serv\u00e9es pour repr\u00e9senter des cas sp\u00e9ciaux, donc les exposants sign\u00e9s r\u00e9ellement utilisables se situent dans l'intervalle \\([-1022_{10}, + 1023_{10}]\\),</li> <li>de mani\u00e8re g\u00e9n\u00e9rale, pour un exposant stock\u00e9 sur un nombre \\(n\\) de bits, le d\u00e9calage sera de \\(2^{n - 1} - 1\\).</li> </ul>"},{"location":"premiere/representation_donnees/cours_corr/#mantisse","title":"Mantisse","text":"<p>La mantisse \\(m\\) est toujours comprise dans l\u2019intervalle \\([1, 2[\\), et repr\u00e9sente un nombre de la forme \\(1, xx . . . xx\\), c\u2019est-\u00e0-dire un nombre commen\u00e7ant n\u00e9cessairement par le chiffre 1. Par cons\u00e9quent, pour gagner 1 bit de pr\u00e9cision, les 23 bits (en simple pr\u00e9cision) ou 52 bits (en double pr\u00e9cision) d\u00e9di\u00e9s \u00e0 la mantisse sont uniquement utilis\u00e9s pour repr\u00e9senter les chiffres apr\u00e8s la virgule, qu\u2019on appelle la fraction de la mantisse (qu'on notera \\(f\\)).</p> <p>Ainsi, si les 23 bits d\u00e9di\u00e9s \u00e0 la mantisse sont \\(b_1 b_2 . . . b_{23}\\) , alors la mantisse repr\u00e9sente le nombre \\(1 + b_1 \u00d7 2^{\u22121} + b_2 \u00d7 2^{\u22122} + \u00b7 \u00b7 \u00b7 + b_{23} \u00d7 2^{\u221223}\\).</p> <p>Repr\u00e9sentation normalis\u00e9e d'un nombre flottant</p> <p>Ainsi, avec la mantisse sous sa forme normalis\u00e9e, les nombres flottants seront repr\u00e9sent\u00e9s comme suit.</p> <p>Sur 32 bits :</p> <p></p> \\((\u22121)^s \\times 1, f \\times 2^{(e\u2212127)}\\) <p>Sur 64 bits :</p> <p></p> \\((\u22121)^s \\times 1, f \\times 2^{(e\u22121023)}\\) <p>o\u00f9 \\(s\\) est le bit de signe, \\(f\\) est la fraction de la mantisse et \\(e\\) est l'exposant.</p> <p>Conversion binaire (virgule flottante) \u2192 d\u00e9cimal (extrait du Balabonski Premi\u00e8re)</p> <p>Voici un mot de 32 bits et le nombre d\u00e9cimal qu'il repr\u00e9sente.</p> <p></p> <p>Pour voir des exemples suppl\u00e9mentaires : </p> IUT de Reims - Virgule flottante \u2192 d\u00e9cimal"},{"location":"premiere/representation_donnees/cours_corr/#recapitulatif-des-encodages","title":"R\u00e9capitulatif des encodages","text":"exposant (\\(e\\)) fraction (\\(f\\)) valeur \\(32\\) bits 8 bits 23 bits \\((\u22121)^s \u00d7 1, f \u00d7 2^{(e\u2212127)}\\) \\(64\\) bits 11 bits 52 bits \\((\u22121)^s \u00d7 1, f \u00d7 2^{(e\u22121023)}\\) <p>En simple pr\u00e9cision (32 bits), les nombres flottants positifs peuvent repr\u00e9senter les nombres d\u00e9cimaux compris (approximativement) dans l\u2019intervalle \\([10^{\u221238}, 10^{38}]\\).</p> <p>En double pr\u00e9cision (64 bits), cet intervalle est (approximativement) de \\([10^{\u2212308}, 10^{308}]\\).</p> <p>Conversion d\u00e9cimal \u2192 binaire (virgule flottante)</p> <p>On cherche \u00e0 repr\u00e9senter le nombre \\(\u2013 10,125_{10}\\) selon le format IEEE 754 simple pr\u00e9cision.</p> <p>\\(10,125_{10} = 1010,001_{2} = 1,010001_{2} \u00d7 2^3\\).</p> <p>L\u2019exposant \\(e = 3\\) est translat\u00e9 de la valeur \\(+127_{10}\\). \\(e' = e + 127_{10} = 130_{10} = 10000010_2\\).</p> <p>Le signe de la mantisse est n\u00e9gatif et vaut donc 1.</p> <p>Finalement, le codage du nombre \\(- 10,125_{10}\\) donne la cha\u00eene binaire suivante : \\(1~10000010~01000100000000000000000_2 = C1220000_{16}\\)</p> <p>Pour plus de d\u00e9tails sur ce codage et des exemples suppl\u00e9mentaires : </p> IUT de Reims - Codage en virgule flottante"},{"location":"premiere/representation_donnees/cours_corr/#valeurs-speciales","title":"Valeurs sp\u00e9ciales","text":"signe exposant fraction valeur sp\u00e9ciale 0 0 0 \\(+0\\) 1 0 0 \\(-0\\) 0 255 0 \\(+\\infty\\) 1 255 0 \\(-\\infty\\) 0 255 \\(\\ne 0\\) \\(NaN\\)"},{"location":"premiere/representation_donnees/cours_corr/#nombres-denormalises","title":"Nombres d\u00e9normalis\u00e9s","text":"<p>Comme vu pr\u00e9c\u00e9demment, si l\u2019exposant \\(e\\) d\u2019un nombre flottant (sur 32 bits) est compris entre \\(1\\) et \\(254\\), la valeur repr\u00e9sent\u00e9e par l\u2019encodage est :</p> <p></p> \\((\u22121)^s \\times 1, f \\times 2^{(e\u2212127)}\\) <p>Les nombres repr\u00e9sent\u00e9s ainsi sont dits normalis\u00e9s. Avec cet encodage, le plus petit nombre d\u00e9cimal positif repr\u00e9sentable est donc \\(2^{\u2212126}\\) (soit \\(\u223c 10^{\u221238}\\)).</p> <p>\u00c9tant donn\u00e9 que la mantisse est implicitement de la forme \\(1, f\\) , il n\u2019y a pas de nombres repr\u00e9sentables dans l\u2019intervalle \\([0, 2^{\u2212126} [\\), l\u00e0 o\u00f9 il y en a \\(2^{23}\\) dans l\u2019intervalle \\([1 \u00d7 2^{\u2212126} , 2 \\times 2^{\u2212126}]\\) = \\([2^{\u2212126} , 2^{\u2212125}]\\).</p> <p>Afin de pouvoir repr\u00e9senter des tr\u00e8s petits nombres, la norme IEEE 754 permet d\u2019encoder des nombres de la forme suivante, avec une mantisse commen\u00e7ant implicitement par un \\(0\\) au lieu d'un \\(1\\) :</p> <p></p> \\((\u22121)^s \\times 0, f \\times 2^{\u2212126}\\) <p>On appelle ces nombres flottants des nombres d\u00e9normalis\u00e9s, dont :</p> <ul> <li>l'exposant \\(e\\) est \u00e0 \\(0\\),</li> <li>la fraction de la mantisse est diff\u00e9rente de \\(0\\). </li> </ul> <p>La plus petite valeur repr\u00e9sentable avec des nombres d\u00e9normalis\u00e9s est ainsi : \\(2^{\u221223} \u00d7 2^{\u2212126} = 2^{\u2212149}\\) repr\u00e9sent\u00e9e par la cha\u00eene binaire \\(0~00000000~00000000000000000000001_2\\).</p>"},{"location":"premiere/representation_donnees/cours_corr/#exercices","title":"Exercices","text":"<p>Exercice 8</p> <p>Donner la repr\u00e9sentation flottante en simple pr\u00e9cision de \\(128\\) et \\(\u221232,75\\).</p> <p>Exercice 9</p> <p>Donner la valeur d\u00e9cimale des nombres flottants suivants cod\u00e9s en simple pr\u00e9cision :</p> <ul> <li>\\(1~10000011~00110101000000000000000\\)</li> <li>\\(0~10000011~11100000000000000000000\\).</li> </ul> <p>Voici un exemple pour vous aider, trouvons la valeur d\u00e9cimale qui correspond \u00e0 ce nombre binaire :</p> \\[1~01111110~11110000000000000000000\\] <p>Ici :</p> <ul> <li>le bit de signe est \\(s = 1\\) : le signe est donc n\u00e9gatif,</li> <li>l'exposant est $e = 01111110_2 = \\(126_{10}\\), il faut donc soustraire 127 \u00e0 cette valeur pour retrouver la puissance de $2*. \\(126 - 127 = -1\\).</li> <li>La fraction de la mantisse est \\(f = 1111_2\\).</li> </ul> <p>Donc il faut faire le calcul : $(-1)^s \\times </p> <p>Plus d'exercices</p> <p>Vous pouvez \u00e9galement vous entra\u00eener sur les exercices propos\u00e9s par l'IUT de Reims :</p> <ul> <li>D\u00e9cimal \u2192 virgule flottante : exercices \u00e0 la fin de cette page</li> <li>Virgule flottante \u2192 d\u00e9cimal : exercices \u00e0 la fin de cette page</li> </ul>"},{"location":"premiere/representation_donnees/cours_corr/#representation-des-textes","title":"Repr\u00e9sentation des textes","text":"<p>La repr\u00e9sentation des caract\u00e8res dans un ordinateur permet de stocker ou d'\u00e9changer des textes. </p> <p>Th\u00e9oriquement, cela consiste simplement \u00e0 associer un num\u00e9ro unique \u00e0 chaque caract\u00e8re. Toutefois, le choix de la norme d'encodage utilis\u00e9e n\u00e9cessite de respecter certaines contraintes. Tout d\u2019abord, il faut que tous les ordinateurs utilisent le m\u00eame encodage. Ensuite, on doit pouvoir repr\u00e9senter le plus de caract\u00e8res possible, des caract\u00e8res \u00e9ditables comme des lettres majuscules et minuscules, des signes de ponctuation et signes math\u00e9matiques, mais aussi des caract\u00e8res dits \u00ab non imprimables \u00bb, qui peuvent correspondre \u00e0 des actions comme celle permettant de passer \u00e0 la ligne ou d'\u00e9mettre un beep, mais aussi \u00e0 des commandes de protocoles de communication comme accuser r\u00e9ception, d\u00e9but de texte, etc. Par ailleurs, le but est \u00e9galement d'\u00eatre le plus compact possible pour \u00e9conomiser la m\u00e9moire ou le volume des \u00e9changes r\u00e9seaux.</p>"},{"location":"premiere/representation_donnees/cours_corr/#norme-ascii","title":"Norme ASCII","text":"Table ASCII standard <p>Le codage ASCII (American Standard Code for Information Interchange) est un codage \u00e0 7 bits qui permet donc de repr\u00e9senter 128 caract\u00e8res. Chacun des codes associ\u00e9s \u00e0 un caract\u00e8re est donn\u00e9 dans une table \u00e0 deux entr\u00e9es, la premi\u00e8re entr\u00e9e codant la valeur du quartet de poids faible et la seconde entr\u00e9e codant la valeur des 3 bits de poids fort du code associ\u00e9 au caract\u00e8re.</p> <p>Le caract\u00e8re <code>A</code> est cod\u00e9 par la cha\u00eene \\(100~0001_2\\) soit le code hexad\u00e9cimal \\(41_{16}\\).</p> <p>Le code ASCII est notamment tr\u00e8s utilis\u00e9 sur les processeurs de la famille Intel.</p> <p>La table ASCII contient plusieurs cat\u00e9gories de caract\u00e8res :</p> <ul> <li>les lettres de l\u2019alphabet latin en majuscule (entre \\(41\\) et \\(5A\\)) et en minuscule (entre \\(61\\) et \\(7A\\)) ;</li> <li>les chiffres de \\(0\\) \u00e0 \\(9\\) (entre \\(30\\) et \\(39\\)) ;</li> <li>des signes de ponctuations (comme la virgule <code>,</code> qui vaut \\(2C\\)), des parenth\u00e8ses ou des crochets (comme le symbole <code>(</code> qui vaut \\(28\\) ou le crochet ouvrant <code>[</code> qui vaut \\(5B\\)) ;</li> <li>des op\u00e9rateurs arithm\u00e9tiques (comme le signe <code>+</code> qui vaut \\(2B\\)).</li> </ul> <p>La table ASCII contient \u00e9galement des caract\u00e8res sp\u00e9ciaux :</p> <p>Quelques caract\u00e8res sp\u00e9ciaux</p> caract\u00e8re num\u00e9ro signification HT 09 Tabulation horizontale LF 0A Nouvelle ligne VT 0B Tabulation verticale FF 0C Nouvelle page CR 0D Retour chariot SP 20 Espace BS 08 Suppression DEL 7F Effacement <p>Elle contient \u00e9galement des caract\u00e8res de contr\u00f4le non imprimables, par exemple :</p> <p>Quelques caract\u00e8res de contr\u00f4le</p> caract\u00e8re num\u00e9ro signification SOH 01 D\u00e9but d\u2019ent\u00eate STX 02 D\u00e9but de texte ETX 03 Fin de texte EOT 04 Fin de transmission ENQ 05 Demande ACK 06 Accus\u00e9 de r\u00e9ception DC1 11 Contr\u00f4le de p\u00e9riph\u00e9rique 1 BEL 07 Son sur le haut-parleur <p>Bit de parit\u00e9</p> <p>M\u00eame si 7 bits suffisent pour repr\u00e9senter 128 caract\u00e8res (de <code>000 0000</code> \u00e0 <code>111 1111</code>), en pratique chaque caract\u00e8re occupe 1 octet (8 bits) en m\u00e9moire. Le bit de poids fort est utilis\u00e9 pour effectuer une somme de contr\u00f4le afin de d\u00e9tecter d\u2019\u00e9ventuelles erreurs de transmission. L'id\u00e9e est de fixer la valeur de ce bit de mani\u00e8re \u00e0 ce que le nombre de bits \u00e0 <code>1</code> dans l\u2019octet soit toujours pair. C\u2019est la raison pour laquelle on appelle ce bit le bit de parit\u00e9.</p> <p>ASCII et Python</p> <p>La fonction ord de Python renvoie le code ASCII correspondant \u00e0 un caract\u00e8re. L\u2019entier renvoy\u00e9 est en base 10, mais on peut le convertir en hexad\u00e9cimal avec la fonction <code>hex</code>.</p> <pre><code>&gt;&gt;&gt; ord(\u2019A\u2019)\n65\n&gt;&gt;&gt; hex(ord(\u2019A\u2019))\n'0x41'\n</code></pre> <p>Inversement, la fonction chr renvoient le caract\u00e8re correspondant \u00e0 un entier.</p> <pre><code>&gt;&gt;&gt; chr(0x26)\n\u2019&amp;\u2019\n</code></pre> <p>Les caract\u00e8res peuvent \u00e9galement \u00eatre saisis directement par leur code ASCII en utilisant la notation \\xhh, o\u00f9 hh est le code hexad\u00e9cimal du caract\u00e8re.</p> <pre><code>&gt;&gt;&gt; print(\u2019\\x43e\\x63i es\\x74...\u2019)\nCeci est...\n</code></pre> <p>Exercice 10</p> <p>Donner le codage ASCII (en hexad\u00e9cimal et binaire) des deux cha\u00eenes de caract\u00e8res Python ci-dessous :</p> <ul> <li><code>\u2019bonjour tout le monde!\u2019</code></li> <li><code>\u2019\u2019\u2019programmer en Python\u2019\u2019\u2019</code></li> </ul> <p>Exercice 11</p> <p>\u00c9crire une fonction <code>printASCII(s)</code> qui affiche \u00e0 l\u2019\u00e9cran les codes ASCII au format hexad\u00e9cimal d\u2019une cha\u00eene de caract\u00e8res. Utiliser cette fonction pour v\u00e9rifier les r\u00e9ponses \u00e0 l\u2019exercice pr\u00e9c\u00e9dent.</p>"},{"location":"premiere/representation_donnees/cours_corr/#normes-iso-8859","title":"Normes ISO 8859","text":"<p>Les caract\u00e8res imprimables de la table ASCII se sont r\u00e9v\u00e9l\u00e9s rapidement insuffisants pour repr\u00e9senter efficacement des textes dans des langues autres que l'anglais. Cela est particuli\u00e8rement \u00e9vident pour les langues utilisant l'alphabet latin, car la table ASCII ne prend pas en compte de nombreux \u00e9l\u00e9ments tels que les lettres accentu\u00e9es et les symboles de monnaie. Pour r\u00e9soudre cette limitation, l'ISO (Organisation Internationale de Normalisation) a introduit la norme ISO 8859, une extension de l'ASCII qui utilise huit bits par octet pour repr\u00e9senter les caract\u00e8res, permettant ainsi un total de 256 caract\u00e8res encod\u00e9s. Malgr\u00e9 cette expansion, cela reste encore insuffisant pour englober tous les caract\u00e8res utilis\u00e9s dans les langues latines.</p> <p>Afin de maximiser la repr\u00e9sentation des caract\u00e8res, la norme ISO 8859 propose plusieurs tables de correspondance, \u00e9galement appel\u00e9es pages et not\u00e9es ISO-8859-n, o\u00f9 n repr\u00e9sente le num\u00e9ro de la table. Bien que ces tables soient ind\u00e9pendantes les unes des autres, elles ont \u00e9t\u00e9 con\u00e7ues pour \u00eatre compatibles entre elles. Les premiers 128 caract\u00e8res correspondent \u00e0 la norme ASCII, tandis que les 128 suivants sont sp\u00e9cifiques \u00e0 la table n. De plus, les caract\u00e8res identiques ont le m\u00eame code.</p> <p>La norme 8859 inclut un total de seize tables, dont dix sont d\u00e9di\u00e9es aux langues latines. Plut\u00f4t que de les r\u00e9f\u00e9rencer par leur nomenclature ISO, elles sont parfois appel\u00e9es latin-1, latin-2, etc.</p> <p> </p> Tables de la norme 8859"},{"location":"premiere/representation_donnees/cours_corr/#norme-unicode","title":"Norme Unicode","text":"<p>Les pages ISO-8859-n, bien qu'elles permettent un encodage \u00e9tendu, ne conviennent pas pour les textes avec un m\u00e9lange de caract\u00e8res provenant de diff\u00e9rentes pages. Pour rem\u00e9dier \u00e0 cela, l'ISO a introduit l'Universal Character Set (UCS) sous la norme ISO-10646. Cette norme attribue \u00e0 chaque caract\u00e8re un nom unique et un num\u00e9ro appel\u00e9 point de code. Elle recense plus de 110 000 caract\u00e8res et peut contenir ceux de n'importe quelle langue, avec une capacit\u00e9 maximale de 4 294 967 295 caract\u00e8res.</p> <p>Les 256 premiers points de code de l'ISO-8859-1 sont inclus par souci de compatibilit\u00e9. La notation \\(U+xxxx\\) repr\u00e9sente les points de code du jeu universel de caract\u00e8res, o\u00f9 chaque \\(x\\) est un chiffre hexad\u00e9cimal. Par exemple, \\(U+006F\\) d\u00e9signe le point de code de la lettre \"o\".</p> <p>UNICODE reprend le codage ASCII concernant les principaux caract\u00e8res, en \u00e9tendant le code \u00e0 16 bits. Ainsi, le caract\u00e8re <code>A</code> a pour point de code \\(0041_{16}\\).</p> <p>Unicode, cr\u00e9\u00e9 en 1991 et encore en d\u00e9veloppement, comporte d\u00e9j\u00e0 137 374 caract\u00e8res d\u2019une centaine d\u2019\u00e9critures dont les id\u00e9ogrammes, l\u2019alphabet grec etc.</p> <p>La norme Unicode d\u00e9finit plusieurs techniques d'encodage pour repr\u00e9senter les points de code de mani\u00e8re plus ou moins \u00e9conomique, selon la technique choisie. Ces encodages, appel\u00e9s formats de transformation universelle ou Universal Transformation Format (UTF) en anglais, portent les noms UTF-n, o\u00f9 n indique le nombre minimal de bits utilis\u00e9s pour repr\u00e9senter un point de code.</p>"},{"location":"premiere/representation_donnees/cours_corr/#utf-8","title":"UTF-8","text":"<p>C\u2019est le format le plus utilis\u00e9 sous Linux, dans les protocoles r\u00e9seaux et les sites Web. Comme son nom l\u2019indique, il faut seulement 8 bits pour coder les principaux caract\u00e8res. L\u2019UTF-8 est enti\u00e8rement compatible avec le standard ASCII, c\u2019est-\u00e0-dire que les 127 premiers caract\u00e8res sont repr\u00e9sent\u00e9s sur 1 octet, exactement comme en ASCII. Les programmes fonctionnant sur des textes encod\u00e9s en ASCII devraient \u00e9galement fonctionner si ces textes sont encod\u00e9s en UTF-8.</p> <p>L\u2019unicode et en particulier UTF-8 vise \u00e0 :</p> <ul> <li>minimiser l\u2019espace occup\u00e9 par un caract\u00e8re</li> <li>proposer un encodage adaptable \u00e0 tous les caract\u00e8res employ\u00e9s sur terre</li> <li>conserver l\u2019ordre de la table ascii de d\u00e9part</li> </ul> <p>UTF-8 est utilis\u00e9 par 90,5% des sites web en 2017 et dans la majorit\u00e9 des syst\u00e8mes UNIX.</p> <p>Principe de l'encodage UTF-8</p> <p>Le principe de l\u2019encodage UTF-8 est le suivant :</p> <ul> <li>Si le bit de poids fort d\u2019un octet est \u00e0 0, alors il s\u2019agit d\u2019un caract\u00e8re ASCII cod\u00e9 sur les 7 bits restant.</li> <li>Sinon, les premiers bits de poids fort de l\u2019octet indiquent le nombre d\u2019octets utilis\u00e9s pour encoder le caract\u00e8re \u00e0 l\u2019aide d\u2019une s\u00e9quence de bits \u00e0 1 et se terminant par un bit \u00e0 0. Par exemple, si le premier octet commence par \\(110xxxxx\\), cela signifie que le caract\u00e8re est cod\u00e9 par 2 octets puisqu\u2019il commence par une s\u00e9quence de deux bits de poids fort \u00e0 1 suivie d\u2019un 0. De m\u00eame, si le premier octet commence par \\(1110xxxx\\), cela signifie que le caract\u00e8re est cod\u00e9 par 3 octets.</li> <li>Enfin, dans le cas d\u2019un encodage sur \\(k\\) octets, les \\(k \u2212 1\\) octets qui suivent l\u2019octet de poids fort doivent tous \u00eatre de la forme \\(10xxxxxx\\), c\u2019est-\u00e0-dire commencer par deux bits de poids fort valant \\(10\\).</li> </ul> <p>Voici un tableau r\u00e9sumant le principe de l\u2019encodage UTF-8, avec la plage des caract\u00e8res repr\u00e9sentables selon le nombre d\u2019octets utilis\u00e9s.</p> <p> </p> Principe de l'encodage UTF-8 <p>Et voici quelques exemples de repr\u00e9sentations de points de code selon le format UTF-8 :</p> <p> </p> Exemples de repr\u00e9sentations selon UTF-8 <p>Exercice 12</p> <p>Sachant que le point de code du symbole <code>\u00e9</code> est \\(233\\), donner la s\u00e9quence de points de code du mot <code>\u00e9l\u00e9gance</code>, puis les octets en binaire correspondant \u00e0 l\u2019encodage UTF-8 de ce mot.</p> <p>Voici comment proc\u00e9der :</p> <ul> <li>Chercher le point de code de chaque lettre en hexad\u00e9cimal et en binaire.</li> <li>En vous aidant de la table Principe de l'encodage UTF-8 ci-dessus, retrouver l'encodage en UTG-8 de chaque symbole en choisissant le bon nombre d'octets. On rappelle que les symboles pr\u00e9sents dans la table ASCII (comme les lettres de <code>a</code> \u00e0 <code>z</code>) sont cod\u00e9s sur un seul octet, donc avec 7 bits codants.</li> <li>Enfin, \u00e9crire les octets en binaire correspondant \u00e0 l'encodage du mot complet.</li> </ul> <p>Exercice 13</p> <p>Pour chacun des caract\u00e8res suivants, dont le point de code est donn\u00e9 en d\u00e9cimal, donner l\u2019encodage UTF-8 du caract\u00e8re, en donnant les octets en d\u00e9cimal et en hexad\u00e9cimal.</p> <ol> <li>caract\u00e8re <code>A</code> (point de code \\(65\\))</li> <li>caract\u00e8re <code>\u00e8</code> (point de code \\(232\\))</li> <li>caract\u00e8re (\u00e9toile) (point de code \\(8902\\))</li> </ol>"},{"location":"premiere/representation_donnees/exercices/","title":"Exercices et notebooks","text":""},{"location":"premiere/representation_donnees/exercices/#exercices-representation-des-donnees","title":"Exercices - Repr\u00e9sentation des donn\u00e9es","text":"<p>Voici quelques notebooks contenant des exercices relatifs au cours sur la repr\u00e9sentation des donn\u00e9es en machine.</p>"},{"location":"premiere/representation_donnees/exercices/#exercices-dentrainement","title":"Exercices d'entra\u00eenement","text":"<p>Voici quelques exercices basiques sur les conversions de base, la repr\u00e9sentation des entiers naturels (non-sign\u00e9s) et des entiers relatifs (sign\u00e9s).</p> <p>Acc\u00e9der aux notebooks sur Capytale</p> <p>Cliquez sur les liens ci-dessous pour acc\u00e9der aux notebooks d'exercices sur Capytale.</p> <ul> <li>Repr\u00e9sentation binaire d'un entier positif</li> <li>Repr\u00e9sentation binaire d'un entier relatif</li> </ul> <p>D'apr\u00e8s des notebooks propos\u00e9s par Romain PLANCHAIS.</p>"},{"location":"premiere/representation_donnees/exercices/#exercices-de-programmation","title":"Exercices de programmation","text":"<p>Les exercices contenus dans les notebooks suivants consistent en la r\u00e9alisation de diff\u00e9rents programmes Python en lien avec la repr\u00e9sentation des donn\u00e9es en machine.</p> Notebook Description Propos\u00e9 par : Codage binaire - Entiers naturels Exercices Python sur la repr\u00e9sentation des entiers naturels. Jacques CHOUTEAU Codage binaire - Entiers relatifs Exercices Python sur la repr\u00e9sentation des entiers relatifs. Jacques CHOUTEAU Codage binaire - Nombres r\u00e9els Exercices Python sur la repr\u00e9sentation des nombres r\u00e9els. Jacques CHOUTEAU Codage caract\u00e8res - ASCII Exercices Python sur le codage ASCII. Erwan DEMERVILLE"},{"location":"premiere/traitement_donnees/","title":"Traitement des donn\u00e9es en table","text":""},{"location":"premiere/traitement_donnees/#traitement-des-donnees-en-table","title":"Traitement des donn\u00e9es en table","text":"Liste des contenus Description Pr\u00e9liminaire - n-uplets et dictionnaires Pr\u00e9sentation des n-uplets et dictionnaires en Python. Cours - Traitement des donn\u00e9es en table Cours sur le traitement des donn\u00e9es en table. Activit\u00e9 - Le module Pandas D\u00e9couverte du module Pandas."},{"location":"premiere/traitement_donnees/cours/","title":"Cours","text":""},{"location":"premiere/traitement_donnees/cours/#cours-traitement-des-donnees-en-tables","title":"Cours - Traitement des donn\u00e9es en tables","text":"<p>L'informatique est souvent utilis\u00e9e pour le traitement de quantit\u00e9s importantes de donn\u00e9es dans de nombreux domaines tels que :</p> <ul> <li>La gestion de donn\u00e9es de sites web. (Exemple : Donn\u00e9es utilisateurs sur un r\u00e9seau social.)</li> <li>La Data Science (science des donn\u00e9es) : Extraire des connaissances \u00e0 partir de donn\u00e9es massives.</li> <li>La finance, les assurances, l'\u00e9pid\u00e9miologie, etc.</li> </ul> <p>En Terminale est \u00e9tudi\u00e9e la notion de base de donn\u00e9es. Pour pr\u00e9parer les \u00e9l\u00e8ves, on \u00e9tudie en Premi\u00e8re le traitement de donn\u00e9es organis\u00e9es sous forme de tables (= listes de p-uplets nomm\u00e9s).</p>"},{"location":"premiere/traitement_donnees/cours/#presentation-des-tables-de-donnees","title":"Pr\u00e9sentation des tables de donn\u00e9es","text":"<p>Les donn\u00e9es repr\u00e9sent\u00e9es en tables se pr\u00e9sentent ainsi (image issue de info.blaisepascal.fr):</p> <p></p>"},{"location":"premiere/traitement_donnees/cours/#le-format-csv","title":"Le format CSV","text":"<p>Un fichier texte CSV:</p> <ul> <li>Permet de repr\u00e9senter des donn\u00e9es structur\u00e9es.</li> <li>Est couramment utilis\u00e9 pour importer ou exporter des donn\u00e9es d'une feuille de calcul.</li> <li>Chaque ligne correspond \u00e0 une ligne du tableau.</li> <li>Chaque colonne est s\u00e9par\u00e9e par un s\u00e9parateur, ou d\u00e9limiteur (souvent une virgule ou un point-virgule)</li> </ul> <p>La feuille de calcul suivante :</p> <p></p> <p>... donne un fichier CSV contenant :</p> <pre><code>Nom,Prenom,Age,Date naissance\nDemerville,Erwan,26,03/05/95\nDupont,Michel,42,19/09/86\nDufoux,Alex,21,05/07/65\n</code></pre> <p>Chaque ligne correspond \u00e0 un enregistrement (= structure de donn\u00e9es \u00e9ventuellement diff\u00e9rentes). La premi\u00e8re ligne d\u00e9finit les descripteurs (\u00e9galement appel\u00e9s attributs, cl\u00e9s, champs).</p>"},{"location":"premiere/traitement_donnees/cours/#les-banques-de-donnees","title":"Les banques de donn\u00e9es","text":"<p>Il existe des banques de donn\u00e9es libres contenant des bases de donn\u00e9es que vous pouvez librement t\u00e9l\u00e9charger dans plusieurs formats (CSV, JSON, Excel) et utiliser.</p> <p>Par exemple :</p> <ul> <li>https://data.education.gouv.fr : plateforme mise en place par le gouvernement et contenant de nombreuses donn\u00e9es du minist\u00e8re de l'\u00e9ducation nationale,</li> <li>https://www.data.gouv.fr/fr/ : d'autres donn\u00e9es libres propos\u00e9es par le gouvernement (donn\u00e9es g\u00e9ographiques, agriculture, \u00e9nergies...)</li> <li>https://donnees.banquemondiale.org/ : donn\u00e9es de la banque mondiale,</li> <li>etc. Il en existe plein d'autres, pas uniquement francophones.</li> </ul>"},{"location":"premiere/traitement_donnees/cours/#tables-de-donnees-en-python","title":"Tables de donn\u00e9es en Python","text":""},{"location":"premiere/traitement_donnees/cours/#implementation-en-python","title":"Impl\u00e9mentation en Python","text":"<p>En Python, il y a plusieurs fa\u00e7ons de repr\u00e9senter une table de donn\u00e9es :</p> <ul> <li>en utilisant un tableau de n-uplets repr\u00e9sent\u00e9 en Python par une liste de tuples,</li> <li>en utilisant un tableau de tableaux, repr\u00e9sent\u00e9 en Python par une liste de listes,</li> <li>en utilisant un tableau de n-uplets nomm\u00e9s, repr\u00e9sent\u00e9 en Python par une liste de dictionnaires.</li> </ul> <p>La feuille de calcul pr\u00e9c\u00e9dente :</p> <p></p> <p>... pourra donc \u00eatre impl\u00e9ment\u00e9e de la mani\u00e8re suivante :</p> <pre><code>table = \\\n[('Demerville', 'Erwan', '26', '03/05/95'),\n('Dupont', 'Michel', '42', '19/09/86'),\n('Dufoux', 'Alex', '21', '05/07/65')]\n</code></pre> <p>ou de la mani\u00e8re suivante :</p> <pre><code>table = \\\n[['Nom', 'Prenom', 'Age', 'Date naissance'],\n['Demerville', 'Erwan', '26', '03/05/95'],\n['Dupont', 'Michel', '42', '19/09/86'],\n['Dufoux', 'Alex', '21', '05/07/65']]\n</code></pre> <p>ou encore :</p> <pre><code>table = \\\n[{'Nom': 'Demerville', 'Prenom': 'Erwan', 'Age': '26', 'Date naissance': '03/05/95'},\n{'Nom': 'Dupont', 'Prenom': 'Michel', 'Age': '42', 'Date naissance': '19/09/86'},\n{'Nom': 'Dufoux', 'Prenom': 'Alex', 'Age': '21', 'Date naissance': '05/07/65'}]\n</code></pre> <p>Dans notre cas, on privil\u00e9giera plut\u00f4t cette derni\u00e8re impl\u00e9mentation, sous la forme d'une liste de dictionnaires, qui pr\u00e9sente l'avantage d'\u00eatre plus ais\u00e9ment manipulable.</p>"},{"location":"premiere/traitement_donnees/cours/#importer-un-fichier-txt-csv","title":"Importer un fichier TXT / CSV :","text":"<p>On peut r\u00e9cup\u00e9rer les donn\u00e9es d'un fichier avec les fonctions de base de Python.</p> <p>Pour cela, on va utiliser la fonction <code>open</code> pour ouvrir un fichier et les fonctions <code>readlines</code> et <code>readline</code> afin d'en r\u00e9cup\u00e9rer le contenu.</p> <p>\u00c0 faire 1</p> <p>Voici un fichier <code>lire_ecrire.py</code> contenant une fonction <code>lire_fichier</code> permettant de lire une table de donn\u00e9es (en <code>.csv</code> ou <code>.txt</code>) et qui renvoie une liste de dictionnaires, et un fichier <code>ecrire_fichier</code> qui cr\u00e9e un fichier \u00e0 partir d'une table de donn\u00e9es.</p> <p></p>  T\u00e9l\u00e9charger le fichier <code>lire_ecrire.py</code> <p>Ouvrez ce fichier dans Thonny.</p> <p>En reprenant le CSV pr\u00e9c\u00e9dent :</p> <pre><code>Nom,Prenom,Age,Date naissance\nDemerville,Erwan,26,03/05/95\nDupont,Michel,42,19/09/86\nDufoux,Alex,21,05/07/65\n</code></pre> <p>Si on fait appel \u00e0 notre fonction lire_fichier en sp\u00e9cifiant le nom du fichier et \u00e9ventuellement un d\u00e9limiteur, on obtient donc :</p> <pre><code>table = lire_fichier(\"exemple.csv\")\ntable\n\n[{'Nom': 'Demerville',\n  'Prenom': 'Erwan',\n  'Age': '28',\n  'Date naissance': '03/05/95'},\n {'Nom': 'Dupont',\n  'Prenom': 'Michel',\n  'Age': '44',\n  'Date naissance': '19/09/86'},\n {'Nom': 'Dufoux',\n  'Prenom': 'Alex',\n  'Age': '23',\n  'Date naissance': '05/07/65'}]\n</code></pre> <p>Le param\u00e8tre <code>delimiteur</code> de la fonction <code>lire_fichier</code> est par d\u00e9faut d\u00e9fini \u00e0 une virgule. Il n'y a donc pas besoin d'indiquer de d\u00e9limiteur lors de l'appel \u00e0 <code>lire_fichier</code> si l'on souhaite utiliser la virgule. Il faut toutefois l'indiquer pour tout autre d\u00e9limiteur, par exemple si le d\u00e9limiteur est un point-virgule, l'appel sera du type <code>lire_fichier(\"nom_fichier.csv\", \";\")</code>.</p> <p>Note : Les donn\u00e9es sont toutes enregistr\u00e9es en cha\u00eenes de caract\u00e8res. On peut utiliser des fonctions comme int(), float() ou encore eval() pour convertir les donn\u00e9es.</p> <p>\u00c0 faire 2</p> <p>T\u00e9l\u00e9chargez le fichier <code>exemple.csv</code> contenant les enregistrements de l'exemple pr\u00e9c\u00e9dent :</p> <p></p>  T\u00e9l\u00e9charger le fichier <code>exemple.csv</code> <p>Tout en bas du fichier <code>lire_ecrire.py</code>, \u00e9crire un programme pour :</p> <ol> <li>Lire le fichier CSV avec la fonction <code>lire_fichier</code> du fichier lire_ecrire.py et stocker le r\u00e9sultat dans une variable.</li> <li>Votre variable contient donc une liste de dictionnaires. Rajoutez un nouvel enregistrement contenant votre nom, pr\u00e9nom, \u00e2ge et date de naissance.</li> <li>R\u00e9-\u00e9crivez \u00e0 pr\u00e9sent un nouveau fichier CSV nomm\u00e9 <code>nouveau.csv</code> \u00e0 l'aide de la fonction <code>ecrire_fichier</code>.</li> <li>Ouvrez votre nouveau CSV sur LibreOffice Calc ou Excel, et observez le r\u00e9sultat.</li> </ol>"},{"location":"premiere/traitement_donnees/cours/#interroger-les-bases-de-donnees","title":"Interroger les bases de donn\u00e9es","text":"<p>Pour cette partie, on travaillera avec la base de donn\u00e9es des \"Effectifs dans les enseignements de sp\u00e9cialit\u00e9s en Terminale g\u00e9n\u00e9rale par sp\u00e9cialit\u00e9s et selon les principales doublettes\", propos\u00e9e par data.education.gouv.fr.</p> <p></p>  T\u00e9l\u00e9charger <code>fr-en-effectifs-specialites-doublettes-terminale-generale.csv</code> <p>Ce fichier CSV utilise le point-virgule comme d\u00e9limiteur. Il ne faudra pas se tromper de d\u00e9limiteur lorsque l'on lira le fichier.</p> <p>Ouvrons d'abord ce fichier avec LibreOffice Calc pour visuellement son contenu. Il ne faut pas oublier de cocher le point-virgule commme s\u00e9parateur.</p> <p></p> <p>Le module csv</p> <p>Pour cette partie, plut\u00f4t que d'utiliser les fonctions d\u00e9finies dans <code>lire_ecrire.py</code>, nous utiliserons le module <code>csv</code> qui permet de faciliter la lecture et l'\u00e9criture de fichiers CSV.</p> <p>Ce module est natif, vous n'avez donc pas besoin de l'installer.</p> <p>\u00c0 faire avant les exercices qui suivent</p> <p>Si vous ne l'avez pas fait, t\u00e9l\u00e9chargez le fichier fr-en-effectifs-specialites-doublettes-terminale-generale.csv.</p> <p>T\u00e9l\u00e9chargez \u00e9galement le script Python suivant, et mettez le dans le m\u00eame dossier que le fichier <code>csv</code> pr\u00e9c\u00e9dent :</p> <p></p>  T\u00e9l\u00e9charger <code>manipulation_tables.py</code> <p>Ce script contient :</p> <ul> <li>une fonction <code>lire_csv(fichier, delim)</code> qui permet de lire un fichier CSV, et renvoie la table contenue sous la forme d'une liste de dictionnaires. Ses deux param\u00e8tres sont par d\u00e9faut initialis\u00e9s ainsi :<ul> <li><code>fichier</code>, le chemin du fichier \u00e0 lire, prend la valeur de la variable globale <code>FICHIER_ENTREE</code>,</li> <li><code>delim</code>, qui correspond au d\u00e9limiteur \u00e0 utiliser, est initialis\u00e9 \u00e0 <code>;</code>. Ainsi, on a pas besoin, lors de l'appel \u00e0 <code>lire_csv</code>, de fournir un chemin de fichier et un d\u00e9limiteur si l'on souhaite utiliser les valeurs par d\u00e9faut.</li> </ul> </li> <li>une fonction <code>creer_csv(table, fichier, delim, ordre)</code> qui permet de cr\u00e9er un fichier CSV \u00e0 partir d'une table sous la forme d'une liste de dictionnaires. Ses trois param\u00e8tres sont :<ul> <li><code>table</code>, une liste de dictionnaires repr\u00e9sentant la table que l'on souhaite enregistrer, </li> <li><code>fichier</code>, le chemin du fichier \u00e0 cr\u00e9er ou \u00e0 remplacer, initialis\u00e9 \u00e0 <code>FICHIER_SORTIE</code>,</li> <li><code>delim</code>, qui correspond au d\u00e9limiteur \u00e0 utiliser, initialis\u00e9 \u00e0 <code>;</code>,</li> <li><code>ordre</code>, initialis\u00e9 \u00e0 <code>None</code>, permettant si on le souhaite de d\u00e9finir l'ordre des attributs de la table.</li> </ul> </li> </ul> <p>Exercice 1 - Cr\u00e9er un fichier CSV</p> <p>Compl\u00e9ter la fonction <code>creer_table_classe</code> qui consiste \u00e0 cr\u00e9er une table dans un fichier CSV contenant le nom, pr\u00e9nom, l'\u00e2ge et la classe de chaque \u00e9l\u00e8ve d'une classe fictive de premi\u00e8re NSI.</p> <p>Vous utiliserez la table de donn\u00e9ees suivante (liste de dictionnaires) :</p> <pre><code>classe = [{\"nom\": \"Lizotte\", \"prenom\": \"Emma\", \"age\": \"15\", \"classe\": \"1G2\"},\n          {\"nom\": \"Aubert\", \"prenom\": \"Luc\", \"age\": \"16\", \"classe\": \"1G1\"},\n          {\"nom\": \"Rousset\", \"prenom\": \"Th\u00e9o\", \"age\": \"15\", \"classe\": \"1G1\"},\n          {\"nom\": \"Dubois\", \"prenom\": \"Maxime\", \"age\": \"16\", \"classe\": \"1G3\"},\n          {\"nom\": \"Levasseur\", \"prenom\": \"Maria\", \"age\": \"15\", \"classe\": \"1G2\"},\n          {\"nom\": \"Chabrier\", \"prenom\": \"Pierre\", \"age\": \"15\", \"classe\": \"1G1\"},\n          {\"nom\": \"Levy\", \"prenom\": \"Sylvain\", \"age\": \"16\", \"classe\": \"1G3\"},\n          {\"nom\": \"Robin\", \"prenom\": \"Thomas\", \"age\": \"16\", \"classe\": \"1G4\"},\n          {\"nom\": \"Cornemuse\", \"prenom\": \"Carla\", \"age\": \"16\", \"classe\": \"1G2\"},\n          {\"nom\": \"Gomme\", \"prenom\": \"Mathieu\", \"age\": \"16\", \"classe\": \"1G4\"},\n          {\"nom\": \"Bornil\", \"prenom\": \"Rapha\u00ebl\", \"age\": \"15\", \"classe\": \"1G2\"},\n          {\"nom\": \"Marnier\", \"prenom\": \"Alexandre\", \"age\": \"16\", \"classe\": \"1G1\"},\n          {\"nom\": \"Soubois\", \"prenom\": \"Lucie\", \"age\": \"15\", \"classe\": \"1G4\"}]\n</code></pre> <p>Vous devrez donc, dans la fonction, appeler <code>creer_csv</code> en lui donnant en entr\u00e9e cette liste de dictionnaires. Le fichier CSV de sortie sera par d\u00e9faut celui contenu dans <code>FICHIER_SORTIE</code> (initialement <code>'mon_fichier.csv'</code>), que vous pouvez changer si vous le souhaitez.</p> <p>Exercice 2 - Lister les colonnes</p> <p>Compl\u00e9tez la fonction <code>lister_colonnes</code> qui prend une table (liste de dictionnaires) en entr\u00e9e et renvoie une liste des attributs de la table.</p> <p>Dans le bloc <code>if __name__ == '__main__'</code>, cr\u00e9ez une variable <code>table</code> dans laquelle vous stockerez une table de donn\u00e9es r\u00e9cup\u00e9r\u00e9e \u00e0 partir d'un fichier CSV de votre choix. Ajoutez les instructions permettant d'afficher sur une ligne diff\u00e9rente chaque attribut de la <code>table</code>, en appelant votre fonction <code>lister_colonnes</code>.</p> <p>Pour les exercices suivants, on travaillera avec notre fichier <code>fr-en-effectifs-specialites-doublettes-terminale-generale.csv</code>.</p> <p>Vous pouvez donc d\u00e9j\u00e0, dans un premier temps, vous assurer que <code>FICHIER_ENTREE = 'fr-en-effectifs-specialites-doublettes-terminale-generale.csv'</code> et ajouter l'instruction suivante au d\u00e9but du bloc <code>if __name__ == '__main__'</code> en bas du script :</p> <pre><code>table = lire_csv()\n</code></pre> <p>Cela permettra de lire le fichier <code>fr-en-effectifs-specialites-doublettes-terminale-generale.csv</code> et de r\u00e9cup\u00e9rer la table sous la forme d'une liste de dictionnaires dans la variable <code>table</code>.</p> <p>Exercice 3</p> <p>Compl\u00e9tez les fonctions <code>chercher_academie</code>, <code>effectif_total_terminale</code>, <code>effectif_total_eleves_nsi</code>, <code>compter_lycees_generaux</code>, <code>moyenne_garcons_nsi</code> et <code>lycees_academie</code>. Lisez bien les docstrings pour comprendre ce que doit faire chaque fonction.</p>"},{"location":"premiere/traitement_donnees/cours/#trier-une-table-de-donnees","title":"Trier une table de donn\u00e9es","text":"<p>Une autre op\u00e9ration courante sur les tables de donn\u00e9es consiste \u00e0 trier une table en fonction d'une cl\u00e9 donn\u00e9e.</p> <p>Si l'on essaie de trier une liste de dictionnaires avec la fonction native de Python <code>sorted</code>, voici ce qu'il se passe :</p> <pre><code>&gt;&gt;&gt; table = lire_csv()\n&gt;&gt;&gt; sorted(table)\nTraceback (most recent call last):\n  File \"/home/erwan/Documents/Gits/erwandemervillefr/git_nsi/docs/premiere/traitement_donnees/src/manipulation_tables.py\", line 111, in &lt;module&gt;\n    sorted(table)\nTypeError: '&lt;' not supported between instances of 'dict' and 'dict'\n</code></pre> <p>En effet, on ne peut pas comparer directement deux dictionnaires.</p> <p>Pour utiliser la fonction <code>sorted</code> sur notre tableau de dictionnaires, il faut indiquer comment se ramener \u00e0 des valeurs que Python sait comparer (nombres, cha\u00eenes de caract\u00e8res, n-uplets). Pour cela, on commence par d\u00e9finir une fonction qui prend en argument un enresgistrement de la table (donc un dictionnaire) et renvoie la valeur que l\u2019on souhaite comparer. Par exemple, si l'on travaille avec notre table des effectifs d'\u00e9l\u00e8ves en enseignements de sp\u00e9cialit\u00e9, et qu'on souhaite trier les enregistrements par rapport \u00e0 la colonne <code>\"PATRONYME\"</code>, on cr\u00e9era d'abord une fonction :</p> <pre><code>def patronyme(e):\n    ''' Prend une entr\u00e9e sur un lyc\u00e9e de la table et renvoie le patronyme du lyc\u00e9e.\n    :param e: (dict) un dictionnaire contenant les infos sur un lyc\u00e9e \n    :return: (str) le patronyme du lyc\u00e9e '''\n\n    return e[\"PATRONYME\"]\n</code></pre> <p>Ensuite, pour trier notre table par rapport au patronyme, et stocker le r\u00e9sultat dans une variable <code>nouvelle_table</code>, il ne restera plus qu'\u00e0 faire :</p> <pre><code>nouvelle_table = sorted(table, key=patronyme)\n</code></pre> <p>Le param\u00e8tre <code>key</code> prend la fonction <code>patronyme</code> que l'on a cr\u00e9\u00e9 ci-dessus. On peut \u00e9galement ajouter un param\u00e8tre <code>reverse</code> si l'on souhaite trier dans l'ordre inverse :</p> <pre><code>nouvelle_table = sorted(table, key=patronyme, reverse=True)\n</code></pre> <p>\u00c0 noter qu'il est \u00e9galement possible, plut\u00f4t que de cr\u00e9er une nouvelle table tri\u00e9e, de modifier directement la table de donn\u00e9es initiale. Pour cela, on aurait utiliser la m\u00e9thode <code>sort</code>, comme ceci :</p> <pre><code>table.sort(table, key=patronyme)\n</code></pre> <p>On peut \u00e9galement trier une liste de dictionnaires par rapport \u00e0 deux cl\u00e9s.</p> <p>Pour cela, la fonction que l'on donnera comme <code>key</code> de la fonction <code>sorted</code> renverra un tuple de deux \u00e9l\u00e9ments. Par exemple, si l'on souhaite trier les enregistrements de notre table d'effectifs d'\u00e9l\u00e8ves en terminale g\u00e9n\u00e9rale selon le <code>\"DEPARTEMENT\"</code> ET la <code>\"COMMUNE\"</code>, on \u00e9crira une fonction :</p> <pre><code>def departement_puis_commune(e):\n    ''' Prend une entr\u00e9e sur un lyc\u00e9e de la table et renvoie un tuple contenant le d\u00e9partement et la commune.\n    :param e: (dict) un dictionnaire contenant les infos sur un lyc\u00e9e \n    :return: (tuple of str) un tuple contenant le d\u00e9partement et la commune '''\n\n    return e[\"DEPARTEMENT\"], e[\"COMMUNE\"]\n</code></pre> <p>Ainsi, pour r\u00e9cup\u00e9rer les enregistrements tri\u00e9s dans une variable <code>nouvelle_table</code> :</p> <pre><code>nouvelle_table = sorted(table, key=departement_puis_commune)\n</code></pre> <p>Pour \u00eatre plus pr\u00e9cis, le tri va ici se faire d'abord par rapport au d\u00e9partement, puis, si plusieurs lyc\u00e9es sont dans le m\u00eame d\u00e9partement, le tri se fera alors par rapport \u00e0 la commune.</p> <p>Exercice 4</p> <p>Compl\u00e9tez les fonctions <code>trier_selon_patronyme</code>, <code>trier_selon_effectif</code> et <code>trier_selon_academie_et_effectif</code> de <code>manipulation_tables.py</code>. Vous pourrez utiliser la fonction native <code>sorted</code> de Python.</p> <p>\u00c0 noter qu'il est possible de d\u00e9finir une fonction \u00e0 l'int\u00e9rieur d'une fonction. Si vous avez besoin par exemple de cr\u00e9er une fonction permettant de comparer l'\u00e9l\u00e9ment souhait\u00e9 d'un dictionnaire, vous pourrez proc\u00e9der ainsi.</p>"},{"location":"premiere/traitement_donnees/cours/#fusion-de-tables","title":"Fusion de tables","text":"<p>Exercice 5</p> <p>Compl\u00e9tez la fonction <code>fusionner_deux_tables</code> de <code>manipulation_tables.py</code>.</p> <p>La fonction pr\u00e9c\u00e9dente fonctionne si l'on fusionne deux tables avec exactement les m\u00eames colonnes (les m\u00eames attributs, dans le m\u00eame ordre).</p> <p>Si deux tables ont des colonnes en commun et d'autres colonnes qui diff\u00e8rent, et que l'on souhaite fusionner leur contenu, il faut alors d\u00e9finir leur \u00ab domaine de valeur \u00bb, c\u2019est-\u00e0-dire quels sont les \u00ab champs \u00bb (ou colonnes) communs aux deux tables.</p> <p>Voici un exemple avec deux tables que l'on souhaite fusionner :</p> <pre><code>table1 = [{\"nom\":\"Duchmol\",\"prenom\":\"Jean\",\"moyenne\":12},{\"nom\":\"Martin\",\"prenom\":\"Lise\",\"moyenne\":14}]\ntable2 = [{\"nom\":\"Duchmol\",\"prenom\":\"Jean\",\"classe\":\"3A\"},{\"nom\":\"Martin\",\"prenom\":\"Lise\",\"classe\":\"5B\"}]\n</code></pre> <p>On dispose de ces deux tables qui contiennent toutes les deux une colonne nom et une colonne prenom. La diff\u00e9rence est que la premi\u00e8re table contient une colonne moyenne tandis que la deuxi\u00e8me table contient une colonne classe. On aimerait cr\u00e9er une nouvelle table contenant le nom, le pr\u00e9nom, la moyenne et la classe de chaque \u00e9l\u00e8ve, c'est-\u00e0-dire :</p> <pre><code>[{'nom': 'Duchmol', 'prenom': 'Jean', 'moyenne': 12, 'classe': '3A'}, {'nom': 'Martin', 'prenom': 'Lise', 'moyenne': 14, 'classe': '5B'}]\n</code></pre> <p>Exercice 6</p> <p>Compl\u00e9tez les <code>...</code> de la fonction \u00e0 trous suivante :</p> <p></p>### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder def fusionner(table1, table2):bksl-nl    ''' Effectue la fusion de deux tables de donn\u00e9es qui poss\u00e8dent desbksl-nl    colonnes en commun et des colonnes qui diff\u00e8rent.bksl-nl    :param table1: (list of dicts) une table de donn\u00e9esbksl-nl    :param table2: (list of dicts) une autre table de donn\u00e9esbksl-nl    :return: (list of dicts) une nouvelle table de donn\u00e9es qui r\u00e9sulte de la fusion '''bksl-nlbksl-nl    # on copie la table1 avec la m\u00e9thode par compr\u00e9hensionbksl-nl    nouvellepy-undtable = [{cle: valeur for cle, valeur in e.items()} for e in table1]bksl-nlbksl-nl    for i in range(...):  # on parcourt la table2 par indicebksl-nl        for cle, val in table2[i].items():  # pour chaque enregistrement (chaque dictionnaire) de la table2bksl-nl            if ... in table1[i]:  # si la cl\u00e9 \u00e9tait d\u00e9j\u00e0 pr\u00e9sente dans la table1bksl-nl                if val != table1[...][...]:  # si la valeur est diff\u00e9rente de celle de la table 1bksl-nl                    ... = val  # on remplace l'ancienne valeur par la nouvellebksl-nl            else:  # si la cl\u00e9 n'\u00e9tait pas pr\u00e9sente dans la table1bksl-nl                ...  # on ajoute la nouvelle cl\u00e9 en l'associant \u00e0 la valeur valbksl-nl    return nouvellepy-undtable  # on renvoie la nouvelle tablebksl-nlbksl-nl# Test de la fonction fusionnerbksl-nltable1 = [{\"nom\":\"Duchmol\",\"prenom\":\"Jean\",\"moyenne\":12}, {\"nom\":\"Martin\",\"prenom\":\"Lise\",\"moyenne\":14}]bksl-nltable2 = [{\"nom\":\"Duchmol\",\"prenom\":\"Jean\",\"classe\":\"3A\"}, {\"nom\":\"Martin\",\"prenom\":\"Lise\",\"classe\":\"5B\"}]bksl-nlbksl-nlprint(fusionner(table1, table2))bksl-nldef fusionner(table1, table2):bksl-nl    ''' Effectue la fusion de deux tables de donn\u00e9es qui poss\u00e8dent desbksl-nl    colonnes en commun et des colonnes qui diff\u00e8rent.bksl-nl    :param table1: (list of dicts) une table de donn\u00e9esbksl-nl    :param table2: (list of dicts) une autre table de donn\u00e9esbksl-nl    :return: (list of dicts) une nouvelle table de donn\u00e9es qui r\u00e9sulte de la fusion '''bksl-nlbksl-nl    # on copie la table1 avec la m\u00e9thode par compr\u00e9hensionbksl-nl    nouvellepy-undtable = [{cle: valeur for cle, valeur in e.items()} for e in table1]bksl-nlbksl-nl    for i in range(len(table2)):  # on parcourt la table2bksl-nl        for cle, val in table2[i].items():  # pour chaque enregistrement (chaque dictionnaire) de la table2bksl-nl            if cle in table1[i]:  # si la cl\u00e9 \u00e9tait d\u00e9j\u00e0 pr\u00e9sente dans la table1bksl-nl                if val != table1[i][cle]:  # si la valeur est diff\u00e9rente de celle de la table 1bksl-nl                    nouvellepy-undtable[i][cle] = val  # on remplace l'ancienne valeur par la nouvellebksl-nl            else:  # si la cl\u00e9 n'\u00e9tait pas pr\u00e9sente dans la table1bksl-nl                nouvellepy-undtable[i][cle] = val  # on ajoute la nouvelle cl\u00e9 en l'associant \u00e0 la valeur valbksl-nl    return nouvellepy-undtable # on renvoie la nouvelle tablebksl-nlbksl-nl# Test de la fonction fusionnerbksl-nltable1 = [{\"nom\":\"Duchmol\",\"prenom\":\"Jean\",\"moyenne\":12}, {\"nom\":\"Martin\",\"prenom\":\"Lise\",\"moyenne\":14}]bksl-nltable2 = [{\"nom\":\"Duchmol\",\"prenom\":\"Jean\",\"classe\":\"3A\"}, {\"nom\":\"Martin\",\"prenom\":\"Lise\",\"classe\":\"5B\"}]bksl-nlbksl-nlprint(fusionner(table1, table2))bksl-nl"},{"location":"premiere/traitement_donnees/cours_corr/","title":"Cours - Traitement des donn\u00e9es en tables","text":""},{"location":"premiere/traitement_donnees/cours_corr/#cours-traitement-des-donnees-en-tables","title":"Cours - Traitement des donn\u00e9es en tables","text":"<p>L'informatique est souvent utilis\u00e9e pour le traitement de quantit\u00e9s importantes de donn\u00e9es dans de nombreux domaines tels que :</p> <ul> <li>La gestion de donn\u00e9es de sites web. (Exemple : Donn\u00e9es utilisateurs sur un r\u00e9seau social.)</li> <li>La Data Science (science des donn\u00e9es) : Extraire des connaissances \u00e0 partir de donn\u00e9es massives.</li> <li>La finance, les assurances, l'\u00e9pid\u00e9miologie, etc.</li> </ul> <p>En Terminale est \u00e9tudi\u00e9e la notion de base de donn\u00e9es. Pour pr\u00e9parer les \u00e9l\u00e8ves, on \u00e9tudie en Premi\u00e8re le traitement de donn\u00e9es organis\u00e9es sous forme de tables (= listes de p-uplets nomm\u00e9s).</p>"},{"location":"premiere/traitement_donnees/cours_corr/#presentation-des-tables-de-donnees","title":"Pr\u00e9sentation des tables de donn\u00e9es","text":"<p>Les donn\u00e9es repr\u00e9sent\u00e9es en tables se pr\u00e9sentent ainsi (image issue de info.blaisepascal.fr):</p> <p></p>"},{"location":"premiere/traitement_donnees/cours_corr/#le-format-csv","title":"Le format CSV","text":"<p>Un fichier texte CSV:</p> <ul> <li>Permet de repr\u00e9senter des donn\u00e9es structur\u00e9es.</li> <li>Est couramment utilis\u00e9 pour importer ou exporter des donn\u00e9es d'une feuille de calcul.</li> <li>Chaque ligne correspond \u00e0 une ligne du tableau.</li> <li>Chaque colonne est s\u00e9par\u00e9e par un s\u00e9parateur, ou d\u00e9limiteur (souvent une virgule ou un point-virgule)</li> </ul> <p>La feuille de calcul suivante :</p> <p></p> <p>... donne un fichier CSV contenant :</p> <pre><code>Nom,Prenom,Age,Date naissance\nDemerville,Erwan,26,03/05/95\nDupont,Michel,42,19/09/86\nDufoux,Alex,21,05/07/65\n</code></pre> <p>Chaque ligne correspond \u00e0 un enregistrement (= structure de donn\u00e9es \u00e9ventuellement diff\u00e9rentes). La premi\u00e8re ligne d\u00e9finit les descripteurs (\u00e9galement appel\u00e9s attributs, cl\u00e9s, champs).</p>"},{"location":"premiere/traitement_donnees/cours_corr/#les-banques-de-donnees","title":"Les banques de donn\u00e9es","text":"<p>Il existe des banques de donn\u00e9es libres contenant des bases de donn\u00e9es que vous pouvez librement t\u00e9l\u00e9charger dans plusieurs formats (CSV, JSON, Excel) et utiliser.</p> <p>Par exemple :</p> <ul> <li>https://data.education.gouv.fr : plateforme mise en place par le gouvernement et contenant de nombreuses donn\u00e9es du minist\u00e8re de l'\u00e9ducation nationale,</li> <li>https://www.data.gouv.fr/fr/ : d'autres donn\u00e9es libres propos\u00e9es par le gouvernement (donn\u00e9es g\u00e9ographiques, agriculture, \u00e9nergies...)</li> <li>https://donnees.banquemondiale.org/ : donn\u00e9es de la banque mondiale,</li> <li>etc. Il en existe plein d'autres, pas uniquement francophones.</li> </ul>"},{"location":"premiere/traitement_donnees/cours_corr/#tables-de-donnees-en-python","title":"Tables de donn\u00e9es en Python","text":""},{"location":"premiere/traitement_donnees/cours_corr/#implementation-en-python","title":"Impl\u00e9mentation en Python","text":"<p>En Python, il y a plusieurs fa\u00e7ons de repr\u00e9senter une table de donn\u00e9es :</p> <ul> <li>en utilisant un tableau de n-uplets repr\u00e9sent\u00e9 en Python par une liste de tuples,</li> <li>en utilisant un tableau de tableaux, repr\u00e9sent\u00e9 en Python par une liste de listes,</li> <li>en utilisant un tableau de n-uplets nomm\u00e9s, repr\u00e9sent\u00e9 en Python par une liste de dictionnaires.</li> </ul> <p>La feuille de calcul pr\u00e9c\u00e9dente :</p> <p></p> <p>... pourra donc \u00eatre impl\u00e9ment\u00e9e de la mani\u00e8re suivante :</p> <pre><code>table = \\\n[('Demerville', 'Erwan', '26', '03/05/95'),\n('Dupont', 'Michel', '42', '19/09/86'),\n('Dufoux', 'Alex', '21', '05/07/65')]\n</code></pre> <p>ou de la mani\u00e8re suivante :</p> <pre><code>table = \\\n[['Nom', 'Prenom', 'Age', 'Date naissance'],\n['Demerville', 'Erwan', '26', '03/05/95'],\n['Dupont', 'Michel', '42', '19/09/86'],\n['Dufoux', 'Alex', '21', '05/07/65']]\n</code></pre> <p>ou encore :</p> <pre><code>table = \\\n[{'Nom': 'Demerville', 'Prenom': 'Erwan', 'Age': '26', 'Date naissance': '03/05/95'},\n{'Nom': 'Dupont', 'Prenom': 'Michel', 'Age': '42', 'Date naissance': '19/09/86'},\n{'Nom': 'Dufoux', 'Prenom': 'Alex', 'Age': '21', 'Date naissance': '05/07/65'}]\n</code></pre> <p>Dans notre cas, on privil\u00e9giera plut\u00f4t cette derni\u00e8re impl\u00e9mentation, sous la forme d'une liste de dictionnaires, qui pr\u00e9sente l'avantage d'\u00eatre plus ais\u00e9ment manipulable.</p>"},{"location":"premiere/traitement_donnees/cours_corr/#importer-un-fichier-txt-csv","title":"Importer un fichier TXT / CSV :","text":"<p>On peut r\u00e9cup\u00e9rer les donn\u00e9es d'un fichier avec les fonctions de base de Python.</p> <p>Pour cela, on va utiliser la fonction <code>open</code> pour ouvrir un fichier et les fonctions <code>readlines</code> et <code>readline</code> afin d'en r\u00e9cup\u00e9rer le contenu.</p> <p>Voici un fichier <code>lire_ecrire.py</code> contenant une fonction <code>lire_fichier</code> permettant de lire une table de donn\u00e9es (en <code>.csv</code> ou <code>.txt</code>) et qui renvoie une liste de dictionnaires, et un fichier <code>ecrire_fichier</code> qui cr\u00e9e un fichier \u00e0 partir d'une table de donn\u00e9es.</p> <p></p>  T\u00e9l\u00e9charger le fichier <code>lire_ecrire.py</code> <p>En reprenant le CSV pr\u00e9c\u00e9dent :</p> <pre><code>Nom,Prenom,Age,Date naissance\nDemerville,Erwan,26,03/05/95\nDupont,Michel,42,19/09/86\nDufoux,Alex,21,05/07/65\n</code></pre> <p>Si on fait appel \u00e0 notre fonction lire_fichier en sp\u00e9cifiant le nom du fichier et \u00e9ventuellement un d\u00e9limiteur, on obtient donc :</p> <pre><code>table = lire_fichier(\"exemple.csv\")\ntable\n\n[{'Nom': 'Demerville',\n  'Prenom': 'Erwan',\n  'Age': '28',\n  'Date naissance': '03/05/95'},\n {'Nom': 'Dupont',\n  'Prenom': 'Michel',\n  'Age': '44',\n  'Date naissance': '19/09/86'},\n {'Nom': 'Dufoux',\n  'Prenom': 'Alex',\n  'Age': '23',\n  'Date naissance': '05/07/65'}]\n</code></pre> <p>Le param\u00e8tre <code>delimiteur</code> de la fonction <code>lire_fichier</code> est par d\u00e9faut d\u00e9fini \u00e0 une virgule. Il n'y a donc pas besoin d'indiquer de d\u00e9limiteur lors de l'appel \u00e0 <code>lire_fichier</code> si l'on souhaite utiliser la virgule. Il faut toutefois l'indiquer pour tout autre d\u00e9limiteur, par exemple si le d\u00e9limiteur est un point-virgule, l'appel sera du type <code>lire_fichier(\"nom_fichier.csv\", \";\")</code>.</p> <p>Note : Les donn\u00e9es sont toutes enregistr\u00e9es en cha\u00eenes de caract\u00e8res. On peut utiliser des fonctions comme int(), float() ou encore eval() pour convertir les donn\u00e9es.</p> <p>\u00c0 faire</p> <p>T\u00e9l\u00e9chargez le fichier <code>exemple.csv</code> contenant les enregistrements de l'exemple pr\u00e9c\u00e9dent :</p> <p></p>  T\u00e9l\u00e9charger le fichier <code>exemple.csv</code> <ol> <li>Lire le fichier CSV avec la fonction <code>lire_fichier</code> du fichier lire_ecrire.py et stocker le r\u00e9sultat dans une variable.</li> <li>Votre variable contient donc une liste de dictionnaires. Rajoutez un nouvel enregistrement contenant votre nom, pr\u00e9nom, \u00e2ge et date de naissance.</li> <li>R\u00e9-\u00e9crivez \u00e0 pr\u00e9sent un nouveau fichier CSV nomm\u00e9 <code>nouveau.csv</code> \u00e0 l'aide de la fonction <code>ecrire_fichier</code>.</li> <li>Ouvrez votre nouveau CSV sur LibreOffice Calc ou Excel, et observez le r\u00e9sultat.</li> </ol>"},{"location":"premiere/traitement_donnees/cours_corr/#interroger-les-bases-de-donnees","title":"Interroger les bases de donn\u00e9es","text":"<p>Pour cette partie, on travaillera avec la base de donn\u00e9es des \"Effectifs dans les enseignements de sp\u00e9cialit\u00e9s en Terminale g\u00e9n\u00e9rale par sp\u00e9cialit\u00e9s et selon les principales doublettes\", propos\u00e9e par data.education.gouv.fr.</p> <p></p>  T\u00e9l\u00e9charger <code>fr-en-effectifs-specialites-doublettes-terminale-generale.csv</code> <p>Ce fichier CSV utilise le point-virgule comme d\u00e9limiteur. Il ne faudra pas se tromper de d\u00e9limiteur lorsque l'on lira le fichier.</p> <p>Ouvrons d'abord ce fichier avec LibreOffice Calc pour visuellement son contenu. Il ne faut pas oublier de cocher le point-virgule commme s\u00e9parateur.</p> <p></p> <p>Le module csv</p> <p>Pour cette partie, plut\u00f4t que d'utiliser les fonctions d\u00e9finies dans <code>lire_ecrire.py</code>, nous utiliserons le module <code>csv</code> qui permet de faciliter la lecture et l'\u00e9criture de fichiers CSV.</p> <p>Ce module est natif, vous n'avez donc pas besoin de l'installer.</p> <p>\u00c0 faire avant les exercices qui suivent</p> <p>Si vous ne l'avez pas fait, t\u00e9l\u00e9chargez le fichier fr-en-effectifs-specialites-doublettes-terminale-generale.csv.</p> <p>T\u00e9l\u00e9chargez \u00e9galement le script Python suivant, et mettez le dans le m\u00eame dossier que le fichier <code>csv</code> pr\u00e9c\u00e9dent :</p> <p></p>  T\u00e9l\u00e9charger <code>manipulation_tables.py</code> <p>Ce script contient :</p> <ul> <li>une fonction <code>lire_csv(fichier, delim)</code> qui permet de lire un fichier CSV, et renvoie la table contenue sous la forme d'une liste de dictionnaires. Ses deux param\u00e8tres sont par d\u00e9faut initialis\u00e9s ainsi :<ul> <li><code>fichier</code>, le chemin du fichier \u00e0 lire, prend la valeur de la variable globale <code>FICHIER_ENTREE</code>,</li> <li><code>delim</code>, qui correspond au d\u00e9limiteur \u00e0 utiliser, est initialis\u00e9 \u00e0 <code>;</code>. Ainsi, on a pas besoin, lors de l'appel \u00e0 <code>lire_csv</code>, de fournir un chemin de fichier et un d\u00e9limiteur si l'on souhaite utiliser les valeurs par d\u00e9faut.</li> </ul> </li> <li>une fonction <code>creer_csv(table, fichier, delim, ordre)</code> qui permet de cr\u00e9er un fichier CSV \u00e0 partir d'une table sous la forme d'une liste de dictionnaires. Ses trois param\u00e8tres sont :<ul> <li><code>table</code>, une liste de dictionnaires repr\u00e9sentant la table que l'on souhaite enregistrer, </li> <li><code>fichier</code>, le chemin du fichier \u00e0 cr\u00e9er ou \u00e0 remplacer, initialis\u00e9 \u00e0 <code>FICHIER_SORTIE</code>,</li> <li><code>delim</code>, qui correspond au d\u00e9limiteur \u00e0 utiliser, initialis\u00e9 \u00e0 <code>;</code>,</li> <li><code>ordre</code>, initialis\u00e9 \u00e0 <code>None</code>, permettant si on le souhaite de d\u00e9finir l'ordre des attributs de la table.</li> </ul> </li> </ul> <p>Correction des exercices</p> <p>Une version corrig\u00e9e du fichier <code>manipulation_tables.py</code>, contenant des explications d\u00e9taill\u00e9es, est disponible :</p> <p></p>  T\u00e9l\u00e9charger <code>manipulation_tables_corr.py</code> <p>Exercice 1 - Cr\u00e9er un fichier CSV</p> <p>Compl\u00e9ter la fonction <code>creer_table_classe</code> qui consiste \u00e0 cr\u00e9er une table dans un fichier CSV contenant le nom, pr\u00e9nom, l'\u00e2ge et la classe de chaque \u00e9l\u00e8ve de premi\u00e8re NSI.</p> <p>Vous devrez donc, dans la fonction, appeler <code>creer_csv</code> en lui donnant en entr\u00e9e la liste de dictionnaires que vous aurez cr\u00e9\u00e9. Le fichier CSV de sortie sera par d\u00e9faut celui contenu dans <code>FICHIER_SORTIE</code> (initialement <code>'mon_fichier.csv'</code>), que vous pouvez changer si vous le souhaitez.</p> <p>Exercice 2 - Lister les colonnes</p> <p>Compl\u00e9tez la fonction <code>lister_colonnes</code> qui prend une table (liste de dictionnaires) en entr\u00e9e et renvoie une liste des attributs de la table.</p> <p>Dans le bloc <code>if __name__ == '__main__'</code>, cr\u00e9ez une variable <code>table</code> dans laquelle vous stockerez une table de donn\u00e9es r\u00e9cup\u00e9r\u00e9e \u00e0 partir d'un fichier CSV de votre choix. Ajoutez les instructions permettant d'afficher sur une ligne diff\u00e9rente chaque attribut de la <code>table</code>, en appelant votre fonction <code>lister_colonnes</code>.</p> <p>Pour les exercices suivants, on travaillera avec notre fichier <code>fr-en-effectifs-specialites-doublettes-terminale-generale.csv</code>.</p> <p>Vous pouvez donc d\u00e9j\u00e0, dans un premier temps, vous assurer que <code>FICHIER_ENTREE = 'fr-en-effectifs-specialites-doublettes-terminale-generale.csv'</code> et ajouter l'instruction suivante au d\u00e9but du bloc <code>if __name__ == '__main__'</code> en bas du script :</p> <pre><code>table = lire_csv()\n</code></pre> <p>Cela permettra de lire le fichier <code>fr-en-effectifs-specialites-doublettes-terminale-generale.csv</code> et de r\u00e9cup\u00e9rer la table sous la forme d'une liste de dictionnaires dans la variable <code>table</code>.</p> <p>Exercice 3</p> <p>Compl\u00e9tez toutes les autres fonctions de <code>manipulation_tables.py</code>. Lisez bien les docstrings pour comprendre ce que doit faire chaque fonction.</p>"},{"location":"premiere/traitement_donnees/cours_corr/#trier-une-table-de-donnees","title":"Trier une table de donn\u00e9es","text":"<p>Une autre op\u00e9ration courante sur les tables de donn\u00e9es consiste \u00e0 trier une table en fonction d'une cl\u00e9 donn\u00e9e.</p> <p>Si l'on essaie de trier une liste de dictionnaires avec la fonction native de Python <code>sorted</code>, voici ce qu'il se passe :</p> <pre><code>&gt;&gt;&gt; table = lire_csv()\n&gt;&gt;&gt; sorted(table)\nTraceback (most recent call last):\n  File \"/home/erwan/Documents/Gits/erwandemervillefr/git_nsi/docs/premiere/traitement_donnees/src/manipulation_tables.py\", line 111, in &lt;module&gt;\n    sorted(table)\nTypeError: '&lt;' not supported between instances of 'dict' and 'dict'\n</code></pre> <p>En effet, on ne peut pas comparer directement deux dictionnaires.</p> <p>Pour utiliser la fonction <code>sorted</code> sur notre tableau de dictionnaires, il faut indiquer comment se ramener \u00e0 des valeurs que Python sait comparer (nombres, cha\u00eenes de caract\u00e8res, n-uplets). Pour cela, on commence par d\u00e9finir une fonction qui prend en argument un enresgistrement de la table (donc un dictionnaire) et renvoie la valeur que l\u2019on souhaite comparer. Par exemple, si l'on travaille avec notre table des effectifs d'\u00e9l\u00e8ves en enseignements de sp\u00e9cialit\u00e9, et qu'on souhaite trier les enregistrements par rapport \u00e0 la colonne <code>\"PATRONYME\"</code>, on cr\u00e9era d'abord une fonction :</p> <pre><code>def patronyme(e):\n    ''' Prend une entr\u00e9e sur un lyc\u00e9e de la table et renvoie le patronyme du lyc\u00e9e.\n    :param e: (dict) un dictionnaire contenant les infos sur un lyc\u00e9e \n    :return: (str) le patronyme du lyc\u00e9e '''\n\n    return e[\"PATRONYME\"]\n</code></pre> <p>Ensuite, pour trier notre table par rapport au patronyme, et stocker le r\u00e9sultat dans une variable <code>nouvelle_table</code>, il ne restera plus qu'\u00e0 faire :</p> <pre><code>nouvelle_table = sorted(table, key=patronyme)\n</code></pre> <p>Le param\u00e8tre <code>key</code> prend la fonction <code>patronyme</code> que l'on a cr\u00e9\u00e9 ci-dessus. On peut \u00e9galement ajouter un param\u00e8tre <code>reverse</code> si l'on souhaite trier dans l'ordre inverse :</p> <pre><code>nouvelle_table = sorted(table, key=patronyme, reverse=True)\n</code></pre> <p>\u00c0 noter qu'il est \u00e9galement possible, plut\u00f4t que de cr\u00e9er une nouvelle table tri\u00e9e, de modifier directement la table de donn\u00e9es initiale. Pour cela, on aurait utiliser la m\u00e9thode <code>sort</code>, comme ceci :</p> <pre><code>table.sort(table, key=patronyme)\n</code></pre> <p>On peut \u00e9galement trier une liste de dictionnaires par rapport \u00e0 deux cl\u00e9s.</p> <p>Pour cela, la fonction que l'on donnera comme <code>key</code> de la fonction <code>sorted</code> renverra un tuple de deux \u00e9l\u00e9ments. Par exemple, si l'on souhaite trier les enregistrements de notre table d'effectifs d'\u00e9l\u00e8ves en terminale g\u00e9n\u00e9rale selon le <code>\"DEPARTEMENT\"</code> ET la <code>\"COMMUNE\"</code>, on \u00e9crira une fonction :</p> <pre><code>def departement_puis_commune(e):\n    ''' Prend une entr\u00e9e sur un lyc\u00e9e de la table et renvoie un tuple contenant le d\u00e9partement et la commune.\n    :param e: (dict) un dictionnaire contenant les infos sur un lyc\u00e9e \n    :return: (tuple of str) un tuple contenant le d\u00e9partement et la commune '''\n\n    return e[\"DEPARTEMENT\"], e[\"COMMUNE\"]\n</code></pre> <p>Ainsi, pour r\u00e9cup\u00e9rer les enregistrements tri\u00e9s dans une variable <code>nouvelle_table</code> :</p> <pre><code>nouvelle_table = sorted(table, key=departement_puis_commune)\n</code></pre> <p>Pour \u00eatre plus pr\u00e9cis, le tri va ici se faire d'abord par rapport au d\u00e9partement, puis, si plusieurs lyc\u00e9es sont dans le m\u00eame d\u00e9partement, le tri se fera alors par rapport \u00e0 la commune.</p> <p>Exercice 4</p> <p>Compl\u00e9tez les fonctions <code>trier_selon_patronyme</code>, <code>trier_selon_effectif</code> et <code>trier_selon_academie_et_effectif</code> de <code>manipulation_tables.py</code>. Vous pourrez utiliser la fonction native <code>sorted</code> de Python.</p> <p>\u00c0 noter qu'il est possible de d\u00e9finir une fonction \u00e0 l'int\u00e9rieur d'une fonction. Si vous avez besoin par exemple de cr\u00e9er une fonction permettant de comparer l'\u00e9l\u00e9ment souhait\u00e9 d'un dictionnaire, vous pourrez proc\u00e9der ainsi.</p>"},{"location":"premiere/traitement_donnees/cours_corr/#fusion-de-tables","title":"Fusion de tables","text":"<p>Exercice 5</p> <p>Compl\u00e9tez la fonction <code>fusionner_deux_tables</code> de <code>manipulation_tables.py</code>.</p> <p>La fonction pr\u00e9c\u00e9dente fonctionne si l'on fusionne deux tables avec exactement les m\u00eames colonnes (les m\u00eames attributs, dans le m\u00eame ordre).</p> <p>Si deux tables ont des colonnes en commun et d'autres colonnes qui diff\u00e8rent, et que l'on souhaite fusionner leur contenu, il faut alors d\u00e9finir leur \u00ab domaine de valeur \u00bb, c\u2019est-\u00e0-dire quels sont les \u00ab champs \u00bb (ou colonnes) communs aux deux tables.</p> <p>Voici un exemple avec deux tables que l'on souhaite fusionner :</p> <pre><code>table1 = [{\"nom\":\"Duchmol\",\"prenom\":\"Jean\",\"moyenne\":12},{\"nom\":\"Martin\",\"prenom\":\"Lise\",\"moyenne\":14}]\ntable2 = [{\"nom\":\"Duchmol\",\"prenom\":\"Jean\",\"classe\":\"3A\"},{\"nom\":\"Martin\",\"prenom\":\"Lise\",\"classe\":\"5B\"}]\n</code></pre> <p>On dispose de ces deux tables qui contiennent toutes les deux une colonne nom et une colonne prenom. La diff\u00e9rence est que la premi\u00e8re table contient une colonne moyenne tandis que la deuxi\u00e8me table contient une colonne classe. On aimerait cr\u00e9er une nouvelle table contenant le nom, le pr\u00e9nom, la moyenne et la classe de chaque \u00e9l\u00e8ve, c'est-\u00e0-dire :</p> <pre><code>[{'nom': 'Duchmol', 'prenom': 'Jean', 'moyenne': 12, 'classe': '3A'}, {'nom': 'Martin', 'prenom': 'Lise', 'moyenne': 14, 'classe': '5B'}]\n</code></pre> <p>Exercice 6</p> <p>Compl\u00e9tez les <code>...</code> de la fonction \u00e0 trous suivante :</p> <p></p>### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder def fusionner(table1, table2):bksl-nl    ''' Effectue la fusion de deux tables de donn\u00e9es qui poss\u00e8dent desbksl-nl    colonnes en commun et des colonnes qui diff\u00e8rent.bksl-nl    :param table1: (list of dicts) une table de donn\u00e9esbksl-nl    :param table2: (list of dicts) une autre table de donn\u00e9esbksl-nl    :return: (list of dicts) une nouvelle table de donn\u00e9es qui r\u00e9sulte de la fusion '''bksl-nlbksl-nl    # on copie la table1 avec la m\u00e9thode par compr\u00e9hensionbksl-nl    nouvellepy-undtable = [{cle: valeur for cle, valeur in e.items()} for e in table1]bksl-nlbksl-nl    for i in range(...):  # on parcourt la table2 par indicebksl-nl        for cle, val in table2[i].items():  # pour chaque enregistrement (chaque dictionnaire) de la table2bksl-nl            if ... in table1[i]:  # si la cl\u00e9 \u00e9tait d\u00e9j\u00e0 pr\u00e9sente dans la table1bksl-nl                if val != table1[...][...]:  # si la valeur est diff\u00e9rente de celle de la table 1bksl-nl                    ... = val  # on remplace l'ancienne valeur par la nouvellebksl-nl            else:  # si la cl\u00e9 n'\u00e9tait pas pr\u00e9sente dans la table1bksl-nl                ...  # on ajoute la nouvelle cl\u00e9 en l'associant \u00e0 la valeur valbksl-nl    return nouvellepy-undtable  # on renvoie la nouvelle tablebksl-nlbksl-nl# Test de la fonction fusionnerbksl-nltable1 = [{\"nom\":\"Duchmol\",\"prenom\":\"Jean\",\"moyenne\":12}, {\"nom\":\"Martin\",\"prenom\":\"Lise\",\"moyenne\":14}]bksl-nltable2 = [{\"nom\":\"Duchmol\",\"prenom\":\"Jean\",\"classe\":\"3A\"}, {\"nom\":\"Martin\",\"prenom\":\"Lise\",\"classe\":\"5B\"}]bksl-nlbksl-nlprint(fusionner(table1, table2))bksl-nldef fusionner(table1, table2):bksl-nl    ''' Effectue la fusion de deux tables de donn\u00e9es qui poss\u00e8dent desbksl-nl    colonnes en commun et des colonnes qui diff\u00e8rent.bksl-nl    :param table1: (list of dicts) une table de donn\u00e9esbksl-nl    :param table2: (list of dicts) une autre table de donn\u00e9esbksl-nl    :return: (list of dicts) une nouvelle table de donn\u00e9es qui r\u00e9sulte de la fusion '''bksl-nlbksl-nl    # on copie la table1 avec la m\u00e9thode par compr\u00e9hensionbksl-nl    nouvellepy-undtable = [{cle: valeur for cle, valeur in e.items()} for e in table1]bksl-nlbksl-nl    for i in range(len(table2)):  # on parcourt la table2bksl-nl        for cle, val in table2[i].items():  # pour chaque enregistrement (chaque dictionnaire) de la table2bksl-nl            if cle in table1[i]:  # si la cl\u00e9 \u00e9tait d\u00e9j\u00e0 pr\u00e9sente dans la table1bksl-nl                if val != table1[i][cle]:  # si la valeur est diff\u00e9rente de celle de la table 1bksl-nl                    nouvellepy-undtable[i][cle] = val  # on remplace l'ancienne valeur par la nouvellebksl-nl            else:  # si la cl\u00e9 n'\u00e9tait pas pr\u00e9sente dans la table1bksl-nl                nouvellepy-undtable[i][cle] = val  # on ajoute la nouvelle cl\u00e9 en l'associant \u00e0 la valeur valbksl-nl    return nouvellepy-undtable # on renvoie la nouvelle tablebksl-nlbksl-nl# Test de la fonction fusionnerbksl-nltable1 = [{\"nom\":\"Duchmol\",\"prenom\":\"Jean\",\"moyenne\":12}, {\"nom\":\"Martin\",\"prenom\":\"Lise\",\"moyenne\":14}]bksl-nltable2 = [{\"nom\":\"Duchmol\",\"prenom\":\"Jean\",\"classe\":\"3A\"}, {\"nom\":\"Martin\",\"prenom\":\"Lise\",\"classe\":\"5B\"}]bksl-nlbksl-nlprint(fusionner(table1, table2))bksl-nl Correction exercice 6 <p></p>### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder def fusionner(table1, table2):bksl-nl    ''' Effectue la fusion de deux tables de donn\u00e9es qui poss\u00e8dent desbksl-nl    colonnes en commun et des colonnes qui diff\u00e8rent.bksl-nl    :param table1: (list of dicts) une table de donn\u00e9esbksl-nl    :param table2: (list of dicts) une autre table de donn\u00e9esbksl-nl    :return: (list of dicts) une nouvelle table de donn\u00e9es qui r\u00e9sulte de la fusion '''bksl-nlbksl-nl    # on copie la table1 avec la m\u00e9thode par compr\u00e9hensionbksl-nl    nouvellepy-undtable = [{cle: valeur for cle, valeur in e.items()} for e in table1]bksl-nlbksl-nl    for i in range(len(table2)):  # on parcourt la table2bksl-nl        for cle, val in table2[i].items():  # pour chaque enregistrement (chaque dictionnaire) de la table2bksl-nl            if cle in table1[i]:  # si la cl\u00e9 \u00e9tait d\u00e9j\u00e0 pr\u00e9sente dans la table1bksl-nl                if val != table1[i][cle]:  # si la valeur est diff\u00e9rente de celle de la table 1bksl-nl                    nouvellepy-undtable[i][cle] = val  # on remplace l'ancienne valeur par la nouvellebksl-nl            else:  # si la cl\u00e9 n'\u00e9tait pas pr\u00e9sente dans la table1bksl-nl                nouvellepy-undtable[i][cle] = val  # on ajoute la nouvelle cl\u00e9 en l'associant \u00e0 la valeur valbksl-nl    return nouvellepy-undtable # on renvoie la nouvelle tablebksl-nlbksl-nl# Test de la fonction fusionnerbksl-nltable1 = [{\"nom\":\"Duchmol\",\"prenom\":\"Jean\",\"moyenne\":12}, {\"nom\":\"Martin\",\"prenom\":\"Lise\",\"moyenne\":14}]bksl-nltable2 = [{\"nom\":\"Duchmol\",\"prenom\":\"Jean\",\"classe\":\"3A\"}, {\"nom\":\"Martin\",\"prenom\":\"Lise\",\"classe\":\"5B\"}]bksl-nlbksl-nlprint(fusionner(table1, table2))bksl-nl"},{"location":"premiere/traitement_donnees/n_uplets_dicos/","title":"n-uplets et dictionnaires","text":""},{"location":"premiere/traitement_donnees/n_uplets_dicos/#preliminaire-les-n-uplets-et-dictionnaires","title":"Pr\u00e9liminaire : Les n-uplets et dictionnaires","text":"<p>Jusqu'\u00e0 maintenant, on a vu comment utiliser les listes Python permettant de stocker des s\u00e9quences d'\u00e9l\u00e9ments (de m\u00eame nature ou non).</p> <p>Imaginons que nous souhaitions \u00e9crire un programme pour d\u00e9terminer quel est le mois de l\u2019ann\u00e9e o\u00f9 le plus d\u2019\u00e9l\u00e8ves du lyc\u00e9e sont n\u00e9s. On suppose donn\u00e9s, pour chaque \u00e9l\u00e8ve, son nom, sous la forme d\u2019une cha\u00eene de caract\u00e8res, et sa date de naissance, sous la forme de trois entiers. \u00c0 l'aide des listes, on pourrait stocker ces informations de la mani\u00e8re suivante :</p> <pre><code>nom = [ \"Alice\", \"Bob\", \"Charles\", \"Delphine\", ... ]\njour = [ 7, 9, 14, 11, ... ]\nmois = [ 1, 12, 12, 1, ... ]\nannee = [ 1941, 1909, 1965, 1938, ... ]\n</code></pre> <p>Mais cette repr\u00e9sentation n'est pas id\u00e9ale. Si par exemple on souhaite trier les individus par ann\u00e9e de naissance, on sera oblig\u00e9 de r\u00e9organiser les \u00e9l\u00e9ments dans les quatre listes, ce qui n'est pas le plus intuitif et le moins co\u00fbteux.</p>"},{"location":"premiere/traitement_donnees/n_uplets_dicos/#les-n-uplets","title":"Les n-uplets","text":"<p>Une premi\u00e8re mani\u00e8re de r\u00e9pondre \u00e0 cette probl\u00e9matique est de cr\u00e9er une liste unique dans lequel chaque \u00e9l\u00e9ment contiendra toutes les informations sur la personne.</p> <p>On pourrait faire ceci en utilisant des listes de listes, ce qui donnerait :</p> <pre><code>individus = [[\"Alice\", 7, 1, 1941], [\"Bob\", 9, 12, 1909], [\"Charles\", 14, 12, 1965], [\"Delphine\", 11, 1, 1938]]\n</code></pre> <p>Mais ce n'est pas l'id\u00e9al non plus car il est pr\u00e9f\u00e9rable qu'une liste Python contienne des \u00e9l\u00e9ments homog\u00e8nes (c'est-\u00e0-dire de m\u00eame type), ce qui n'est pas le cas ici.</p> <p>n-uplets en Python (tuples)</p> <p>Une meilleure solution ici sera donc d'utiliser les n-uplets fournis par Python. Comme en math\u00e9matiques, un n-uplet est un ensemble de valeurs \u00e9crites entre parenth\u00e8ses et s\u00e9par\u00e9es par des virgules. On peut, par exemple, affecter \u00e0 une variable <code>x</code> un quadruplet de la mani\u00e8re suivante :</p> <pre><code>x = (\"Alice\", 7, 1, 1941)\n</code></pre> <p>Op\u00e9rations sur les n-uplets :</p> <p>Les op\u00e9rations sont similaires \u00e0 celles sur les listes :</p> <ul> <li><code>len(x)</code> renvoit la longueur du tuple stock\u00e9 dans <code>x</code>, ici <code>4</code>,</li> <li><code>x[0]</code> renvoit le premier \u00e9l\u00e9ment du tuple stock\u00e9 dans <code>x</code>, ici <code>\"Alice\"</code>,</li> <li>on peut parcourir un tuple avec une boucle :<ul> <li><code>for i in range(len(x))</code> pour parcourir par indice,</li> <li><code>for element in x</code> pour parcourir directement les \u00e9l\u00e9ments.</li> </ul> </li> </ul> <p>Par contre, on ne peut pas modifier un \u00e9l\u00e9ment d'un tuple.</p> <p>Si on essaie, on obtient une erreur de type <code>TypeError</code> (erreur de type) :</p> <pre><code>&gt;&gt;&gt; x[1] = 8\nTraceback (most recent call last):\nFile \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nTypeError: 'tuple' object does not support item assignment\n</code></pre> <p>Ainsi, si on reprend nos donn\u00e9es pr\u00e9c\u00e9dentes, on peut \u00e9crire, en utilisant des tuples :</p> <pre><code>individus = [(\"Alice\", 7, 1, 1941), (\"Bob\", 9, 12, 1909), (\"Charles\", 14, 12, 1965), (\"Delphine\", 11, 1, 1938)]\n</code></pre> <p>On peut maintenant parcourir cette liste de tuples de diff\u00e9rentes mani\u00e8res :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>individus = [(\"Alice\", 7, 1, 1941), (\"Bob\", 9, 12, 1909), (\"Charles\", 14, 12, 1965), (\"Delphine\", 11, 1, 1938)]bksl-nlbksl-nlfor e in individus:bksl-nl    print(f'Nom : {e[0]}, n\u00e9(e) le {e[1]}/{e[2]}/{e[3]}')bksl-nlbksl-nlprint('-----')bksl-nlbksl-nlfor nom, jour, mois, annee in individus:bksl-nl    print(f'Nom : {nom}, n\u00e9(e) le {jour}/{mois}/{annee}')bksl-nlbksl-nl</p>"},{"location":"premiere/traitement_donnees/n_uplets_dicos/#les-dictionnaires","title":"Les dictionnaires","text":"<p>La repr\u00e9sentation pr\u00e9c\u00e9dente n'est tr\u00e8s pratique, car on doit retenir la nature de chaque information.</p> <p>C'est pourquoi, une autre mani\u00e8re de repr\u00e9senter ces donn\u00e9es est d'utiliser des n-uplets nomm\u00e9s, \u00e0 l'aide d'une autre structure de donn\u00e9es du langage Python appel\u00e9 dictionnaire.</p> <p>Un dictionnaire est une structure qui associe des valeurs \u00e0 des cl\u00e9s. Ainsi, le dictionnaire</p> <pre><code>{\"nom\":\"Alice\", \"jour\":7, \"mois\":1, \"annee\":1941}\n</code></pre> <p>contient quatre cl\u00e9s, ici les cha\u00eenes de caract\u00e8res <code>\"nom\"</code>, <code>\"jour\"</code>, <code>\"mois\"</code> et <code>\"ann\u00e9e\"</code>, auxquelles sont respectivement associ\u00e9es les valeurs <code>\"Alice\"</code>, <code>7</code>, <code>1</code> et <code>1941</code>.</p> <p>Si l'on souhaite repr\u00e9senter les donn\u00e9es de <code>individus</code> dans un dictionnaire, on peut \u00e9crire :</p> <pre><code>individus = [{'nom': \"Alice\", 'jour': 7, 'mois': 1, 'annee': 1941},\n            {'nom': \"Bob\", 'jour': 9, 'mois': 12, 'annee': 1909},\n            {'nom': \"Charles\", 'jour': 14, 'mois': 12, 'annee': 1965},\n            {'nom': \"Delphine\", 'jour': 11, 'mois': 1, 'annee': 1938}]\n</code></pre> <p>Contrairement \u00e0 un tableau (repr\u00e9sent\u00e9 avec une liste en Python), les cl\u00e9s d\u2019un dictionnaire ne sont pas limit\u00e9es \u00e0 un ensemble d\u2019entiers de la forme <code>0</code>, <code>1</code>, . . . , <code>n \u2212 1</code>.</p> <p>Un dictionnaire peut \u00eatre construit en donnant explicitement toutes ses entr\u00e9es, comme c'est le cas pour le dictionnaire pr\u00e9c\u00e9dent repr\u00e9sentant l\u2019\u00e9l\u00e8ve <code>Alice</code>. On peut \u00e9galement en construire un \u00e0 partir du dictionnaire vide, not\u00e9 <code>{}</code>, en y ajoutant peu \u00e0 peu des entr\u00e9es avec des affectations de la forme <code>d[cl\u00e9] = valeur</code>.</p> <p></p><pre><code>&gt;&gt;&gt; d = {}\n&gt;&gt;&gt; d[\"Homer\"] = \"le mari de Marge\"\n&gt;&gt;&gt; d[\"Marge\"] = \"la femme d\u2019Homer\"\n&gt;&gt;&gt; d[\"Lisa\"] = \"la fille de Marge et Homer\"\n&gt;&gt;&gt; d\n{'Homer': 'le mari de Marge', 'Marge': 'la femme d\u2019Homer', 'Lisa': 'la fille de Marge et Homer'}\n&gt;&gt;&gt; len(d)\n3\n</code></pre> L'ordre d'insertion n'a pas d'importance, puisque contrairement \u00e0 une liste ou \u00e0 un tuple, les \u00e9l\u00e9ments d'un dictionnaire ne sont pas ordonn\u00e9s, ils sont affich\u00e9s dans un ordre arbitraire. <p>On peut acc\u00e9der \u00e0 la valeur associ\u00e9e \u00e0 une cl\u00e9 avec la construction <code>d[cl\u00e9]</code> et on peut tester si le dictionnaire poss\u00e8de une entr\u00e9e pour une certaine cl\u00e9 avec la construction <code>cl\u00e9 in d</code>.</p> <pre><code>&gt;&gt;&gt; d[\"Lisa\"]\n\u2019la fille de Marge et Homer\u2019\n&gt;&gt;&gt; \"Lisa\" in d\nTrue\n&gt;&gt;&gt; \"Bart\" in d\nFalse\n</code></pre> <p>Tester si un dictionnaire poss\u00e8de une cl\u00e9 donn\u00e9e se fait de mani\u00e8re quasiment instantan\u00e9e (en temps constant), ce qui est donc moins co\u00fbteux que de chercher un \u00e9l\u00e9ment dans une liste, o\u00f9 la complexit\u00e9 est lin\u00e9aire dans le pire des cas (puisqu'il faut parcourir chaque \u00e9l\u00e9ment jusqu'\u00e0 trouver le bon).</p> <p>Sans rentrer dans les d\u00e9tails, cela s'explique parce que les dictionnaires, tout comme les ensembles en Python (une autre structure qui n'est pas au programme) sont, en interne, impl\u00e9ment\u00e9s \u00e0 l'aide d'une table de hachage, une structure de donn\u00e9es tr\u00e8s efficace pour la recherche et l'insertion d'\u00e9l\u00e9ments.</p> <p>Si on tente d\u2019obtenir la valeur associ\u00e9e \u00e0 une cl\u00e9 qui n\u2019est pas dans le dictionnaire, cela l\u00e8ve une erreur. Par exemple :</p> <pre><code>&gt;&gt;&gt; d[\"Bart\"]\nTraceback (most recent call last):\nFile \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nKeyError: \u2019Bart\u2019\n</code></pre> <p>Comme pour une liste, le contenu d\u2019un dictionnaire peut \u00eatre modifi\u00e9 apr\u00e8s sa cr\u00e9ation, en rempla\u00e7ant la valeur associ\u00e9e \u00e0 une cl\u00e9 par une autre valeur, par exemple :</p> <pre><code>&gt;&gt;&gt; d[\"Lisa\"] = \"mod\u00e8le de La Joconde\"\n&gt;&gt;&gt; len(d)\n3\n&gt;&gt;&gt; d[\"Lisa\"]\n\u2019mod\u00e8le de La Joconde\u2019\n</code></pre> <p>Il est \u00e9galement possible de supprimer une entr\u00e9e du dictionnaire avec l\u2019instruction <code>del</code>.</p> <pre><code>&gt;&gt;&gt; del d[\"Lisa\"]\n&gt;&gt;&gt; \"Lisa\" in d\nFalse\n&gt;&gt;&gt; len(d)\n2\n</code></pre>"},{"location":"premiere/traitement_donnees/n_uplets_dicos/#parcourir-un-dictionnaire","title":"Parcourir un dictionnaire","text":"<p>Le parcours des \u00e9l\u00e9ments d'un dictionnaire peut se faire de diff\u00e9rentes fa\u00e7ons.</p> <p>Si l'on prend le dictionnaire suivant :</p> <pre><code>d = {\"nom\":\"Alice\", \"jour\":7, \"mois\":1, \"annee\":1941}\n</code></pre> <p>On peut parcourir les cl\u00e9s de la fa\u00e7on suivante :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>d = {\"nom\":\"Alice\", \"jour\":7, \"mois\":1, \"annee\":1941}bksl-nlbksl-nlfor cle in d:bksl-nl    print(cle)bksl-nl</p> <p>On peut \u00e9galement parcourir les cl\u00e9s d'un dictionnaire avec la construction <code>d.keys()</code> :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>d = {\"nom\":\"Alice\", \"jour\":7, \"mois\":1, \"annee\":1941}bksl-nlbksl-nl# Afficher chaque cl\u00e9 du dictionnairebksl-nlfor cle in d.keys():bksl-nl    print(cle)bksl-nlbksl-nl# Cr\u00e9er une liste contenant chaque cl\u00e9 du dictionnairebksl-nlcles = list(d.keys())bksl-nlprint(cles)bksl-nl</p> <p>Si l'on souhaite faire la m\u00eame chose avec les valeurs associ\u00e9es aux cl\u00e9s du dictionnaire, le principe est le m\u00eame mais avec la construction <code>d.values()</code> :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>d = {\"nom\":\"Alice\", \"jour\":7, \"mois\":1, \"annee\":1941}bksl-nlbksl-nl# Afficher chaque cl\u00e9 du dictionnairebksl-nlfor val in d.values():bksl-nl    print(val)bksl-nlbksl-nl# Cr\u00e9er une liste contenant chaque cl\u00e9 du dictionnairebksl-nlvaleurs = list(d.values())bksl-nlprint(valeurs)bksl-nl</p> <p>On peut \u00e9galement parcourir \u00e0 la fois les cl\u00e9s et les valeurs avec la construction <code>d.items()</code>. Dans ce cas l\u00e0, chaque \u00e9l\u00e9ment sera un tuple de type <code>(cl\u00e9, valeur)</code> :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>d = {\"nom\":\"Alice\", \"jour\":7, \"mois\":1, \"annee\":1941}bksl-nlbksl-nl# Afficher chaque cl\u00e9 du dictionnairebksl-nlfor cle, val in d.items():bksl-nl    print(f'{cle} : {val}')bksl-nlbksl-nl# Autre possibilit\u00e9bksl-nlfor el in d.items():bksl-nl    print(el)bksl-nlbksl-nl# Cr\u00e9er une liste de tuples (cl\u00e9, valeur)bksl-nlelements = list(d.items())bksl-nlprint(elements)bksl-nl</p>"},{"location":"premiere/traitement_donnees/n_uplets_dicos/#dictionnaires-par-comprehension","title":"Dictionnaires par compr\u00e9hension","text":"<p>Enfin, tout comme pour les listes, il est possible de construire un dictionnaire par compr\u00e9hension, par exemple :</p> <pre><code>&gt;&gt;&gt; { x*x : x for x in range(10) }\n{0: 0, 1: 1, 4: 2, 16: 4, 9: 3}\n</code></pre>"},{"location":"premiere/traitement_donnees/n_uplets_dicos/#exercices-tuples","title":"Exercices - Tuples","text":"<p>Exercice 1</p> <p>\u00c9crire une fonction <code>afficher(liste)</code> qui prend en entr\u00e9e une liste de tuples repr\u00e9sentant des donn\u00e9es sur des \u00e9l\u00e8ves, de la forme :</p> <pre><code>[(\"Bastien\", \"Dubois\", 15), (\"St\u00e9phane\", \"Carlier\", 16), (\"Vincent\", \"Duboeuf\", 15)]\n</code></pre> <p>Et qui effectue un affichage comme suit (en prenant l'exemple de la liste ci-dessus) :</p> <pre><code>Bastien Dubois - 15 ans\nSt\u00e9phane Carlier - 16 ans\nVincent Duboeuf - 15 ans\n</code></pre> Correction exercice 1 <p>Il y a plusieurs solutions pour \u00e9crire cette fonction. On peut faire un parcours en r\u00e9cup\u00e9rant chaque tuple contenu dans la liste :</p> <pre><code>def afficher(liste):\n    for infos in liste:\n        print(f\"{infos[0]} {infos[1]} - {infos[2]} ans\")\n</code></pre> <p>On peut \u00e9galement r\u00e9cup\u00e9rer directement chaque information des tuples (pr\u00e9nom, nom et \u00e2ge) dans des variables diff\u00e9rentes :</p> <pre><code>def afficher(liste):\n    for prenom, nom, age in liste:\n        print(f\"{prenom} {nom} - {age} ans\")\n</code></pre> <p>On a ici utilis\u00e9 des f-strings pour g\u00e9rer les affichages.</p> <p>Pour des rappels concernant les diff\u00e9rentes fa\u00e7ons d'utiliser la fonction <code>print</code>, vous pouvez consulter cette page de cours.</p>"},{"location":"premiere/traitement_donnees/n_uplets_dicos/#exercices-dictionnaires","title":"Exercices - Dictionnaires","text":"<p>Notebooks</p> <p>Voici un notebook Capytale d'introduction sur les dictionnaires :</p> <p></p>  Activit\u00e9 - Les dictionnaires en Python <p>D'autres exercices sur les dictionnaires et tuples :</p> <p></p>  D'autres exercices"},{"location":"premiere/traitement_donnees/pandas/","title":"Le module Pandas","text":""},{"location":"premiere/traitement_donnees/pandas/#activite-le-module-pandas","title":"Activit\u00e9 - Le module Pandas","text":"<p>Traitement de donn\u00e9es de films avec Pandas</p> <p>Cliquez sur le lien ci-dessous :</p> <p></p>  Acc\u00e9der au notebook sur Capytale"},{"location":"terminale/","title":"NSI - Terminale","text":""},{"location":"terminale/#nsi-terminale","title":"NSI - Terminale","text":"Liste des contenus Description Modularit\u00e9 Cr\u00e9ation et utilisation de modules et d'API. Mise au point des programmes Types de donn\u00e9es, annotations, tests... Programmation orient\u00e9e objet D\u00e9couverte des classes en Python. R\u00e9cursivit\u00e9 Utilisation de la r\u00e9cursivit\u00e9 en langage Python. Les listes cha\u00een\u00e9es Structure de liste cha\u00een\u00e9e et impl\u00e9mentation. Piles et files Structures de piles et de files et impl\u00e9mentations. Les arbres Arbres, arbres binaires et arbres binaires de recherche. Protocoles de routage Protocoles de routage RIP et OSPF.  Sujet e3c de rentr\u00e9e corrig\u00e9 Le sujet d'e3c de rentr\u00e9e avec correction d\u00e9taill\u00e9e.  R\u00e9visions / Entra\u00eenement Python Quelques exercices pour vous exercer au langage Python.  Le module Pyxel Activit\u00e9s et projet autour du module de cr\u00e9ation de jeux vid\u00e9o Pyxel."},{"location":"terminale/arbres/","title":"Arbres : structures de donn\u00e9es et algorithmes","text":""},{"location":"terminale/arbres/#arbres-structures-de-donnees-et-algorithmes","title":"Arbres : structures de donn\u00e9es et algorithmes","text":"<p>Ce cours se d\u00e9compose en plusieurs parties :</p> <ul> <li>COURS<ul> <li>Arbres : d\u00e9finitions et vocabulaire</li> <li>Parcours d'arbres binaires</li> <li>Type abstrait \"Arbre binaire\"</li> <li>Arbres binaires de recherche</li> </ul> </li> <li>ACTIVITES PYTHON<ul> <li>Impl\u00e9mentation des arbres binaires</li> <li>Impl\u00e9mentation des arbres binaires de recherche</li> </ul> </li> <li>EXERCICES<ul> <li>Exercices - Vocabulaire sur les arbres</li> <li>Exercices - Parcours d'un arbre binaire</li> <li>Exercices - Impl\u00e9mentations d'arbres binaires</li> <li>Exercices - Arbres binaires de recherche</li> </ul> </li> <li>DM<ul> <li>DM n\u00b02 - Arbres binaires et ABR</li> </ul> </li> </ul>"},{"location":"terminale/arbres/abr/","title":"Arbres binaires de recherche","text":"<p>Important</p> <p>Ce cours est encore en construction.</p>"},{"location":"terminale/arbres/abr/#les-arbres-binaires-de-recherche","title":"Les arbres binaires de recherche","text":""},{"location":"terminale/arbres/abr/#activite-preliminaire","title":"Activit\u00e9 pr\u00e9liminaire","text":"<p>Sources : https://www.zonensi.fr/NSI/Terminale/C05/ABR/ et Num\u00e9rique et Sciences Informatiques, 24 le\u00e7ons avec exercices corrig\u00e9s, Balabonski, Conchon, Filli\u00e2tre, Nguyen, Editions Ellipses.</p> <p>Imaginons une biblioth\u00e8que contenant un tr\u00e8s grand nombre de livres. Cette biblioth\u00e8que est organis\u00e9e de la mani\u00e8re suivante :</p> <ul> <li>Il y a 17 576 pi\u00e8ces diff\u00e9rentes.</li> <li>Chaque pi\u00e8ce est rep\u00e9r\u00e9e par une suite de trois lettres, et dans cette pi\u00e8ce sont rang\u00e9s tous les livres dont les titres commencent par ces trois lettres.</li> <li>Chaque pi\u00e8ce poss\u00e8de deux sorties, une \u00e0 droite et une \u00e0 gauche.</li> <li>La sortie de gauche m\u00e8ne toujours soit \u00e0 une salle dont les trois lettres sont situ\u00e9es avant dans l'ordre alphab\u00e9tique, soit nulle part.</li> <li>La sortie de droite m\u00e8ne toujours soit \u00e0 une salle dont les trois lettres sont situ\u00e9es apr\u00e8s dans l'ordre alphab\u00e9tique, soit nulle part.</li> </ul> <p>Une repr\u00e9sentation de cette biblioth\u00e8que peut \u00eatre donn\u00e9e sous la forme d'un arbre binaire comme celui-ci :</p> <p></p> <p>Questions</p> <ol> <li> <p>Redessinez cet arbre binaire, en y ajoutant les noeuds qui correspondent aux pi\u00e8ces o\u00f9 sont situ\u00e9s les livres dont le titre commence par :</p> <ul> <li>KNU</li> <li>UDP</li> <li>JET</li> <li>RSA</li> </ul> </li> <li> <p>Pourquoi y-a-t-il 17 576 pi\u00e8ces diff\u00e9rentes ?</p> </li> </ol> <p>Cette r\u00e9partition peut se r\u00e9v\u00e9ler incroyablement efficace.</p> <p>Dans le meilleur des cas, il ne faudra traverser qu'au maximum 15 salles pour trouver n'importe quel livre (si la biblioth\u00e8que est correctement organis\u00e9e, quasiment chaque noeud aura 2 sorties, d'o\u00f9 une hauteur d'environ \\(log_{2}{(17576)}\\), soit environ 15).</p>"},{"location":"terminale/arbres/abr/#definition-dun-arbre-binaire-de-recherche","title":"D\u00e9finition d'un arbre binaire de recherche","text":"<p>D\u00e9finition : Un arbre binaire de recherche est un arbre binaire \u00e9tiquet\u00e9 tel que :</p> <ul> <li>les \u00e9l\u00e9ments sont munis d'un ordre total (on peut les comparer),</li> <li>les \u00e9l\u00e9ments des noeuds du sous-arbre gauche sont tous \\(\\leq\\) \u00e0 l'\u00e9l\u00e9ment de la racine,</li> <li>les \u00e9l\u00e9ments des noeuds du sous-arbre droit sont tous \\(&gt;\\) \u00e0 l'\u00e9l\u00e9ment de la racine,</li> <li>les sous-arbres gauches et droit sont \u00e9galement des ABR.</li> </ul> <p></p> <p>Note : Un arbre binaire vide et une feuille sont \u00e9galement des arbres binaires de recherche.</p>"},{"location":"terminale/arbres/abr/#notion-darbre-equilibre","title":"Notion d'arbre \u00e9quilibr\u00e9","text":"<p>Une autre notion qui va nous \u00eatre utile est la notion d'arbre \u00e9quilibr\u00e9.</p> <p>D\u00e9finition : Un arbre \u00e9quilibr\u00e9 est un arbre pour lequel, pour tout n\u0153ud de l'arbre, la diff\u00e9rence entre les hauteurs de ses deux sous-arbres est au plus de 1.</p> <p></p> <ul> <li>L'arbre A est un arbre complet, et donc \u00e9quilibr\u00e9 car pour tout n\u0153ud de l'arbre, les deux sous-arbres ont au plus une diff\u00e9rence de hauteur de 1.</li> <li>L'arbre B est un arbre filiforme et donc compl\u00e8tement d\u00e9s\u00e9quilibr\u00e9. Un tel arbre s'apparente \u00e0 une liste cha\u00een\u00e9e.</li> </ul>"},{"location":"terminale/arbres/abr/#recherche-dans-un-arbre-binaire-de-recherche","title":"Recherche dans un arbre binaire de recherche","text":""},{"location":"terminale/arbres/abr/#algorithme-a-connaitre-par-cur","title":"Algorithme (\u00e0 conna\u00eetre par c\u0153ur !)","text":"<p>\u00c0 noter dans votre cours</p> <p>Voici l'algorithme r\u00e9cursif, en pseudo-code, de la recherche dans un arbre binaire de recherche.</p> <p>Recherche dans un arbre binaire de recherche</p> <pre><code>ALGO : rechercher\nENTREES : abr : Arbre binaire de recherche\n          elt : Element\nSORTIE : Bool\u00e9en\nDEBUT\n    Si abr EST VIDE, alors :\n        Renvoyer FAUX\n    Sinon si valeur_racine(abr) = elt, alors :\n        Renvoyer VRAI\n    Sinon si elt &lt;= valeur_racine(abr), alors :\n        Renvoyer rechercher(gauche(abr), elt)\n    Sinon :\n        Renvoyer rechercher(droite(abr), elt)\nFIN\n</code></pre> <p>Contrairement \u00e0 la recherche dans un arbre binaire classique, on n'effectue pas la recherche dans les deux sous-arbres. En fonction de l'\u00e9l\u00e9ment recherch\u00e9, on effectue la recherche soit dans le sous-arbre gauche (si l'\u00e9l\u00e9ment est inf\u00e9rieur ou \u00e9gal \u00e0 la valeur de la racine), soit dans le sous-arbre droit (si l'\u00e9l\u00e9ment est sup\u00e9rieur \u00e0 la valeur de la racine).</p>"},{"location":"terminale/arbres/abr/#cout-de-la-recherche","title":"Co\u00fbt de la recherche","text":"<p>Le co\u00fbt de la recherche d\u00e9pend du fait que l'arbre soit \u00e9quilibr\u00e9 ou non. Si l'on reprend les arbres pr\u00e9c\u00e9dents :</p> <p></p> <ul> <li>Dans l'arbre B, tous les noeuds sont du m\u00eame c\u00f4t\u00e9. Si l'on recherche le nombre 25 dans l'arbre (qui n'est pas pr\u00e9sent dedans), on va toujours rechercher dans le sous-arbre gauche. Si l'on note \\(n\\) le nombre de n\u0153uds de l'arbre, Le nombre d'appels r\u00e9cursifs \u00e0 <code>rechercher</code> sera de l'ordre de \\(n\\).</li> <li>Dans l'arbre A, les n\u0153uds sont r\u00e9partis \u00e0 peu pr\u00e8s \u00e9quitablement entre les sous-arbres gauches et droit. \u00c0 chaque nouvel appel r\u00e9cursif, on ne recherche que dans un des deux sous-arbres, et on peut donc \u00e9liminer \u00e0 chaque fois environ la moiti\u00e9 des n\u0153uds. Si l'on note \\(A(n)\\) le nombre d'appels \u00e0 <code>rechercher</code> en fonction de la taille \\(n\\) de l'arbre, on peut \u00e9crire \\(A(n) = 1 + A(\\frac{n}{2}) = 1 + 1 + A(\\frac{n}{4}) = [...] \\approx log_2(n)\\).</li> </ul> <p>\u00c0 noter dans votre cours</p> <p>Finalement, le co\u00fbt de la recherche dans un arbre binaire de recherche est le suivant :</p> <ul> <li>Si l'arbre est \u00e9quilibr\u00e9, le co\u00fbt de la recherche est en \\(O(log_2(n))\\),</li> <li>Si l'arbre est compl\u00e8tement d\u00e9s\u00e9quilibr\u00e9 (arbre filiforme), le co\u00fbt de la recherche est en \\(O(n)\\).</li> </ul> <p>Pour vous entra\u00eener</p> <p>Voir l'exercice 4 et sa correction pour vous entra\u00eener sur cette notion.</p>"},{"location":"terminale/arbres/abr/#insertion-dans-un-arbre-binaire-de-recherche","title":"Insertion dans un arbre binaire de recherche","text":""},{"location":"terminale/arbres/abr/#algorithme-a-connaitre-par-cur_1","title":"Algorithme (\u00e0 conna\u00eetre par c\u0153ur !)","text":"<p>\u00c0 noter dans votre cours</p> <p>Voici l'algorithme r\u00e9cursif, en pseudo-code, de l'insertion dans un arbre binaire de recherche.</p> <p>Insertion dans un arbre binaire de recherche</p> <pre><code>ALGO : inserer\nENTREES : abr : Arbre binaire de recherche\n          elt : Element\nSORTIE : Arbre binaire de recherche\nDEBUT\n    SI abr EST VIDE, alors :\n        Renvoyer nouvel_ABR(elt, ABR_VIDE, ABR_VIDE)\n    SINON SI elt &lt;= valeur_racine(abr), alors:\n        Renvoyer nouvel_ABR(valeur_racine(abr), inserer(gauche(abr), elt), droite(abr))\n    SINON :\n        Renvoyer nouvel_ABR(valeur_racine(abr), gauche(abr), inserer(droite(abr), elt))\nFIN\n</code></pre>"},{"location":"terminale/arbres/abr/#cout-de-la-recherche_1","title":"Co\u00fbt de la recherche","text":"<p>Le co\u00fbt algorithmique de l'insertion dans un arbre binaire de recherche est identique au co\u00fbt de la recherche. En effet, le principe est toujours le m\u00eame :</p> <ul> <li>Si l'\u00e9l\u00e9ment \u00e0 ins\u00e9rer est inf\u00e9rieur ou \u00e9gal \u00e0 la racine, on ins\u00e8re l'\u00e9l\u00e9ment dans le sous-arbre gauche.</li> <li>Si l'\u00e9l\u00e9ment \u00e0 ins\u00e9rer est sup\u00e9rieur \u00e0 la racine, on ins\u00e8re l'\u00e9l\u00e9ment dans le sous-arbre droit.</li> </ul> <p>Ainsi, si l'arbre est \u00e9quilibr\u00e9, on divise environ par deux le nombre de n\u0153uds \u00e0 chaque appel r\u00e9cursif, et le co\u00fbt est logarithmique au pire (si l'\u00e9l\u00e9ment \u00e0 ins\u00e9rer se positionne en profondeur maximale). Dans le cas o\u00f9 l'arbre est compl\u00e8tement d\u00e9s\u00e9quilibr\u00e9 (arbre filiforme), on doit, au pire, visiter chaque n\u0153ud pour ins\u00e9rer un \u00e9l\u00e9ment, et on obtient donc un co\u00fbt lin\u00e9aire au pire, comme dans le cas d'une liste cha\u00een\u00e9e.</p> <p>\u00c0 noter dans votre cours</p> <p>Le co\u00fbt algorithmique de l'insertion dans un arbre binaire de recherche est le suivant :</p> <ul> <li>Si l'arbre est \u00e9quilibr\u00e9, le co\u00fbt de l'insertion est en \\(O(log_2(n))\\),</li> <li>Si l'arbre est compl\u00e8tement d\u00e9s\u00e9quilibr\u00e9 (arbre filiforme), le co\u00fbt de l'insertion est en \\(O(n)\\).</li> </ul> <p>Pour vous entra\u00eener</p> <p>Voir l'exercice 5 et sa correction pour vous entra\u00eener sur cette notion.</p>"},{"location":"terminale/arbres/exercices_abr/","title":"Arbre binaires de recherche","text":""},{"location":"terminale/arbres/exercices_abr/#exercices-arbres-binaires-de-recherche","title":"Exercices - Arbres binaires de recherche","text":"<p>Voici 3 arbres binaires :</p> <p></p> <p>Exercice 1</p> <ol> <li>Parmi ces arbres, pouvez-vous dire lesquels sont des arbres binaires de recherche ?</li> <li>Dans un arbre binaire de recherche, o\u00f9 se trouve le plus petit \u00e9l\u00e9ment ? Le plus grand \u00e9l\u00e9ment ?</li> <li>Quelle est l'ordre des noeuds lors des parcours pr\u00e9fixe, infixe, postfixe du premier arbre ?</li> <li>Quel parcours est particuli\u00e8rement int\u00e9ressant avec les arbres binaire de recherche ? Pourquoi ?</li> <li>Comment v\u00e9rifier facilement si un arbre binaire est un arbre binaire de recherche ?</li> </ol> <p>Exercice 2</p> <p>Cr\u00e9ez un arbre binaire de recherche en partant d'un arbre binaire vide et en  ins\u00e9rant progressivement les n\u0153uds de valeurs suivantes (en suivant cet ordre) : 18, 13, 21, 20, 15, 10, 23.</p> <p>Exercice 3</p> <p>Dessinez un arbre binaire de recherche :</p> <ol> <li>En ins\u00e9rant, en suivant l'ordre, les n\u0153uds de valeurs suivantes dans l'arbre : 14,13,12,11,8,5,4,3,1 Que constatez-vous ? \u00c0 quelle autre structure de donn\u00e9es cet arbre s'apparente t-il ?</li> <li>Re-dessinez cet arbre de mani\u00e8re \u00e0 obtenir un arbre \u00e9quilibr\u00e9.</li> <li>Si on ins\u00e8re progressivement chaque valeur une par une dans l'arbre, dans quel ordre faut-il les ajouter pour obtenir un arbre \u00e9quilibr\u00e9 ? D\u00e9crivez votre m\u00e9thode.</li> </ol> <p>Exercice 4</p> <ol> <li>D\u00e9crivez, en pseudo-langage, un algorithme r\u00e9cursif de recherche dans un arbre binaire de recherche, qui renvoie <code>Vrai</code> si un \u00e9l\u00e9ment fourni en entr\u00e9e est pr\u00e9sent dans l'arbre, et <code>Faux</code> s'il ne l'est pas.</li> <li> <p>Dessinez deux arbres binaires de recherche, construits en partant d'un arbre vide et en ins\u00e9rant progressivement les n\u0153uds suivants :</p> <ul> <li>20, 15, 22, 18, 21, 16, 23, 13</li> <li>13, 15, 16, 18, 20, 21, 22, 23</li> </ul> </li> <li> <p>Que pouvez-vous dire du premier arbre ? Du second ?</p> </li> <li> <p>D\u00e9roulez votre algorithme sur les deux arbres pr\u00e9c\u00e9demment dessin\u00e9s, puis comptez le nombre d'appels r\u00e9cursifs pour rechercher :</p> <ul> <li>la valeur 17 dans le premier arbre</li> <li>la valeur 25 dans le deuxi\u00e8me arbre</li> </ul> </li> <li> <p>Choisissez ainsi le bon co\u00fbt algorithmique dans le tableau ci-dessous dans le pire cas :</p> </li> </ol> O(1) O(\\(log_2{n}\\)) O(n) O(\\(nlog_2{n}\\)) O(n\u00b2) ABR \u00e9quilibr\u00e9 ABR non \u00e9quilibr\u00e9 <p>Exercice 5</p> <ol> <li>D\u00e9crivez, en pseudo-langage, un algorithme r\u00e9cursif d'insertion dans un arbre binaire de recherche qui renvoie un nouvel arbre dans lequel est ajout\u00e9 un n\u0153ud dont la valeur est donn\u00e9e en entr\u00e9e.</li> <li> <p>D\u00e9roulez votre algorithme sur les deux arbres dessin\u00e9s \u00e0 la question pr\u00e9c\u00e9dente, puis, pour chacun, comptez le nombre d'appels r\u00e9cursifs effectu\u00e9s pour ins\u00e9rer :</p> <ul> <li>la valeur 17 dans le premier arbre</li> <li>la valeur 25 dans le deuxi\u00e8me arbre</li> </ul> </li> <li> <p>Choisissez ainsi le bon co\u00fbt algorithmique dans le tableau ci-dessous dans le pire cas :</p> </li> </ol> O(1) O(\\(log_2{n}\\)) O(n) O(\\(nlog_2{n}\\)) O(n\u00b2) ABR \u00e9quilibr\u00e9 ABR non \u00e9quilibr\u00e9"},{"location":"terminale/arbres/exercices_parcours/","title":"Parcours d'arbres binaires","text":"<p>Info</p> <p>Ces exercices sont \u00e9galement disponibles en format PDF : fiche2_parcours.pdf</p>"},{"location":"terminale/arbres/exercices_parcours/#exercices-parcours-darbres-binaires","title":"Exercices - Parcours d'arbres binaires","text":"<p>Il existe plusieurs fa\u00e7ons de parcourir un arbre binaire (c'est-\u00e0-dire de visiter les n\u0153uds de l'arbre dans un ordre pr\u00e9cis), et notamment deux types de parcours :</p> <ul> <li>le parcours en largeur d'abord,</li> <li>le parcours en profondeur d'abord.</li> </ul>"},{"location":"terminale/arbres/exercices_parcours/#parcours-en-profondeur","title":"Parcours en profondeur","text":"<p>En l\u2019occurrence, trois cas particuliers du parcours en profondeur sont \u00e0 conna\u00eetre sur les arbres binaires : le parcours en ordre pr\u00e9fixe, en ordre infixe et en ordre suffixe (ou postfixe).</p> <p>Ces parcours se d\u00e9finissent de mani\u00e8re r\u00e9cursive. Ils consistent \u00e0 traiter la racine de l'arbre et \u00e0 parcourir r\u00e9cursivement les sous-arbres gauche et droit de la racine. Les parcours pr\u00e9fixe, infixe et suffixe se distinguent par l'ordre dans lequel sont effectu\u00e9s ces traitements.</p>"},{"location":"terminale/arbres/exercices_parcours/#parcours-prefixe-infixe-postfixe","title":"Parcours pr\u00e9fixe, infixe, postfixe","text":"<p>Voici un arbre binaire :</p> <p> </p> Un arbre binaire <p>D\u00e9roulement parcours pr\u00e9fixe</p> <p>Pr\u00e9condition : L'arbre n'est pas vide Le <code>parcours pr\u00e9fixe</code> se d\u00e9roule comme suit :</p> <ol> <li>On <code>visite</code> le n\u0153ud racine de l'arbre.</li> <li>On effectue le <code>parcours pr\u00e9fixe</code> du sous-arbre gauche (s'il est NON vide).</li> <li>On effectue le <code>parcours pr\u00e9fixe</code> du sous-arbre droit (s'il est NON vide).</li> </ol> <p>Exercice 1</p> <p>En suivant le d\u00e9roulement pr\u00e9c\u00e9dent, listez les valeurs des n\u0153uds de l'arbre en figure 1 visit\u00e9s dans l'ordre pr\u00e9fixe.</p> <p>D\u00e9roulement parcours suffixe</p> <p>Pr\u00e9condition : L'arbre n'est pas vide Le <code>parcours suffixe</code> se d\u00e9roule comme suit :</p> <ol> <li>On effectue le <code>parcours suffixe</code> du sous-arbre gauche (s'il est NON vide).</li> <li>On effectue le <code>parcours suffixe</code> du sous-arbre droit (s'il est NON vide).</li> <li>On <code>visite</code> le n\u0153ud racine de l'arbre.</li> </ol> <p>Exercice 2</p> <p>En suivant le d\u00e9roulement pr\u00e9c\u00e9dent, listez les valeurs des n\u0153uds de l'arbre en figure 1 visit\u00e9s dans l'ordre suffixe.</p> <p>D\u00e9roulement parcours infixe</p> <p>Pr\u00e9condition : L'arbre n'est pas vide Le <code>parcours infixe</code> se d\u00e9roule comme suit :</p> <ol> <li>On effectue le <code>parcours infixe</code> du sous-arbre gauche (s'il est NON vide).</li> <li>On <code>visite</code> le n\u0153ud racine de l'arbre.</li> <li>On effectue le <code>parcours infixe</code> du sous-arbre droit (s'il est NON vide).</li> </ol> <p>Exercice 3</p> <p>En suivant le d\u00e9roulement pr\u00e9c\u00e9dent, listez les valeurs des n\u0153uds de l'arbre en figure 1 visit\u00e9s dans l'ordre infixe.</p> <p>Exercice 4</p> <ol> <li>Redessinez l'arbre en figure 1 en y ajoutant les n\u0153uds vides (not\u00e9s \\(\\emptyset\\)) et les ar\u00eates associ\u00e9es. Vous pouvez les dessiner en pointill\u00e9s.</li> <li>Tracez le contour de l'arbre (en commen\u00e7ant \u00e0 gauche de la racine).</li> <li>Listez les n\u0153uds de l'arbre de trois mani\u00e8re diff\u00e9rentes :<ul> <li>Une premi\u00e8re liste dans laquelle vous ajoutez chaque n\u0153ud lorsque vous passez \u00e0 sa gauche. Quel est l'ordre de parcours (pr\u00e9fixe, infixe, postfixe) ainsi obtenu ?</li> <li>Une seconde liste dans laquelle vous ajoutez chaque n\u0153ud lorsque vous passez \u00e0 sa droite. Quel est l'ordre de parcours (pr\u00e9fixe, infixe, postfixe) ainsi obtenu ?</li> <li>Une troisi\u00e8me liste dans laquelle vous ajoutez chaque n\u0153ud lorsque vous passez en dessous. Quel est l'ordre de parcours (pr\u00e9fixe, infixe, postfixe) ainsi obtenu ?</li> </ul> </li> </ol>"},{"location":"terminale/arbres/exercices_parcours/#parcours-en-largeur","title":"Parcours en largeur","text":"<p>Le parcours en largeur consiste \u00e0 parcourir un arbre niveau par niveau. Le n\u0153ud de profondeur 0 (ou 1 selon la convention choisie) est d'abord parcouru, puis les n\u0153uds de profondeur 1 (ou 2), et ainsi de suite.  \u00c0 chaque niveau, les n\u0153uds sont parcourus de la gauche vers la droite.</p> <p>D\u00e9roulement parcours en largeur</p> <p>Le parcours en largeur fonctionne donc de la mani\u00e8re suivante :</p> <ul> <li>On <code>visite</code> le n\u0153ud racine</li> <li>On <code>visite</code> les n\u0153uds fils du n\u0153ud racine (d'abord le fils gauche, puis le fils droit)</li> <li>Puis on <code>visite</code> les n\u0153uds fils du fils gauche du n\u0153ud racine, puis les n\u0153uds fils du fils droit du n\u0153ud racine</li> <li>Et ainsi de suite...</li> </ul> <p>Par exemple, si l'on parcourt l'arbre suivant en largeur, les n\u0153uds seront visit\u00e9s dans cet ordre : <code>[E, B, G, A, D, F, H, C]</code></p> <p></p> <p>Exercice 5</p> <p>Listez les valeurs des n\u0153uds de l'arbre en figure 1 visit\u00e9s lors d'un parcours en largeur.</p> <p>Exercice 6</p> <p>Si l'on impl\u00e9mentait l'algorithme de parcours en largeur, on aurait besoin d'une structure de donn\u00e9es permettant d'y stocker \u00e0 chaque fois les prochains n\u0153uds \u00e0 visiter (qui contiendrait initialement la racine de l'arbre), de mani\u00e8re \u00e0 ce que le premier n\u0153ud ajout\u00e9 soit le premier n\u0153ud visit\u00e9.</p> <p>\u00c0 votre avis, quelle structure de donn\u00e9es lin\u00e9aire pourrait-on utiliser pour impl\u00e9menter le parcours en largeur ?</p>"},{"location":"terminale/arbres/exercices_vocabulaire/","title":"Vocabulaire sur les arbres","text":"<p>Info</p> <p>Ces exercices sont \u00e9galement disponibles en format PDF : fiche1_vocabulaire.pdf</p>"},{"location":"terminale/arbres/exercices_vocabulaire/#exercices-vocabulaire-sur-les-arbres","title":"Exercices - Vocabulaire sur les arbres","text":""},{"location":"terminale/arbres/exercices_vocabulaire/#dessiner-un-arbre","title":"Dessiner un arbre","text":""},{"location":"terminale/arbres/exercices_vocabulaire/#une-arborescence-de-fichiers","title":"Une arborescence de fichiers","text":"<p>Sur Linux, on peut lister r\u00e9cursivement les r\u00e9pertoires et fichiers du syst\u00e8me \u00e0 l'aide de la commande <code>tree</code>. Voici un exemple d'arborescence obtenue apr\u00e8s ex\u00e9cution de cette commande :</p> <p> </p> Une arborescence sur Linux <p>Exercice 1</p> <p>Dessinez un arbre repr\u00e9sentant cette arborescence, en partant de l'arbre suivant :</p> <p></p> <ol> <li>Quelle est la taille de cet arbre ?</li> <li>Combien y a t-il d'ar\u00eates dans l'arbre ?</li> <li>Quelles sont les feuilles de l'arbre ?</li> </ol> <p>En consid\u00e9rant que la profondeur de la racine est de 1 :</p> <ol> <li>Quelle est la profondeur du n\u0153ud D5 ?</li> <li>Quelle est la hauteur de l'arbre ?</li> <li>Cet arbre est-il un arbre binaire ? Pourquoi ?</li> </ol>"},{"location":"terminale/arbres/exercices_vocabulaire/#arbre-dune-page-html","title":"Arbre d'une page HTML","text":"<p>Voici le code HTML d'une page web :</p> <pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;title&gt;Ma superbe page&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Mon super titre&lt;/h1&gt;\n        &lt;p&gt;Mon super paragraphe&lt;/p&gt;\n        &lt;img src=\"mon_image.png\" alt=\"ma superbe image\" /&gt;\n    &lt;/body&gt;\n    &lt;footer&gt;\n        &lt;p&gt;Un pied de page&lt;/p&gt;\n    &lt;/footer&gt;\n&lt;/html&gt;\n</code></pre> <p>L'arbre (appel\u00e9 arbre DOM) repr\u00e9sentant ce code HTML est le suivant :</p> <p> </p> Arbre DOM d'une page HTML <p>Exercice 2</p> <p>\u00c0 votre tour, dessinez l'arbre DOM repr\u00e9sentant la page HTML suivante :</p> <pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;link href=\"main.css\" rel=\"stylesheet\"&gt;\n        &lt;title&gt;Pok\u00e9mons&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;section&gt;\n            &lt;h1&gt;Types des pok\u00e9mons&lt;/h1&gt;\n            &lt;ul&gt;\n                &lt;li&gt;FEU&lt;/li&gt;\n                &lt;li&gt;FOUDRE&lt;/li&gt;\n                &lt;li&gt;EAU&lt;/li&gt;\n                &lt;li&gt;HERBE&lt;/li&gt;\n                &lt;li&gt;NORMAL&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/section&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ol> <li>Quelle est la taille de l'arbre obtenu ?</li> <li>Quelle est la hauteur de l'arbre obtenu :</li> <li>Si la profondeur de la racine est de 0 ?</li> <li>Si la profondeur de la racine est de 1 ?</li> <li>Quels types d'\u00e9l\u00e9ments repr\u00e9sentent les feuilles de l'arbre ?</li> <li>Si les n\u0153uds de l'arbre \u00e9taient des instances d'une classe <code>Noeud</code> caract\u00e9ris\u00e9s par une \u00e9tiquette (<code>html</code>, <code>body</code>, etc) et des donn\u00e9es, quelles pourraient \u00eatre ces donn\u00e9es ? (voir la balise <code>meta</code> ou <code>link</code> du code ci-dessus.)</li> </ol>"},{"location":"terminale/arbres/exercices_vocabulaire/#arbre-dune-expression-arithmetique","title":"Arbre d'une expression arithm\u00e9tique","text":"<p>Voici un arbre binaire repr\u00e9sentant l'expression arithm\u00e9tique \\((6 + 9) / 3\\) :</p> <p> </p> Arbre d'une expression arithm\u00e9tique <p>Exercice 3</p> <p>\u00c0 votre tour, dessinez l'arbre binaire correspondant \u00e0 l'expression \\(\\frac{5*8}{30-(8*3)}\\).</p> <ol> <li>Pour quels op\u00e9rateurs le positionnement (gauche, droit) des op\u00e9randes a une importance ? Pourquoi ?</li> <li>Quelle est la taille de l'arbre obtenu ?</li> <li>Quelles sont les feuilles de l'arbre ? Quelle remarque pouvez-vous faire ?</li> </ol> <p> En consid\u00e9rant que la profondeur de la racine est de 0 :</p> <ol> <li>Quelle est la profondeur des feuilles les moins \u00e9loign\u00e9es de la racine ?</li> <li>Quelle est la hauteur de l'arbre ?</li> </ol>"},{"location":"terminale/arbres/exercices_vocabulaire/#encadrement-de-la-hauteur","title":"Encadrement de la hauteur","text":"<p>Pour l'exercice suivant, on consid\u00e9rera que la profondeur de la racine d'un arbre est de 1. Voici deux arbres binaires :</p> <p> </p> Deux arbres binaires <p>Exercice 4</p> <ol> <li>Parmi ces deux arbres, lequel est un arbre filiforme ? Un arbre complet ?</li> <li>\u00c0 quelle autre structure de donn\u00e9es s'apparente un arbre filiforme ? Pourquoi ?</li> <li>Quelle est la taille de ces deux arbres ?</li> <li>Quelles sont toutes les hauteurs possibles pour une taille \\(n = 5\\) ?</li> <li>\u00c9tablissez une relation entre la taille d'un arbre not\u00e9e \\(n\\) et la hauteur de cet arbre not\u00e9e \\(h\\), dans le cas o\u00f9 l'arbre est filiforme.</li> <li> <ol> <li>Compl\u00e9tez l'arbre B de mani\u00e8re \u00e0 obtenir un arbre parfait.</li> <li>Combien y a t-il de n\u0153uds de profondeur 1, 2 et 3  dans cet arbre parfait ? En d\u00e9duire combien il y aurait de noeuds de profondeur 4 et 5 dans un arbre parfait de hauteur 5 (vous pouvez dessiner un tableau).</li> <li>\u00c9tablissez une relation entre le nombre de n\u0153uds \u00e0 une certaine profondeur, not\u00e9 \\(n_{p}\\), en fonction de cette profondeur, not\u00e9e \\(p\\).</li> <li>En d\u00e9duire une expression calculant la taille \\(n\\) (nombre de n\u0153uds) d'un arbre parfait en fonction de sa hauteur \\(h\\).</li> </ol> </li> <li>Enfin, proposez d'abord un encadrement de la taille d'un arbre binaire not\u00e9e \\(n\\) en fonction de la hauteur not\u00e9e \\(h\\) (en utilisant vos r\u00e9ponses aux questions <code>5.</code> et <code>6.d.</code>). \u00c0 partir de l'encadrement pr\u00e9c\u00e9dent, d\u00e9duire un encadrement de la hauteur d'un arbre binaire en fonction de sa taille.</li> </ol>"},{"location":"terminale/arbres/exercices_vocabulaire/#denombrement-darbres-binaires","title":"D\u00e9nombrement d'arbres binaires","text":"<p>Exercice 5</p> <p>Dessinez et d\u00e9nombrez tous les arbres binaires possibles :</p> <ul> <li>pour une taille \\(n = 1\\),</li> <li>pour une taille \\(n = 2\\),</li> <li>pour une taille \\(n = 3\\),</li> <li>pour une taille \\(n = 4\\)</li> </ul> <p>Sans les dessiner et en vous aidant des r\u00e9ponses pr\u00e9c\u00e9dentes, d\u00e9terminez le nombre d'arbres de taille \\(n = 5\\).</p> Indice 1 exercice 5 <p>Vous pouvez d\u00e9nombrer les arbres de taille \\(n = 5\\) en faisant la somme des arbres dont les noeuds sont r\u00e9partis de la mani\u00e8re suivante :</p> <ul> <li>1 noeud racine et 4 noeuds \u00e0 droite</li> <li>1 noeud racine et 4 noeuds \u00e0 gauche</li> <li>1 noeud racine, 3 noeuds \u00e0 gauche et 1 noeud \u00e0 droite</li> <li>1 noeud racine, 1 noeud \u00e0 gauche et 3 noeud \u00e0 droite</li> <li>1 noeud racine, 2 noeuds \u00e0 gauche et 2 noeuds \u00e0 droite</li> </ul> <p></p> <p>En comptant le nombre de possibilit\u00e9s pour ces 5 cas, vous obtiendrez le nombre total d'arbres de taille \\(n = 5\\).</p> Indice 2 exercice 5 <p>Le nombre d'arbres d'une taille \\(n\\) donn\u00e9e peut \u00eatre calcul\u00e9 avec le nombre de Catalan, voir page Wikipedia pour plus d'informations. (Bien s\u00fbr, ce n'est pas au programme.)</p> <p>Donc, pour une taille \\(n = 5\\) : \\(C_{5} = \\frac{(2n)!}{(n+1)!n!} = \\frac{10!}{6!*5!} = \\frac{5040}{120} = 42\\)</p> <p>Il y a donc 42 arbres de taille 5.</p>"},{"location":"terminale/arbres/implementation_abr/","title":"Impl\u00e9mentation d'un arbre binaire de recherche","text":""},{"location":"terminale/arbres/implementation_abr/#implementation-dun-arbre-binaire-de-recherche","title":"Impl\u00e9mentation d'un arbre binaire de recherche","text":"<p>L'impl\u00e9mentation d'un arbre binaire de recherche peut se faire de la m\u00eame fa\u00e7on que celle d'un arbre binaire classique. On va ici r\u00e9utiliser notre classe <code>Arbre</code> cr\u00e9\u00e9e lors de l'activit\u00e9 pr\u00e9c\u00e9dente.</p> <p>Cette activit\u00e9 sera divis\u00e9e en deux parties, qui consisteront \u00e0 :</p> <ul> <li>\u00e9crire des m\u00e9thodes permettant de v\u00e9rifier si un arbre binaire est un arbre binaire de recherche,</li> <li>\u00e9crire une m\u00e9thode de recherche et d'insertion dans un arbre binaire de recherche.</li> </ul> <p>Note : Par la suite, pour simplifier la r\u00e9daction, on utilisera parfois le terme \"arbre\" pour d\u00e9signer un arbre binaire.</p> <p>Op\u00e9rations de base</p> <p>En plus des op\u00e9rations \\(est\\_vide\\), \\(est\\_feuille\\), \\(gauche\\), \\(droite\\), \\(racine\\), \\(valeur\\_racine\\) et \\(parcours\\_infixe\\) d\u00e9j\u00e0 vues, on d\u00e9finit ici de nouvelles op\u00e9rations.</p> <p>Trois op\u00e9rations visant \u00e0 v\u00e9rifier si l'arbre binaire est un arbre binaire de recherche :</p> <ul> <li>\\(maximum : Arbre \\rightarrow Int\\) : Renvoie la valeur maximale parmi les valeurs des noeuds d'un arbre binaire NON vide.</li> <li>\\(minimum : Arbre \\rightarrow Int\\) : Renvoie la valeur minimale parmi les valeurs des noeuds d'un arbre binaire NON vide.</li> <li>\\(est\\_ABR :~Arbre \\rightarrow Bool\\) : Renvoie True si un arbre binaire est un arbre binaire de recherche, False sinon.</li> </ul> <p>Dans le cas o\u00f9 l'arbre binaire est un arbre binaire de recherche, les op\u00e9rations de recherche et d'insertion sont ainsi d\u00e9finies :</p> <ul> <li>\\(rechercher :~Arbre \\times Element \\rightarrow Bool\\) : Renvoie True s'il existe un noeud de l'arbre binaire de recherche contenant la valeur donn\u00e9e, False sinon.</li> <li>\\(inserer :~Arbre \\times Element \\rightarrow Arbre\\) : Ins\u00e8re un nouveau noeud de valeur donn\u00e9e \u00e0 sa bonne position dans l'arbre binaire de recherche.</li> </ul> <p>Pour cette activit\u00e9, on \u00e9crira toutes les op\u00e9rations sous la forme de m\u00e9thodes. </p> Rappel concernant la cr\u00e9ation et l'appel de m\u00e9thodes <p>Une m\u00e9thode est une fonction d\u00e9finie \u00e0 l'int\u00e9rieur d'une classe. Elle prend toujours un param\u00e8tre self, puis \u00e9ventuellement d'autres param\u00e8tres :</p> <p></p><pre><code>class Arbre:\n    def __init__(self, valeur_racine=None, gauche=None, droite=None):\n        # Une m\u00e9thode sp\u00e9ciale : le constructeur de la classe\n        ...\n\n    def gauche(self: 'Arbre') -&gt; 'Arbre':\n        # Renvoie le sous-arbre gauche de l'arbre\n        ...\n\n    def droite(self: 'Arbre') -&gt; 'Arbre':\n        # Renvoie le sous-arbre droit de l'arbre\n        ...\n\n    def est_vide(self: 'Arbre') -&gt; bool:\n        # Renvoie True si l'arbre est vide, False sinon\n        ...\n\n    def est_present(self: 'Arbre', val: 'int|str') -&gt; bool:\n        # Renvoie True s'il existe un noeud de valeur val dans l'arbre, False sinon\n        ...\n</code></pre> Lors de l'appel \u00e0 une m\u00e9thode, on ne donne pas d'argument pour le param\u00e8tre self car il correspond \u00e0 l'adresse de l'objet sur lequel elle est appel\u00e9e. Si l'on souhaite par exemple savoir si le sous-arbre gauche d'un arbre binaire dont l'adresse est stock\u00e9e dans une variable <code>ab</code> est vide, il faudra \u00e9crire : <pre><code>ab.gauche().est_vide()\n</code></pre> Si l'on souhaite maintenant savoir si le sous-arbre droit d'un arbre binaire dont l'adresse est stock\u00e9e dans une variable <code>ab</code> contient un noeud de valeur 42, il faudra \u00e9crire : <pre><code>ab.droite().est_present(42)\n</code></pre> <p>\u00c0 t\u00e9l\u00e9charger</p> <p>R\u00e9cup\u00e9rez le fichier suivant :</p> <ul> <li>abr.py - Classe <code>Arbre</code> \u00e0 compl\u00e9ter repr\u00e9sentant un arbre binaire avec les nouvelles m\u00e9thodes relatives aux arbres binaires de recherche.</li> </ul> Si vous souhaitez utiliser les fonctions de dessin avec Graphviz <p>Ce n'est pas obligatoire, mais si vous souhaitez, comme pour l'activit\u00e9 pr\u00e9c\u00e9dente, pouvoir afficher un dessin de votre arbre, les fichiers \u00e0 avoir sur votre machine sont toujours les m\u00eames :</p> <ul> <li>dessin.py - Quelques fonctions annexes utilis\u00e9es pour dessiner un arbre avec le module <code>Graphviz</code>. (Vous n'avez pas besoin d'ouvrir ou de modifier ce fichier.)</li> </ul> <p>Si vous utilisez les machines du lyc\u00e9e (sinon, voir cette page pour la proc\u00e9dure pour installer Graphviz chez vous) :</p> <ul> <li>windows_graphviz.zip - D\u00e9compressez l'archive dans le r\u00e9pertoire o\u00f9 se trouvent vos fichiers Python. Vous devez avoir <code>abr.py</code>, <code>dessin.py</code> et un dossier <code>Graphviz</code> au m\u00eame endroit.Contient les ex\u00e9cutables de Graphviz.</li> </ul> <p>Pour utiliser les fonctions de <code>dessin.py</code>, vous devez \u00e9galement d\u00e9-commenter la premi\u00e8re ligne <code>from dessin import dessiner</code> du fichier <code>abr.py</code>, qui a \u00e9t\u00e9 comment\u00e9e pour \u00e9viter les erreurs.</p> Correction compl\u00e8te <p>Voici une correction compl\u00e8te des m\u00e9thodes et fonctions du fichier <code>abr.py</code>.</p> <p></p> T\u00e9l\u00e9charger le fichier <code>abr_corr.pu</code> <p>Important</p> <p>Ici, on a fait le choix de travailler avec une structure immuable. En l'occurence, la m\u00e9thode <code>inserer</code> renvoie un nouvel arbre binaire de recherche, et ne modifie pas directement l'arbre sur lequel elle est appel\u00e9e.</p> <p>Tester son programme avec le module doctest</p> <p>Plusieurs tests ont \u00e9t\u00e9 r\u00e9dig\u00e9s dans la docstring du constructeur de la classe. Rien ne vous emp\u00eache de rajouter davantage de tests si vous le souhaitez.</p> <p>Pour tester votre programme, vous avez simplement \u00e0 ex\u00e9cuter celui-ci, et s'il n'y a pas d'erreurs, il ne se passera rien. S'il y a des erreurs, vous obtiendrez des d\u00e9tails sur les tests qui n'ont pas fonctionn\u00e9.</p> <p>Pour activer le mode \"verbeux\" et obtenir encore plus de d\u00e9tails sur les erreurs, vous pouvez passer le param\u00e8tre <code>verbose</code> \u00e0 <code>True</code> (sur la toute derni\u00e8re ligne du programme).</p>"},{"location":"terminale/arbres/implementation_abr/#maximum-et-minimum","title":"Maximum et minimum","text":"<p>Pour pouvoir \u00e9crire une m\u00e9thode permettant de d\u00e9finir si un arbre binaire est un arbre binaire de recherche, on se propose d'abord d'\u00e9crire deux m\u00e9thodes permettant de d\u00e9terminer la valeur minimale et la valeur maximale des noeuds d'un arbre binaire de mani\u00e8re g\u00e9n\u00e9rale.</p> <p>Ces deux fonctions :</p> <ul> <li>ne sont d\u00e9finies que pour des arbres binaires non vides, comme indiqu\u00e9 dans les CU (Conditions d'Utilisation) de la fonction,</li> <li>n\u00e9cessitent d'identifier un cas de base et plusieurs cas r\u00e9cursifs.</li> </ul> <p>Vous pourrez utiliser les fonctions <code>min</code> et <code>max</code> de Python, qui renvoient respectivement le minimum et le maximum parmi plusieurs \u00e9l\u00e9ments, ou parmi les \u00e9l\u00e9ments d'une liste/d'un tuple.</p> <p>Exercice 1</p> <p>\u00c9crire le code Python des m\u00e9thodes <code>minimum</code> et <code>maximum</code>.</p> Aide - Exercice 1 <p>Vous pouvez distinguer les 4 cas suivants :</p> <ul> <li>Le cas o\u00f9 l'arbre donn\u00e9 est une feuille (= sous-arbres gauche et droit vides), qui est le cas de base</li> <li>Le cas o\u00f9 le sous-arbre gauche uniquement est vide</li> <li>Le cas o\u00f9 le sous-arbre droit uniquement est vide</li> <li>Le cas o\u00f9 les deux sous-arbres sont NON vides</li> </ul> Encore plus d'aide - Exercice 1 <p>Voici une partie du code, \u00e0 compl\u00e9ter.</p> <pre><code>def minimum(self: 'Arbre') -&gt; int:\n''' Renvoie la valeur minimale des noeuds de l'arbre\n:CU: L'arbre n'est PAS vide '''\n\nif self.est_feuille():\n    ...\nelif self.gauche().est_vide():\n    return min(self.valeur_racine(), self.droite().minimum())\nelif self.droite().est_vide():\n    ...\nelse:\n    ...\n</code></pre> Solution - Exercice 1 <pre><code>def minimum(self: 'Arbre') -&gt; int:\n''' Renvoie la valeur minimale des noeuds de l'arbre\n:CU: L'abre n'est PAS vide '''\n\nif self.est_feuille():\n    return self.valeur_racine()\nelif self.gauche().est_vide():\n    return min(self.valeur_racine(), self.droite().minimum())\nelif self.droite().est_vide():\n    return min(self.valeur_racine(), self.gauche().minimum())\nelse:\n    return min(self.gauche().minimum(), self.valeur_racine(), self.droite().minimum())\n\ndef maximum(self: 'Arbre') -&gt; int:\n''' Renvoie la valeur maximale des noeuds de l'arbre\n:CU: L'arbre n'est PAS vide '''\n\nif self.est_feuille():\n    return self.valeur_racine()\nelif self.gauche().est_vide():\n    return max(self.valeur_racine(), self.droite().maximum())\nelif self.droite().est_vide():\n    return max(self.valeur_racine(), self.gauche().maximum())\nelse:\n    return max(self.gauche().maximum(), self.valeur_racine(), self.droite().maximum())\n</code></pre>"},{"location":"terminale/arbres/implementation_abr/#la-methode-est_abr","title":"La m\u00e9thode <code>est_abr</code>","text":"<p>On peut maintenant \u00e9crire une m\u00e9thode qui permet de v\u00e9rifier qu'un arbre binaire cr\u00e9\u00e9 avec la classe <code>Arbre</code> soit un arbre binaire de recherche.</p> <p>Un arbre binaire est un arbre binaire de recherche si :</p> <ul> <li>l'arbre est vide ou est une feuille,</li> </ul> <p>OU BIEN</p> <ul> <li>si le sous-arbre gauche n'est pas vide, les \u00e9l\u00e9ments des noeuds du sous-arbre gauche sont tous \\(\\leq\\) \u00e0 l'\u00e9l\u00e9ment de la racine, ET</li> <li>si le sous-arbre droit n'est pas vide, les \u00e9l\u00e9ments des noeuds du sous-arbre droit sont tous \\(&gt;\\) \u00e0 l'\u00e9l\u00e9ment de la racine, ET</li> <li>les sous-arbres gauches et droit sont \u00e9galement des arbres binaires de recherche.</li> </ul> <p>La fonction <code>est_abr</code> renvoie donc False si l'une de ces conditions n'est pas remplie, et renvoie True sinon.</p> <p>Exercice 2</p> <p>\u00c9crire le code Python de la m\u00e9thode <code>est_abr</code>.</p> Aide - Exercice 2 <p>Le cas o\u00f9 l'arbre est vide ou l'arbre est une feuille est le cas de base, non r\u00e9cursif. Dans ce cas-l\u00e0, on consid\u00e8re que l'arbre est un arbre binaire de recherche. On renverra donc True si l'on se trouve dans l'un de ces deux cas.</p> <p>Il ne reste plus qu'\u00e0 v\u00e9rifier les trois autres conditions \u00e9voqu\u00e9es pr\u00e9c\u00e9demment. Une solution est de v\u00e9rifier, pour chaque condition, si elle n'est pas remplie, et de renvoyer False le cas \u00e9ch\u00e9ant. Une fois que les trois conditions ont \u00e9t\u00e9 v\u00e9rifi\u00e9es, on renvoie donc True.</p> Encore plus d'aide - Exercice 2 <p>Voici une partie du code, \u00e0 compl\u00e9ter.</p> <pre><code>def est_ABR(self: 'Arbre') -&gt; bool:\n''' Renvoie True si l'arbre binaire est un arbre binaire de recherche, False sinon. '''\n\nif self.est_vide() or self.est_feuille():\n    return ...\nelse:\n    if not self.gauche().est_vide() and self.gauche().maximum() &gt; self.valeur_racine():\n        return ...\n    if ... and ... :\n        return ...\n    if ... or ... :\n        return ...\n    return ...\n</code></pre> Solution - Exercice 2 <pre><code>def est_ABR(self: 'Arbre') -&gt; bool:\n''' Renvoie True si l'arbre binaire est un arbre binaire de recherche, False sinon. '''\n\nif self.est_vide() or self.est_feuille():\n    return True\nelse:\n    if not self.gauche().est_vide() and not self.gauche().maximum() &lt;= self.valeur_racine():\n        return False\n    if not self.droite().est_vide() and not self.droite().minimum() &gt; self.valeur_racine():\n        return False\n    if not self.gauche().est_ABR() or not self.droite().est_ABR():\n        return False\n    return True\n</code></pre> <p>Une autre solution plus simple pour v\u00e9rifier si un arbre binaire est un arbre binaire de recherche est de v\u00e9rifier si la liste des valeurs des noeuds visit\u00e9s en ordre infixe est tri\u00e9e.</p> <p>Exercice 3</p> <p>Compl\u00e9tez le corps de la m\u00e9thode <code>est_ABR_v2</code>.</p> Aide - Exercice 3 <p>Il suffit simplement de v\u00e9rifier que la liste <code>lst_valeurs</code> soit tri\u00e9e en la parcourant et en v\u00e9rifiant que chaque \u00e9l\u00e9ment soit sup\u00e9rieur \u00e0 l'\u00e9l\u00e9ment qui le pr\u00e9c\u00e8de. Si l'on se rend compte qu'un \u00e9l\u00e9ment est inf\u00e9rieur \u00e0 son pr\u00e9decesseur, on renvoie False. Sinon, on renvoie True.</p> Solution - Exercice 3 <pre><code>def est_ABR_v2(self: 'Arbre') -&gt; bool:\n''' Renvoie True si l'arbre binaire est un arbre binaire de recherche, False sinon.\nAutre version, v\u00e9rifiant si la liste des noeuds visit\u00e9s en ordre infixe est tri\u00e9e dans l'ordre croissant. '''\n\nlst_valeurs = self.parcours_infixe()  # R\u00e9cup\u00e9rer la liste des valeurs des noeuds visit\u00e9s en parcours infixe\nfor i in range(len(lst_valeurs) - 1):\n    if not lst_valeurs[i] &lt;= lst_valeurs[i + 1]:\n        return False\nreturn True\n</code></pre>"},{"location":"terminale/arbres/implementation_abr/#recherche-dans-un-arbre-binaire-de-recherche","title":"Recherche dans un arbre binaire de recherche","text":"<p>\u00c0 savoir pour le bac</p> <p>L'algorithme de recherche dans un arbre binaire de recherche fait partie des algorithmes \u00e0 ma\u00eetriser pour le baccalaur\u00e9at.</p> <p>Comme cela a \u00e9t\u00e9 vu dans les exercices, la rercherche dans un arbre binaire de recherche se d\u00e9roule de la mani\u00e8re suivante.</p> <p>D\u00e9roulement <code>rechercher</code></p> <p>Pr\u00e9condition : l'arbre donn\u00e9 est un arbre binaire de recherche. L'algorithme <code>rechercher</code> se d\u00e9roule comme suit :</p> <ul> <li>Si l'arbre binaire est vide : on renvoie Faux.</li> <li>Sinon (l'arbre binaire n'est pas vide):<ul> <li>Si la valeur de la racine de l'arbre est \u00e9gale \u00e0 l'\u00e9l\u00e9ment recherch\u00e9 : on renvoie Vrai.</li> <li>Sinon, si l'\u00e9l\u00e9ment recherch\u00e9 est inf\u00e9rieur ou \u00e9gal \u00e0 la valeur de la racine de l'arbre, <code>rechercher</code> l'\u00e9l\u00e9ment dans le sous-arbre gauche.</li> <li>Sinon, on <code>rechercher</code> l'\u00e9l\u00e9ment dans le sous-arbre droit.</li> </ul> </li> </ul> <p>Exercice 4</p> <p>En vous aidant du d\u00e9roulement d\u00e9crit ci-dessus, \u00e9crire le code Python de la m\u00e9thode <code>rechercher</code>. Remarque : On aura pas besoin de rajouter une condition dans le code pour v\u00e9rifier si l'arbre binaire est bien un arbre binaire de recherche, car cela a \u00e9t\u00e9 sp\u00e9cifi\u00e9 en tant que pr\u00e9condition (ou CU, pour condition d'utilisation) : <code>''' :CU: self.est_ABR() == True '''</code></p> Solution - Exercice 4 <pre><code>def rechercher(self: 'Arbre', elt: 'int|str') -&gt; bool:\n''' Recherche l'\u00e9l\u00e9ment elt dans l'arbre, renvoie True s'il est trouv\u00e9, False sinon.\n:CU: self.est_ABR() == True '''\n\nif self.est_vide():\n    return False\nelif self.valeur_racine() == elt:\n    return True\nelif elt &lt;= self.valeur_racine():\n    return self.gauche().rechercher(elt)\nelse:\n    return self.droite().rechercher(elt)\n</code></pre>"},{"location":"terminale/arbres/implementation_abr/#insertion-dans-un-arbre-binaire-de-recherche","title":"Insertion dans un arbre binaire de recherche","text":"<p>\u00c0 savoir pour le bac</p> <p>L'algorithme d'insertion dans un arbre binaire de recherche fait partie des algorithmes \u00e0 ma\u00eetriser pour le baccalaur\u00e9at.</p> <p>Enfin, l'insertion dans un arbre binaire de recherche est assez similaire \u00e0 la recherche.</p> <p>D\u00e9roulement <code>inserer</code></p> <p>Pr\u00e9condition : l'arbre donn\u00e9 est un arbre binaire de recherche. L'algorithme <code>inserer</code> se d\u00e9roule comme suit :</p> <ul> <li>Si l'arbre binaire est vide : on renvoie une nouvelle feuille contenant l'\u00e9l\u00e9ment \u00e0 ins\u00e9rer.</li> <li>Sinon (l'arbre binaire n'est pas vide):<ul> <li>Si l'\u00e9l\u00e9ment \u00e0 ins\u00e9rer est inf\u00e9rieur ou \u00e9gal \u00e0 la valeur de la racine de l'arbre, <code>inserer</code> l'\u00e9l\u00e9ment dans le sous-arbre gauche. On renvoie l'arbre r\u00e9sultant de cette insertion.</li> <li>Sinon, <code>inserer</code> l'\u00e9l\u00e9ment dans le sous-arbre droit. On renvoie l'arbre r\u00e9sultant de cette insertion.</li> </ul> </li> </ul> <p>Exercice 5</p> <p>En vous aidant du d\u00e9roulement d\u00e9crit ci-dessus, \u00e9crire le code Python de la m\u00e9thode <code>inserer</code>. Attention, <code>inserer</code> doit toujours renvoyer un objet de type <code>Arbre</code>. Remarque : Ici \u00e9galement, on aura pas besoin de rajouter une condition dans le code pour v\u00e9rifier si l'arbre binaire est bien un arbre binaire de recherche.</p> Solution - Exercice 5 <pre><code>def inserer(self: 'Arbre', elt: 'int|str') -&gt; 'Arbre':\n''' Ins\u00e8re l'\u00e9l\u00e9ment elt dans l'arbre \n:CU: self.est_ABR() == True '''\n\nif self.est_vide():\n    return Arbre(elt, Arbre(), Arbre())\nelif elt &lt;= self.valeur_racine():\n    return Arbre(self.valeur_racine(), self.gauche().inserer(elt), self.droite())\nelse:\n    return Arbre(self.valeur_racine(), self.gauche(), self.droite().inserer(elt))\n</code></pre>"},{"location":"terminale/arbres/implementation_abr/#trier-une-liste-avec-un-arbre-binaire-de-recherche","title":"Trier une liste avec un arbre binaire de recherche","text":"<p>Exercice 6</p> <p>Compl\u00e9ter la fonction <code>trier</code> qui prend une liste d'\u00e9l\u00e9ments et renvoie une nouvelle liste contenant les m\u00eames \u00e9l\u00e9ments, mais tri\u00e9s par ordre croissant. Vous devez pour cela utiliser un arbre binaire de recherche et la m\u00e9thode <code>parcours_infixe</code>.</p> <p>Attention : Il s'agit d'une fonction plac\u00e9e en dehors de la classe, et non pas d'une m\u00e9thode de <code>Arbre</code>.</p> Aide - Exercice 6 <p>Il suffit simplement de :</p> <ul> <li>cr\u00e9er un nouvel arbre binaire de recherche vide,</li> <li>de parcourir la liste \u00e0 trier en ins\u00e9rant chaque \u00e9l\u00e9ment dans l'arbre,</li> <li>puis d'appeler la fonction <code>parcours_infixe</code> sur l'arbre cr\u00e9\u00e9 pour obtenir la liste des valeurs des n\u0153uds tri\u00e9e dans l'ordre croissant.</li> </ul> <p>Si l'on souhaite cr\u00e9er un nouvel arbre binaire vide dans une variable <code>abr</code>, on devra donc \u00e9crire : </p><pre><code>abr = Arbre()\n</code></pre> Solution - Exercice 6 <pre><code>def trier(liste: list) -&gt; list:\n''' Trie les \u00e9l\u00e9ments (int|str) d'une liste dans l'ordre croissant.\nRenvoie la liste tri\u00e9e. '''\n\nabr = Arbre()  # cr\u00e9ation d'un arbre binaire (de recherche)\nfor el in liste:  # pour chaque \u00e9l\u00e9ment de la liste\n    abr = abr.inserer(el)  # ins\u00e9rer l'\u00e9l\u00e9ment dans l'abr\nreturn abr.parcours_infixe()  # renvoyer r\u00e9sultat du parcours infixe de l'abr\n</code></pre>"},{"location":"terminale/arbres/implementation_abr/#aller-plus-loin-minimum-et-maximum-dun-arbre-binaire-de-recherche","title":"Aller plus loin : minimum et maximum d'un arbre binaire de recherche","text":"<p>Pour trouver le plus petit \u00e9l\u00e9ment d'un arbre binaire de recherche, on proc\u00e8de comme suit : </p> <ul> <li>Si l'arbre n'a pas de sous-arbre gauche, son minimum est alors la valeur de sa racine. </li> <li>Sinon, il s'agit du minimum (r\u00e9cursivement) de son sous-arbre gauche. </li> </ul> <p>Pour le maximum, c'est le m\u00eame principe mais avec le sous-arbre droit.</p> <p>Exercice 7</p> <p>Compl\u00e9tez les m\u00e9thodes <code>minimum_abr</code> et <code>maximum_abr</code> qui renvoient la valeur minimale et la valeur maximale des n\u0153uds de l'arbre dans le cas d'un arbre binaire de recherche.</p> Solution - Exercice 7 <pre><code>def minimum_abr(self: 'Arbre') -&gt; int:\n    ''' Renvoie la valeur minimale des noeuds de l'arbre binaire de recherche\n    :CU: self.est_ABR() == True and not self.est_vide() '''\n\n    if self.gauche().est_vide():\n        return self.valeur_racine()\n    else:\n        return self.gauche().minimum_abr()\n\ndef maximum_abr(self: 'Arbre') -&gt; int:\n    ''' Renvoie la valeur maximale des noeuds de l'arbre binaire de recherche\n    :CU: self.est_ABR() == True and not self.est_vide() '''\n\n    if self.droite().est_vide():\n        return self.valeur_racine()\n    else:\n        return self.droite().maximum_abr()\n</code></pre>"},{"location":"terminale/arbres/implementation_arbres/","title":"Impl\u00e9mentation d'un arbre binaire","text":""},{"location":"terminale/arbres/implementation_arbres/#implementation-dun-arbre-binaire","title":"Impl\u00e9mentation d'un arbre binaire","text":"<p>Il y a de nombreuses mani\u00e8res d'impl\u00e9menter un arbre binaire.</p> <p>Dans cette partie, on proposera une mani\u00e8re parmi d'autres d'impl\u00e9menter cette structure de donn\u00e9es. Pour vous entra\u00eener sur d'autres impl\u00e9mentations, voir la partie exercices.</p> <p>En langage Python, on ne peut pas avoir plusieurs constructeurs dans une classe. On aura donc un seul constucteur pouvant \u00eatre appel\u00e9 de deux fa\u00e7ons diff\u00e9rentes :</p> <ul> <li><code>Arbre()</code> : cr\u00e9ation d'un arbre binaire vide, les attributs <code>racine</code>, <code>gauche</code> et <code>droite</code> seront automatiquement affect\u00e9s \u00e0 <code>None</code>.</li> <li><code>Arbre(racine, gauche, droite)</code> : cr\u00e9ation d'un arbre binaire non vide, dont la <code>racine</code> est la valeur (l'\u00e9tiquette) du noeud racine, et <code>gauche</code> et <code>droite</code> sont \u00e9galement de type <code>Arbre</code>.</li> </ul> <p>Note : Une feuille est donc une instance  de <code>Arbre</code> dont le sous-arbre gauche et le sous-arbre droit sont des arbres vides.</p> <p>\u00c0 t\u00e9l\u00e9charger</p> <p>R\u00e9cup\u00e9rez les fichiers suivants :</p> <ul> <li>arbre_binaire.py - Classe <code>Arbre</code> \u00e0 compl\u00e9ter repr\u00e9sentant un arbre binaire.</li> <li>dessin.py - Quelques fonctions annexes utilis\u00e9es pour dessiner un arbre avec le module <code>Graphviz</code>. (Vous n'avez pas besoin d'ouvrir ou de modifier ce fichier.)</li> </ul> <p>Si vous utilisez les machines du lyc\u00e9e:</p> <ul> <li>windows_graphviz.zip - D\u00e9compressez l'archive dans le r\u00e9pertoire o\u00f9 se trouvent vos fichiers Python. Vous devez avoir <code>arbre_binaire.py</code>, <code>dessin.py</code> et un dossier <code>Graphviz</code> au m\u00eame endroit.Contient les ex\u00e9cutables de Graphviz.</li> </ul> Correction op\u00e9rations base <p>Voici la classe <code>Arbre</code> incluant la correction des op\u00e9rations de base :</p> <ul> <li>arbre_binaire_base.py</li> </ul> Installation de Graphviz sur votre machine personnelle <p>Pour utiliser la fonction <code>dessiner</code>, le module <code>Graphviz</code> et les ex\u00e9cutables associ\u00e9s doivent \u00eatre install\u00e9s sur votre machine. Voici comment proc\u00e9der.</p> <p>\u00c9tape 1 - Installer le module Graphviz</p> <p>M\u00e9thode 1 :</p> <p>Dans Thonny, allez dans l'onglet \"Outils\", puis \"G\u00e9rer les paquets\". Recherchez \"graphviz\", puis cliquez sur le bouton Installer.</p> <p>M\u00e9thode 2 :</p> <p>Ouvrez l'invite de commande Windows (ou le terminal si vous utilisez Linux), puis ex\u00e9cutez simplement la commande suivante :</p> <pre><code>pip install graphviz\n</code></pre> <p>\u00c9tape 2 - Installer les ex\u00e9cutables</p> <p>Si vous \u00eates sur Windows, cliquez ici puis t\u00e9l\u00e9chargez et installez la derni\u00e8re version de Graphviz (choisissez l'<code>EXE Installer</code> correspondant \u00e0 la version de votre syst\u00e8me d'exploitation, 32 bits ou 64 bits. Si vous avez un doute, choisissez la version 32 bits ou lisez cet article pour conna\u00eetre la version de votre syst\u00e8me.)</p> <p>Si vous \u00eates sur Linux, cliquez ici puis installez le paquet <code>graphviz</code> en ex\u00e9cutant dans le terminal la commande associ\u00e9e \u00e0 votre distribution (Ubuntu, Fedora, etc.).</p> <p>Si vous \u00eates sur macOS, cliquez ici puis ex\u00e9cutez l'une des commandes indiqu\u00e9es.</p>"},{"location":"terminale/arbres/implementation_arbres/#operations-de-base","title":"Op\u00e9rations de base","text":"<p>Int\u00e9ressons-nous d'abord aux op\u00e9rations de base pouvant \u00eatre effectu\u00e9es sur notre arbre.</p> <p>On d\u00e9finira ces op\u00e9rations sous les deux formes suivantes :</p> <ul> <li>avec des m\u00e9thodes dans notre classe,</li> <li>avec des fonctions d'interface en dehors de la classe, qui prendront un objet de type <code>Arbre</code> en entr\u00e9e.</li> </ul> <p>Note</p> <p>On pourra donc effectuer nos op\u00e9rations de base de deux mani\u00e8res diff\u00e9rentes. Si l'on cr\u00e9e un arbre binaire dans une variable <code>mon_arbre</code> et que l'on souhaite, par exemple, r\u00e9cup\u00e9rer la valeur de sa racine, on pourra soit \u00e9crire <code>valeur_racine(mon_arbre)</code>, soit <code>mon_arbre.valeur_racine()</code>.</p> <p>On a choisi de faire ainsi pour simplifier les choses et \u00e9viter les confusions, mais il faut bien faire la diff\u00e9rences entre l'appel de m\u00e9thodes associ\u00e9es \u00e0 un objet, et l'appel de fonctions d\u00e9finies hors d'une classe.</p> <pre><code>''' Classe impl\u00e9mentant un Arbre Binaire. '''\n\nclass Arbre:\n    def __init__(self, valeur=None, gauche=None, droite=None):\n        ''' Cr\u00e9e un nouvel arbre binaire.\n        :param valeur: (int|str) La valeur du noeud racine, soit un entier, soit une cha\u00eene de caract\u00e8res\n        :param gauche: (Arbre) Le sous-arbre binaire gauche (None pour arbre binaire vide)\n        :param droite: (Arbre) Le sous-arbre binaire droit (None pour arbre binaire vide)\n        :CU: Si valeur est \u00e0 None, gauche et droite doivent \u00eatre \u00e9galement \u00e0 None (cas de l'arbre vide),\n        sinon, gauche et droite doivent \u00eatre de type Arbre. '''\n\n        assert (valeur == None and gauche == None and droite == None) or \\\n               (type(valeur) in (int, str) and type(gauche) == Arbre and type(droite) == Arbre)\n\n        self.v = valeur\n        self.g = gauche\n        self.d = droite\n\n    def est_vide(self):\n        ''' Renvoie True si l'arbre binaire est vide, False s'il ne l'est pas. '''\n\n        pass\n\n    def racine(self):\n        ''' Renvoie le Noeud racine de l'arbre binaire.\n        :CU: L'arbre n'est PAS vide '''\n\n        pass\n\n    def valeur_racine(self):\n        ''' Renvoie la valeur de la racine de l'arbre binaire.\n        :CU: L'arbre n'est PAS vide '''\n\n        pass\n\n    def gauche(self):\n        ''' Renvoie le sous-arbre gauche de l'arbre binaire.\n        :CU: L'arbre n'est PAS vide '''\n\n        pass\n\n    def droite(self):\n        ''' Renvoie le sous-arbre droit de l'arbre binaire.\n        :CU: L'arbre n'est PAS vide '''\n        pass\n\n    def est_feuille(self):\n        ''' Renvoie True si l'arbre binaire est une feuille, False s'il ne l'est pas.\n        :CU: L'arbre n'est PAS vide '''\n\n        pass\n\n# Les fonctions d'interface (vous pouvez les utiliser au lieu des m\u00e9thodes, au choix), \u00e0 compl\u00e9ter :\n\ndef est_vide(ab: Arbre) -&gt; bool:\n    ''' Renvoie True si l'arbre binaire ab est vide, False sinon. '''\n\n    pass\n\ndef racine(ab: Arbre) -&gt; Arbre:\n    ''' Renvoie le Noeud racine de l'arbre binaire.\n    :CU: L'arbre n'est PAS vide '''\n\n    pass\n\ndef valeur_racine(ab: Arbre) -&gt; 'int|str':\n    ''' Renvoie la valeur de la racine de l'arbre binaire.\n    :CU: L'arbre n'est PAS vide '''\n\n    pass\n\ndef gauche(ab: Arbre) -&gt; Arbre:\n    ''' Renvoie le sous-arbre gauche de l'arbre binaire.\n    :CU: L'arbre n'est PAS vide '''\n\n    pass\n\ndef droite(ab: Arbre) -&gt; Arbre:\n    ''' Renvoie le sous-arbre droit de l'arbre binaire.\n    :CU: L'arbre n'est PAS vide '''\n\n    pass\n\ndef est_feuille(ab: Arbre) -&gt; bool:\n    ''' Renvoie True si l'arbre binaire est une feuille, False s'il ne l'est pas.\n    :CU: L'arbre n'est PAS vide '''\n\n    pass\n</code></pre> <p>Important</p> <p>Dans cette impl\u00e9mentation, on n'utilise pas de classe <code>Noeud</code> pour repr\u00e9senter les noeuds de l'arbre (ce qui diff\u00e8re du type abstrait). On consid\u00e8re que le noeud racine d'un arbre est l'arbre lui-m\u00eame. La m\u00e9thode nomm\u00e9e <code>racine</code> renverra donc simplement l'adresse de l'instance de la classe <code>Arbre</code>.</p> <p>\u00c0 faire</p> <p>Compl\u00e9tez le corps de chaque m\u00e9thode de la classe <code>Arbre</code>.</p>"},{"location":"terminale/arbres/implementation_arbres/#creation-dun-nouvel-arbre","title":"Cr\u00e9ation d'un nouvel arbre","text":"<p>Essayons de cr\u00e9er l'arbre suivant en utilisant notre classe <code>Arbre</code> :</p> <p> </p> Arbre binaire cr\u00e9\u00e9 avec la classe Arbre <p>Note</p> <p>L'affichage avec <code>Graphviz</code> ne permettant pas toujours de bien distinguer visuellement les sous-arbres gauches des sous-arbres droits, on a ajout\u00e9 l'information <code>G</code> ou <code>D</code> sur chaque ar\u00eate, indiquant respectivement qu'il s'agit du sous-arbre gauche ou du sous-arbre droit.</p> <p>Voici une instruction permettant de cr\u00e9er cet arbre \u00e0 l'aide de notre classe <code>Arbre</code> et de le stocker dans une variable <code>a</code> :</p> <pre><code>    ab = Arbre('C',\n              Arbre('A',\n                    Arbre(),\n                    Arbre('H',\n                          Arbre('D', Arbre(), Arbre()),\n                          Arbre('F', Arbre(), Arbre())\n                          )\n                    ),\n              Arbre('B',\n                    Arbre('G', Arbre(), Arbre()),\n                    Arbre('E', Arbre(), Arbre())\n                    )\n              )\n</code></pre> <p>Bien s\u00fbr, on aurait pu l'\u00e9crire sur une seule ligne :</p> <pre><code>    ab = Arbre('C', Arbre('A', Arbre(), Arbre('H', Arbre('D', Arbre(), Arbre()), Arbre('F', Arbre(), Arbre()))), Arbre('B', Arbre('G', Arbre(), Arbre()), Arbre('E', Arbre(), Arbre())))\n</code></pre> <p>On aurait \u00e9galement pu cr\u00e9er plusieurs variables de mani\u00e8re \u00e0 d\u00e9composer l'arbre :</p> <pre><code>    # Cr\u00e9ation des feuilles\n    fd = Arbre('D', Arbre(), Arbre())\n    ff = Arbre('F', Arbre(), Arbre())\n    fg = Arbre('G', Arbre(), Arbre())\n    fe = Arbre('E', Arbre(), Arbre())\n    # Cr\u00e9ation des sous-arbres\n    sah = Arbre('H', fd, ff)\n    sab = Arbre('B', fg, fe)\n    saa = Arbre('A', Arbre(), sah)\n    # Cr\u00e9ation de l'arbre final\n    ab = Arbre('C', saa, sab)\n</code></pre> <p>Enfin, pour dessiner cet arbre, on peut utiliser la fonction dessiner import\u00e9e depuis <code>dessin.py</code> :</p> <pre><code>    dessiner(ab)\n</code></pre> <p>Si l'on souhaite acc\u00e9der par exemple au noeud ayant pour valeur B, qui est \u00e9quivalent \u00e0 l'arbre dont <code>valeur_racine() == 'B'</code>, on utilisera l'instruction :</p> <p></p><pre><code>    droite(ab).racine()\n</code></pre> ou simplement <pre><code>    droite(ab)\n</code></pre> <p>et si on veut r\u00e9cup\u00e9rer la valeur de ce noeud :</p> <pre><code>    droite(ab).valeur_racine()\n</code></pre> <p>\u00c0 faire</p> <p>Comment r\u00e9cup\u00e9rer la feuille ayant pour valeur D ?</p>"},{"location":"terminale/arbres/implementation_arbres/#quelques-mesures-sur-les-arbres","title":"Quelques mesures sur les arbres","text":"<p>Important</p> <p>Pour les mesures suivantes, on consid\u00e8rera que la profondeur du noeud racine est de 0. Ainsi, on consid\u00e8rera que la hauteur de l'arbre vide est de -1. Il s'agit d'un choix arbitraire, on aurait tr\u00e8s bien pu choisir une profondeur de 1 pour le noeud racine (auquel cas l'arbre vide serait de hauteur 0).</p> <p>On rappelle que pour \u00e9crire des fonctions de mani\u00e8re r\u00e9cursive, vous devez toujours distinguer :</p> <ul> <li>au moins un cas de base (condition d'arr\u00eat), qui ici peut \u00eatre par exemple le cas o\u00f9 l'arbre est vide ou encore le cas o\u00f9 l'arbre est une feuille. Un cas de base est un cas non r\u00e9cursif, pour lequel la valeur renvoy\u00e9e par la fonction est directement d\u00e9finie.</li> <li>au moins un cas g\u00e9n\u00e9ral, ou cas r\u00e9cursif, c'est-\u00e0-dire un cas dans lequel la fonction est appel\u00e9e r\u00e9cursivement et o\u00f9 le r\u00e9sultat renvoy\u00e9 est calcul\u00e9 en utilisant le r\u00e9sultat du (ou des) appel(s) r\u00e9cursif(s). \u00c0 chaque appel r\u00e9cursif, la valeur d'au moins un des param\u00e8tres de la fonction doit changer, de mani\u00e8re \u00e0 converger vers le cas de base.</li> </ul> <p>\u00c0 faire</p> <p>Compl\u00e9tez les fonctions <code>taille</code>, <code>hauteur</code>, <code>nb_feuilles</code> et <code>est_present</code>. Ces fonctions doivent \u00eatre \u00e9crites de mani\u00e8re r\u00e9cursive.</p> Indice pour la fonction <code>taille</code> <p>Pour \u00e9crire cette fonction, qui doit fonctionner autant sur un arbre vide que sur un arbre non vide, il convient d'abord de d\u00e9terminer un cas de base, c'est-\u00e0-dire un cas non r\u00e9cursif de mani\u00e8re \u00e0 ce que l'algorithme s'arr\u00eate \u00e0 un moment donn\u00e9. Sur quel type d'arbres la fonction <code>taille</code> renverra toujours la m\u00eame valeur ?</p> <ul> <li>Si l'on cherche la taille d'un arbre vide, on obtiendra toujours 0 car un arbre vide ne contient pas de noeuds. C'est donc l\u00e0 notre cas de base.</li> </ul> <p>Ensuite, il faut d\u00e9termine un cas g\u00e9n\u00e9ral, c'est-\u00e0-dire un cas o\u00f9 l'on effectue un ou plusieurs appels r\u00e9cursifs \u00e0 <code>taille</code>.</p> <ul> <li>Si l'on cherche la taille d'un arbre non vide, c'est-\u00e0-dire d'un arbre constitu\u00e9 d'un noeud racine, d'un sous-arbre gauche et d'un sous-arbre droit, on peut alors \u00e9tablir que la taille de l'arbre correspond \u00e0 1 (on compte le noeud racine) + la taille du sous-arbre gauche + la taille du sous-arbre droit.Au fur et \u00e0 mesure des appels r\u00e9cursifs, on convergera vers le cas o\u00f9 l'arbre est vide, et donc la fonction finira par se terminer.</li> </ul> <p>Maintenant que l'on a d\u00e9termin\u00e9 ces deux cas en fran\u00e7ais, il ne reste plus qu'\u00e0 les retranscrire en Python.</p> Indice pour la fonction <code>hauteur</code> <p>Cette fonction est assez proche de la fonction <code>taille</code>. On doit pouvoir d\u00e9terminer la hauteur d'un arbre vide ou non.</p> <p>La profondeur du noeud racine est de 0.</p> <ul> <li>On consid\u00e8rera que la hauteur d'un arbre vide est toujours de -1, ce sera donc le cas de base.</li> <li>Pour le cas g\u00e9n\u00e9ral (arbre non vide), il faut compter la racine, donc ajouter 1 \u00e0 la hauteur de l'arbre, puis y ajouter la plus grande hauteur entre celle du sous-arbre gauche et celle du sous-arbre droit (appels r\u00e9cursifs).</li> </ul> <p>Note : La fonction Python <code>max</code> permet de d\u00e9terminer la plus grande valeur enti\u00e8re parmi plusieurs valeurs.</p>"},{"location":"terminale/arbres/implementation_arbres/#parcours-darbres","title":"Parcours d'arbres","text":""},{"location":"terminale/arbres/implementation_arbres/#parcours-en-profondeur","title":"Parcours en profondeur","text":"<p>On rappelle le d\u00e9roulement des parcours pr\u00e9fixe, infixe et suffixe (ou postfixe). Dans notre impl\u00e9mentation, on se contentera d'afficher les noeuds visit\u00e9s :</p> <p>D\u00e9roulement parcours pr\u00e9fixe</p> <p>Pr\u00e9condition : L'arbre n'est pas vide Le <code>parcours_pr\u00e9fixe</code> se d\u00e9roule comme suit :</p> <ol> <li>On <code>affiche</code> le n\u0153ud racine de l'arbre.</li> <li>On effectue le <code>parcours pr\u00e9fixe</code> du sous-arbre gauche (s'il est NON vide).</li> <li>On effectue le <code>parcours pr\u00e9fixe</code> du sous-arbre droit (s'il est NON vide).</li> </ol> <p>D\u00e9roulement parcours suffixe</p> <p>Pr\u00e9condition : L'arbre n'est pas vide Le <code>parcours_suffixe</code> se d\u00e9roule comme suit :</p> <ol> <li>On effectue le <code>parcours suffixe</code> du sous-arbre gauche (s'il est NON vide).</li> <li>On effectue le <code>parcours suffixe</code> du sous-arbre droit (s'il est NON vide).</li> <li>On <code>affiche</code> le n\u0153ud racine de l'arbre.</li> </ol> <p>D\u00e9roulement parcours infixe</p> <p>Pr\u00e9condition : L'arbre n'est pas vide Le <code>parcours_infixe</code> se d\u00e9roule comme suit :</p> <ol> <li>On effectue le <code>parcours infixe</code> du sous-arbre gauche (s'il est NON vide).</li> <li>On <code>affiche</code> le n\u0153ud racine de l'arbre.</li> <li>On effectue le <code>parcours infixe</code> du sous-arbre droit (s'il est NON vide).</li> </ol> <p>\u00c0 faire</p> <p>Impl\u00e9mentez les algorithmes de parcours en profondeur pr\u00e9fixe, infixe et postfixe de mani\u00e8re r\u00e9cursive.</p>"},{"location":"terminale/arbres/implementation_arbres/#parcours-en-largeur","title":"Parcours en largeur","text":"<p>Contrairement aux algorithmes de parcours en profondeur, on impl\u00e9mentera le parcours en largeur de mani\u00e8re it\u00e9rative et non r\u00e9cursive.</p> <p>On utilisera une structure de file pour stocker les noeuds \u00e0 visiter, qu'on choisira de repr\u00e9senter par une liste Python. Les op\u00e9rations sur cette file sont les suivantes :</p> <ul> <li><code>file.pop(0)</code> : d\u00e9filer (r\u00e9cup\u00e9rer le premier \u00e9l\u00e9ment de la file et le retirer de la file),</li> <li><code>file.append(element)</code> : enfiler (ajouter un \u00e9l\u00e9ment \u00e0 la fin de la file).</li> </ul> <p>Voici le d\u00e9roulement du parcours en largeur :</p> <p>D\u00e9roulement parcours en largeur</p> <p>Pr\u00e9condition : L'arbre n'est pas vide Le <code>parcours_en_largeur</code> se d\u00e9roule comme suit :</p> <ol> <li>On <code>cr\u00e9e</code> une nouvelle file vide.</li> <li>On <code>enfile</code> dedans le noeud racine de l'arbre (qui est, dans notre impl\u00e9mentation, \u00e9quivalent \u00e0 l'arbre lui-m\u00eame).</li> <li>TANT QUE la file n'est PAS vide :<ol> <li>On <code>d\u00e9file</code> la file et on stocke le noeud r\u00e9cup\u00e9r\u00e9 dans une variable.</li> <li>On <code>affiche</code> la valeur du noeud r\u00e9cup\u00e9r\u00e9.</li> <li>Si le sous-arbre gauche \u00e0 ce noeud n'est PAS vide, on l'<code>enfile</code> dans la file.</li> <li>Si le sous-arbre droit \u00e0 ce noeud n'est PAS vide, on l'<code>enfile</code> dans la file.</li> </ol> </li> </ol> <p>\u00c0 faire</p> <p>Impl\u00e9mentez l'algorithme de parcours en largeur.</p>"},{"location":"terminale/arbres/implementations_arbres/","title":"Impl\u00e9mentations d'arbres binaires et ABR","text":""},{"location":"terminale/arbres/implementations_arbres/#sujets-de-bac-sur-les-arbres","title":"Sujets de bac sur les arbres","text":""},{"location":"terminale/arbres/implementations_arbres/#sur-les-arbres-binaires","title":"Sur les arbres binaires","text":"<p>Voici quelques sujets pour vous entra\u00eener sur les arbres binaires :</p>"},{"location":"terminale/arbres/implementations_arbres/#implementations-avec-un-dictionnaire","title":"Impl\u00e9mentations avec un dictionnaire","text":"<ul> <li>Extrait J1AS1 2022</li> <li>Extrait J1G11 2022</li> </ul>"},{"location":"terminale/arbres/implementations_arbres/#implementation-avec-une-classe-noeud","title":"Impl\u00e9mentation avec une classe Noeud","text":"<ul> <li>Extrait J2AS1 2022</li> </ul>"},{"location":"terminale/arbres/implementations_arbres/#autres-sujets","title":"Autres sujets","text":"<ul> <li>Extrait Nouvelle-Caledonie 2022</li> <li>Extrait J2AN1 2022</li> </ul>"},{"location":"terminale/arbres/implementations_arbres/#sur-les-arbres-binaires-de-recherche","title":"Sur les arbres binaires de recherche","text":"<ul> <li>Extrait sujet z\u00e9ro A 2023</li> <li>Extrait sujet z\u00e9ro B 2023</li> <li>Extrait J2ME1 2022</li> <li>Extrait J1AN1 2022</li> <li>Extrait J2LR1 2022</li> </ul>"},{"location":"terminale/arbres/parcours/","title":"Parcours d'arbres binaires","text":""},{"location":"terminale/arbres/parcours/#parcours-darbres","title":"Parcours d'arbres","text":"<p>D\u00e9finition : Un parcours d'arbre est un type d'algorithme consistant \u00e0 visiter les noeuds d'un arbre en suivant un certain ordre.</p> <p>Pourquoi parcourir ?</p> <ul> <li>Rechercher si un arbre contient une valeur particuli\u00e8re.</li> <li>Compter les noeuds qui contiennent une valeur donn\u00e9e.</li> <li>etc.</li> </ul> <p>Il existe deux fa\u00e7ons de parcourir un arbre :</p> <ul> <li>le parcours en profondeur</li> <li>le parcours en largeur</li> </ul> <p>Voici un arbre binaire que l'on souhaite parcourir :</p> <p></p>"},{"location":"terminale/arbres/parcours/#le-parcours-en-largeur-dabord","title":"Le parcours en largeur d'abord","text":"<p>Le parcours en largeur consiste \u00e0 parcourir l'arbre niveau par niveau. Le noeud de niveau (ou profondeur) 0 (ou 1 selon la convention choisie pour la profondeur), c'est-\u00e0-dire le noeud racine, est d'abord parcouru, puis les noeuds de niveau 1 (ou 2), et ainsi de suite. \u00c0 chaque niveau, les noeuds sont parcourus de gauche \u00e0 droite.</p> <p>Note : On peut parler de parcours en largeur \"d'abord\", car m\u00eame si le parcours est d'abord effectu\u00e9 en largeur, l'arbre est bien s\u00fbr ensuite visit\u00e9 en profondeur (on visite les noeuds d'un niveau de l'arbre, puis on passe au niveau suivant, etc.)</p> <p>Sur l'arbre ci-dessous : <code>[E, B, G, A, D, F, H, C]</code></p> <p></p>"},{"location":"terminale/arbres/parcours/#deroulement-du-parcours-en-largeur","title":"D\u00e9roulement du parcours en largeur","text":"<p>Initialement, on a deux listes : <code>\u00e0 visiter = [E]</code> <code>visit\u00e9s = []</code></p> <p>On visite E (on le retire de la liste des noeuds \u00e0 visiter et on l'ajoute dans celle des noeuds visit\u00e9s), puis on ajoute ses noeuds fils (d'abord gauche, puis droit) \u00e0 la fin des noeuds \u00e0 visiter. <code>\u00e0 visiter = [B, G]</code> <code>visit\u00e9s = [E]</code></p> <p>On visite le premier noeud B de la liste <code>\u00e0 visiter</code> (on l'ajoute \u00e0 la fin de la liste des noeuds visit\u00e9s), puis on ajoute ses noeuds fils \u00e0 la fin de la liste des noeuds \u00e0 visiter : <code>\u00e0 visiter = [G, A, D]</code> <code>visit\u00e9s = [E, B]</code></p> <p>On continue avec le noeud G : <code>\u00e0 visiter = [A, D, F, H]</code> <code>visit\u00e9s = [E, B, G]</code></p> <p>On continue avec le noeud A (qui n'a pas de fils, donc on ajoute rien dans les noeuds \u00e0 visiter) : <code>\u00e0 visiter = [D, F, H]</code> <code>visit\u00e9s = [E, B, G, A]</code></p> <p>Et ainsi de suite... <code>\u00e0 visiter = [F, H, C]</code> <code>visit\u00e9s = [E, B, G, A, D]</code></p> <p><code>\u00e0 visiter = [H, C]</code> <code>visit\u00e9s = [E, B, G, A, D, F]</code></p> <p><code>\u00e0 visiter = [C]</code> <code>visit\u00e9s = [E, B, G, A, D, F, H]</code></p> <p><code>\u00e0 visiter = []</code> <code>visit\u00e9s = [E, B, G, A, D, F, H, C]</code></p> <p>Note</p> <p>Les premiers noeuds ajout\u00e9s dans <code>\u00e0 visiter</code> sont les premiers noeuds visit\u00e9s. Si l'on impl\u00e9mentait cet algorithme, on pourrait donc utiliser une structure de file, car on ajoute les noeuds \u00e0 la fin, et on les retire au d\u00e9but.</p>"},{"location":"terminale/arbres/parcours/#le-parcours-en-profondeur-dabord","title":"Le parcours en profondeur d'abord","text":"<p>Le parcours en profondeur d'un arbre est un type de parcours d'arbres qui consiste \u00e0 traiter la racine de l'arbre, et \u00e0 parcourir r\u00e9cursivement les sous-arbres gauche et droit de la racine.</p> <p>Les parcours pr\u00e9fixe, infixe et suffixe (\u00e9galement appel\u00e9 postfixe) se distinguent par l'ordre dans lequel sont effectu\u00e9s ces traitements.</p>"},{"location":"terminale/arbres/parcours/#parcours-prefixe-racine-gauche-droite","title":"Parcours pr\u00e9fixe - (Racine-Gauche-Droite)","text":"<p>Dans le parcours pr\u00e9fixe, la racine est trait\u00e9e avant les appels r\u00e9cursifs sur le sous-arbre gauche, puis sur le sous-arbre droit.</p> <p>D\u00e9roulement du parcours pr\u00e9fixe</p> <p>Pr\u00e9condition : L\u2019arbre n\u2019est pas vide Le parcours pr\u00e9fixe se d\u00e9roule comme suit :</p> <ol> <li>On <code>visite</code> le noeud racine de l\u2019arbre.</li> <li>On effectue le <code>parcours pr\u00e9fixe</code> du sous-arbre gauche (s\u2019il est NON vide).</li> <li>On effectue le <code>parcours pr\u00e9fixe</code> du sous-arbre droit (s\u2019il est NON vide).</li> </ol> <p>(La fonction <code>visite</code> reste \u00e0 d\u00e9finir, cela pourrait \u00eatre un simple affichage.)</p> <p>Une technique visuelle : En se \"baladant\" autour de l'arbre (ordre de visite des noeuds en pointill\u00e9s), on liste chaque noeud la premi\u00e8re fois qu\u2019on le rencontre dans la balade.</p> <p>Sur l'arbre ci-dessous : <code>[E, B, A, D, C, G, F, H]</code></p> <p></p>"},{"location":"terminale/arbres/parcours/#parcours-suffixe-ou-postfixe-gauche-droite-racine","title":"Parcours suffixe ou postfixe - (Gauche-Droite-Racine)","text":"<p>Dans le parcours suffixe (ou postfixe), la racine est trait\u00e9e apr\u00e8s les appels r\u00e9cursifs sur le sous-arbre gauche puis sur le sous-arbre droit.</p> <p>D\u00e9roulement du parcours suffixe</p> <p>Pr\u00e9condition : L\u2019arbre n\u2019est pas vide Le parcours suffixe se d\u00e9roule comme suit :</p> <ol> <li>On effectue le <code>parcours suffixe</code> du sous-arbre gauche (s\u2019il est NON vide).</li> <li>On effectue le <code>parcours suffixe</code> du sous-arbre droit (s\u2019il est NON vide).</li> <li>On <code>visite</code> le noeud racine de l\u2019arbre.</li> </ol> <p>Une technique visuelle : En se \"baladant\" autour de l'arbre, on liste chaque noeud la derni\u00e8re fois qu\u2019on le rencontre dans la balade.</p> <p>Sur l'arbre ci-dessous : <code>[A, C, D, B, F, H, G, E]</code></p> <p></p>"},{"location":"terminale/arbres/parcours/#parcours-infixe-gauche-racine-droite","title":"Parcours infixe - (Gauche-Racine-Droite)","text":"<p>Dans le parcours infixe, le traitement de la racine est effectu\u00e9 entre les appels sur les sous-arbres gauche et droit.</p> <p>D\u00e9roulement du parcours infixe</p> <p>Pr\u00e9condition : L\u2019arbre n\u2019est pas vide Le parcours infixe se d\u00e9roule comme suit :</p> <ol> <li>On effectue le <code>parcours infixe</code> du sous-arbre gauche (s\u2019il est NON vide).</li> <li>On <code>visite</code> le noeud racine de l\u2019arbre.</li> <li>On effectue le <code>parcours infixe</code> du sous-arbre droit (s\u2019il est NON vide).</li> </ol> <p>Une technique visuelle : En se \"baladant\" autour de l'arbre, on liste chaque noeud ayant un fils gauche la seconde fois qu\u2019on le voit et chaque noeud sans fils gauche la premi\u00e8re fois qu\u2019on le voit.</p> <p>Sur l'arbre ci-dessous : <code>[A, B, C, D, E, F, G, H]</code></p> <p></p>"},{"location":"terminale/arbres/parcours/#autre-methode","title":"Autre m\u00e9thode","text":"<p>On peut \u00e9galement retrouver visuellement les trois parcours pr\u00e9fixe, infixe et postfixe en ajoutant les sous-arbres vides (et ar\u00eates associ\u00e9es) au dessin d'un arbre binaire. Si on trace \u00e0 pr\u00e9sent le contour de l'arbre :</p> <ul> <li>l'ordre pr\u00e9fixe est obtenu en listant les noeuds lorsque l'on passe \u00e0 leur gauche,</li> <li>l'ordre suffixe est obtenu en listant les noeuds lorsque l'on passe \u00e0 leur droite,</li> <li>l'ordre infixe est obtenu en listant les noeuds lorsque l'on passe en dessous.</li> </ul> <p>Pour vous entra\u00eener : voir cette fiche d'exercices.</p>"},{"location":"terminale/arbres/type_abstrait/","title":"Type abstrait \"Arbre binaire\"","text":""},{"location":"terminale/arbres/type_abstrait/#type-abstrait-arbre-binaire","title":"Type abstrait Arbre binaire","text":"<p>Nous avons vu ce qu'\u00e9tait un arbre binaire, ainsi que le vocabulaire g\u00e9n\u00e9ral et les diff\u00e9rentes mesures sur les arbres.</p> <p>Avant de passer \u00e0 la partie impl\u00e9mentation, proposons une interface minimale du type abstrait <code>Arbre</code>.</p> <p>Note</p> <p>Dans toute la suite du cours, on utilisera le type <code>Arbre</code> pour d\u00e9signer un arbre binaire.</p> <p>On rappelle qu'un arbre binaire est soit :</p> <ul> <li>un arbre vide</li> <li>un arbre caract\u00e9ris\u00e9 par un noeud racine, un sous-arbre gauche et un sous-arbre droit, eux-m\u00eames \u00e9tant des arbres binaires.</li> </ul> <p>Type abstrait Arbre</p> <p>Utilise : Noeud, Element, Bool Op\u00e9rations : \\(nvABV :~\\rightarrow Arbre\\) \\(nvAB :~Noeud \\times Arbre \\times Arbre \\rightarrow  Arbre\\) \\(racine :~Arbre \\rightarrow Noeud\\) \\(gauche :~Arbre \\rightarrow Arbre\\) \\(droite :~Arbre \\rightarrow Arbre\\) \\(contenu :~Noeud \\rightarrow Element\\) \\(est\\_vide :~Arbre \\rightarrow Bool\\) Pr\u00e9conditions (\\(a\\) : Arbre) : \\(racine(a)\\) est d\u00e9fini si et seulement si \\(\\neg est\\_vide(a)\\) \\(gauche(a)\\) est d\u00e9fini si et seulement si \\(\\neg est\\_vide(a)\\) \\(droite(a)\\) est d\u00e9fini si et seulement si \\(\\neg est\\_vide(a)\\)</p>"},{"location":"terminale/arbres/vocabulaire/","title":"D\u00e9finitions et vocabulaire","text":""},{"location":"terminale/arbres/vocabulaire/#arbres-definitions-et-vocabulaire","title":"Arbres : d\u00e9finitions et vocabulaire","text":""},{"location":"terminale/arbres/vocabulaire/#une-structure-hierarchique","title":"Une structure hi\u00e9rarchique ?","text":"<p>Exemple : La hi\u00e9rarchie (organigramme) d'une entreprise :</p> <p></p>"},{"location":"terminale/arbres/vocabulaire/#les-arbres-pour-quoi-faire","title":"Les arbres, pour quoi faire ?","text":"<p>Exemple 1 : Lorsque l'interpr\u00e9teur Python lit un programme, il cr\u00e9e d'abord un arbre syntaxique utilisant la grammaire du langage. On ne pourrait en effet pas stocker ces donn\u00e9es dans une structure lin\u00e9aire sans y perdre la structuration du programme.</p> <pre><code>def produit(a: int, b: int) -&gt; int:\n    s = 0\n    for i in range(b):\n        s = s + a\n    return s\n</code></pre> <p></p> <p>Exemple 2 : Arbre d'une page HTML</p> <p></p><pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=\"utf-8\"&gt;\n        &lt;title&gt;Ma superbe page&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Mon super titre&lt;/h1&gt;\n        &lt;p&gt;Mon super paragraphe&lt;/p&gt;\n        &lt;img src=\"mon_image.png\" alt=\"ma superbe image\" /&gt;\n    &lt;/body&gt;\n    &lt;footer&gt;\n        &lt;p&gt;Un pied de page&lt;/p&gt;\n    &lt;/footer&gt;\n&lt;/html&gt;\n</code></pre> <p>Exemple 3 : Arborescence des fichiers sur Linux Source : pixees</p> <p></p>"},{"location":"terminale/arbres/vocabulaire/#les-arbres","title":"Les arbres","text":""},{"location":"terminale/arbres/vocabulaire/#definition","title":"D\u00e9finition","text":"<p>Arbre : ensemble de noeuds organis\u00e9s de fa\u00e7on hi\u00e9rarchique \u00e0 partir d'un noeud appel\u00e9 racine.</p> <p>Un arbre est une structure de donn\u00e9es :</p> <ul> <li>hi\u00e9rarchique</li> <li>naturellement r\u00e9cursive</li> </ul>"},{"location":"terminale/arbres/vocabulaire/#vocabulaire","title":"Vocabulaire","text":"<ul> <li>Un noeud est caract\u00e9ris\u00e9 par :<ul> <li>une \u00e9tiquette (= valeur ou cl\u00e9 associ\u00e9e au noeud) si l'arbre est \u00e9tiquet\u00e9,</li> <li>un nombre fini de fils.</li> </ul> </li> <li>Le noeud initial est appel\u00e9 racine de l'arbre.</li> <li>Un noeud :<ul> <li>est reli\u00e9 \u00e0 un noeud p\u00e8re par une ar\u00eate (parfois appel\u00e9e branche) SAUF le noeud racine.</li> <li>peut avoir une ou plusieurs ar\u00eates sortantes le reliant \u00e0 ses noeuds fils.</li> <li>est appel\u00e9 feuille s'il n'a pas de fils.</li> </ul> </li> </ul> <ul> <li>chemin - deux conventions :<ul> <li>suite de noeuds cons\u00e9cutifs de l'arbre, de longueur \u00e9gale au nombre de noeuds du chemin. Sur l'arbre suivant, un chemin allant de A \u00e0 H serait <code>[A, C, E, H]</code> (longueur du chemin : 4). OU</li> <li>suite d'ar\u00eates cons\u00e9cutives de l'arbre, de longueur \u00e9gale au nombre d'ar\u00eates du chemin.Sur l'arbre suivant, un chemin allant de A \u00e0 H serait <code>[A-&gt;C, C-&gt;E, E-&gt;H]</code> (longueur du chemin : 3).</li> </ul> </li> </ul>"},{"location":"terminale/arbres/vocabulaire/#quelques-mesures-sur-les-arbres","title":"Quelques mesures sur les arbres","text":"<ul> <li> <p>taille d'un arbre : nombre de noeuds de l\u2019arbreL'arbre ci-dessous a une taille de 8 (car 8 noeuds).</p> </li> <li> <p>profondeur d\u2019un noeud - deux conventions :</p> <ul> <li>nombre de noeuds rencontr\u00e9s pour aller de la racine jusqu'\u00e0 ce noeudSur l'arbre ci-dessous, la profondeur du noeud H est de 4. OU</li> <li>nombre d\u2019ar\u00eates rencontr\u00e9es pour aller de la racine jusqu'\u00e0 ce noeudSur l'arbre ci-dessous, la profondeur du noeud H est de 3.</li> </ul> </li> <li> <p>hauteur d\u2019un arbre : deux conventions :</p> <ul> <li>profondeur maximale des feuilles de l\u2019arbre (d\u00e9pend de la convention choisie pour la profondeur.)Sur l'arbre ci-dessous, la hauteur de l'arbre est la profondeur du noeud H, elle est donc de 4 ou de 3 selon la convention choisie.</li> </ul> </li> <li> <p>arit\u00e9/degr\u00e9 d\u2019un noeud : nombre de fils du noeud.</p> </li> <li> <p>arit\u00e9/degr\u00e9 d\u2019un arbre : nombre maximal de fils des noeuds de l\u2019arbre.</p> </li> </ul> <p></p>"},{"location":"terminale/arbres/vocabulaire/#les-arbres-binaires","title":"Les arbres binaires","text":""},{"location":"terminale/arbres/vocabulaire/#definition_1","title":"D\u00e9finition","text":"<p>Un arbre binaire est :</p> <ul> <li>soit un arbre vide, qui ne contient aucun noeud,</li> <li>soit un arbre poss\u00e9dant un noeud, appel\u00e9 la racine de l'arbre, reli\u00e9 \u00e0 exactement deux arbres binaires, respectivement appel\u00e9s sous-arbre gauche et sous-arbre droit (pouvant \u00eatre vides).</li> </ul> <p>La racine d'un arbre binaire est reli\u00e9e \u00e0 la racine du sous-arbre gauche et \u00e0 la racine du sous-arbre droit (lorsqu'ils ne sont pas vides).</p> <p>Un arbre binaire poss\u00e8de les particularit\u00e9s suivantes qui le distinguent d'un arbre enracin\u00e9 :</p> <ul> <li>Il peut \u00eatre un arbre vide</li> <li>Il poss\u00e8de TOUJOURS deux sous-arbres (qui peuvent \u00eatre vides ou mener au noeud racine du sous-arbre)</li> <li>La racine d'un arbre binaire poss\u00e8de 0, 1 ou 2 noeuds fils.</li> <li>Le placement des \u00e9l\u00e9ments \u00e0 gauche ou \u00e0 droite doit suivre une logique interne et n'est pas al\u00e9atoire.</li> </ul> <p></p>"},{"location":"terminale/arbres/vocabulaire/#arbres-binaires-particuliers","title":"Arbres binaires particuliers","text":"<p>Source : http://pascal.delahaye1.free.fr/cpge/informatique/cours%20projetes/cp08.pdf</p> <p></p> <ul> <li> <p>Un arbre binaire filiforme (ou d\u00e9g\u00e9n\u00e9r\u00e9) est un arbre dans lequel tous les noeuds internes n\u2019ont qu\u2019un seul fils. (Un arbre filiforme ne poss\u00e8de donc qu\u2019une seule feuille.)</p> </li> <li> <p>Un arbre binaire localement complet (ou arbre binaire strict) est un arbre binaire dont tous les noeuds internes poss\u00e8dent exactement z\u00e9ro ou deux fils (l'arbre vide n'est pas localement complet).</p> </li> <li> <p>Un peigne gauche (respectivement peigne droit) est un arbre binaire localement complet dans lequel tout fils droit (respectivement gauche) est une feuille.</p> </li> <li> <p>Un arbre binaire parfait est un arbre binaire localement complet dans lequel tous les niveaux sont remplis (toutes les feuilles sont \u00e0 la m\u00eame profondeur).</p> </li> <li> <p>Un arbre binaire complet (ou presque complet) est un arbre binaire dans lequel tous les niveaux sont remplis \u00e0 l\u2019exception \u00e9ventuelle du dernier, auquel cas les feuilles du dernier niveau sont align\u00e9es \u00e0 gauche.</p> </li> <li> <p>Un arbre binaire \u00e9quilibr\u00e9 est un arbre binaire tel que pour chaque noeud, le sous-arbre gauche et le sous-arbre droit ont une hauteur qui ne diff\u00e8re que de 1 au plus.</p> </li> </ul>"},{"location":"terminale/arbres/vocabulaire/#relations-entre-taille-n-et-hauteur-h","title":"Relations entre taille n et hauteur h","text":""},{"location":"terminale/arbres/vocabulaire/#encadrement-avec-une-profondeur-0-pour-la-racine","title":"Encadrement avec une profondeur 0 pour la racine\u00a0:","text":"<ul> <li>Pour une taille n donn\u00e9e : \\(\\lfloor log_{2}(n) \\rfloor \\leq h \\leq n-1\\)<ul> <li>h est minimale lorsque l'arbre est complet (ou parfait), h est maximale lorsque l'arbre est filiforme</li> <li>exemple si \\(n=12\\) : \\(3 \\leq h \\leq 11\\)</li> </ul> </li> <li>Pour une hauteur h donn\u00e9e : \\(h+1 \\leq n \\leq 2^{h+1}-1\\)<ul> <li>n est minimale lorsque l'arbre est filiforme, n est maximale lorsque l'arbre est parfait</li> <li>exemple si \\(h=5\\) : \\(6 \\leq h \\leq 63\\)</li> </ul> </li> </ul>"},{"location":"terminale/arbres/vocabulaire/#encadrement-avec-une-profondeur-1-pour-la-racine","title":"Encadrement avec une profondeur 1 pour la racine\u00a0:","text":"<ul> <li>Pour une taille n donn\u00e9e : \\(\\lceil log_{2}(n+1) \\rceil \\leq h \\leq n\\)<ul> <li>h est minimale lorsque l'arbre est complet (ou parfait), h est maximale lorsque l'arbre est filiforme</li> <li>exemple si \\(n=12\\) : \\(4 \\leq h \\leq 12\\)</li> </ul> </li> <li>Pour une hauteur h donn\u00e9e : \\(h \\leq n \\leq 2^{h}-1\\)<ul> <li>n est minimale lorsque l'arbre est filiforme, n est maximale lorsque l'arbre est parfait</li> <li>exemple si \\(h=5\\) : \\(5 \\leq h \\leq 31\\)</li> </ul> </li> </ul>"},{"location":"terminale/e3c/","title":"Corrig\u00e9 sujet 6 e3c","text":""},{"location":"terminale/e3c/#corrige-sujet-6-e3c","title":"Corrig\u00e9 sujet 6 e3c","text":"<p>Sujet</p> <p></p> T\u00e9l\u00e9charger le sujet <p>Source de la correction</p> <p>Ce corrig\u00e9 est propos\u00e9 par @Messieu_Rayan du Coll\u00e8ge-Lyc\u00e9e La Jonch\u00e8re. Cliquez ici pour consulter le PDF d'origine.</p>"},{"location":"terminale/e3c/#theme-a-types-de-base","title":"Th\u00e8me A : Types de Base","text":"<p>Question A1</p> <p>R\u00e9ponse D.</p> <p>Justification : La repr\u00e9sentation binaire de \\(-126\\) en compl\u00e9ment \u00e0 deux sur 8 bits est <code>10010010</code>, qui est l'inverse du nombre <code>01101101</code> (\\(65\\) en d\u00e9cimal) plus \\(1\\).</p> <p>Question A2</p> <p>R\u00e9ponse D.</p> <p>Justification : L'expression <code>True or (True and False)</code> renvoie <code>True</code>, car l'op\u00e9rateur <code>or</code> renvoie <code>True</code> si l'une des op\u00e9randes est <code>True</code>.</p> <p>Question A3</p> <p>R\u00e9ponse B.</p> <p>Justification : Le codage en compl\u00e9ment \u00e0 2 est utilis\u00e9 pour repr\u00e9senter des nombres entiers n\u00e9gatifs en binaire.</p> <p>Question A4</p> <p>R\u00e9ponse B.</p> <p>Justification : L'op\u00e9ration \\((a^b) = (2^3)\\) donne \\(8\\), et \\((8%3)\\) (le reste de la division de \\(8\\) par \\(3\\)) donne \\(2\\). Donc, la valeur de <code>d</code> est \\(2\\).</p> <p>Question A5</p> <p>R\u00e9ponse C.</p> <p>Justification : \"Arial\" est un nom de police de caract\u00e8res, pas une m\u00e9thode d'encodage des caract\u00e8res. Les autres options (UTF-16, ASCII, Unicode) sont des m\u00e9thodes d'encodage.</p> <p>Question A6</p> <p>R\u00e9ponse A.</p> <p>Justification : L'expression <code>x == 3 or y == 5</code> renvoie <code>True</code>, car <code>x</code> est \u00e9gal \u00e0 \\(3\\) m\u00eame si <code>y</code> n'est pas \u00e9gal \u00e0 \\(5\\).</p>"},{"location":"terminale/e3c/#theme-b-types-construits","title":"Th\u00e8me B : Types Construits","text":"<p>Question B1</p> <p>R\u00e9ponse A.</p> <p>Justification : La fonction renvoie le maximum de la liste <code>L</code>, car elle parcourt <code>L</code> et met \u00e0 jour <code>m</code> chaque fois qu'elle trouve un \u00e9l\u00e9ment sup\u00e9rieur \u00e0 <code>m</code>.</p> <p>Question B2</p> <p>R\u00e9ponse C.</p> <p>Justification : <code>u</code> contiendra <code>[6, 8, 21]</code> car il s'agit des \u00e9l\u00e9ments de <code>t</code> qui sont sup\u00e9rieurs \u00e0 <code>3</code>.</p> <p>Question B3</p> <p>R\u00e9ponse C.</p> <p>Justification : <code>V</code> ne prend que les multiples de <code>3</code></p> <p>Question B4</p> <p>R\u00e9ponse B.</p> <p>Justification : L'expression <code>T[2][1]</code> \u00e9value \u00e0 <code>8</code>, car elle acc\u00e8de au deuxi\u00e8me \u00e9l\u00e9ment (indice <code>1</code>) du troisi\u00e8me sous-tableau (indice <code>2</code>) de <code>T</code>.</p> <p>Question B5</p> <p>R\u00e9ponse D.</p> <p>Justification : <code>r</code> vaudra <code>6</code> car il s'agit de la diff\u00e9rence entre le quatri\u00e8me et le deuxi\u00e8me \u00e9l\u00e9ment du tuple <code>t</code>.</p> <p>Question B6</p> <p>R\u00e9ponse D.</p> <p>Justification : <code>d['z']</code> r\u00e9cup\u00e8re la valeur associ\u00e9e \u00e0 la cl\u00e9 'z' dans le dictionnaire <code>d</code>, qui est <code>26</code>.</p>"},{"location":"terminale/e3c/#theme-c-traitement-de-donnees-en-tables","title":"Th\u00e8me C : Traitement de Donn\u00e9es en Tables","text":"<p>Question C1</p> <p>R\u00e9ponse C.</p> <p>Justification : La fonction renvoie le nom de la premi\u00e8re personne dont l'\u00e2ge est sup\u00e9rieur \u00e0 18 dans le dictionnaire, qui est <code>\"charlotte\"</code>.</p> <p>Question C2</p> <p>R\u00e9ponse A.</p> <p>Justification : La r\u00e9ponse A est le format correct d'un fichier CSV, o\u00f9 les valeurs sont s\u00e9par\u00e9es par des virgules.</p> <p>Question C3</p> <p>R\u00e9ponse B.</p> <p>Justification : L'expression <code>t[1]['quantit\u00e9']</code> permet d'acc\u00e9der \u00e0 la quantit\u00e9 de scies, qui est le deuxi\u00e8me \u00e9l\u00e9ment de la liste <code>t</code>.</p> <p>Question C4</p> <p>R\u00e9ponse B.</p> <p>Justification : <code>mendeleiev[1][6] = 'F'</code> corrige le symbole du Fluor dans le tableau p\u00e9riodique.</p> <p>Question C5</p> <p>R\u00e9ponse A.</p> <p>Justification : L'instruction <code>data = data1 + data2</code> cr\u00e9e une nouvelle table en combinant les \u00e9l\u00e9ments de <code>data1</code> et <code>data2</code>.</p> <p>Question C6</p> <p>R\u00e9ponse C.</p> <p>Justification : L'expression <code>c = a + b</code> combine les deux listes <code>a</code> et <code>b</code>, donnant <code>[1, 2, 3, 4, 5, 6]</code>.</p>"},{"location":"terminale/e3c/#theme-d-interactions-entre-lhomme-et-la-machine-sur-le-web","title":"Th\u00e8me D : Interactions entre l'homme et la machine sur le Web.","text":"<p>Question D1</p> <p>R\u00e9ponse D.</p> <p>Justification : La m\u00e9thode POST du protocole HTTP est utilis\u00e9e pour envoyer des donn\u00e9es, comme celles d'un formulaire HTML, vers un serveur.</p> <p>Question D2</p> <p>R\u00e9ponse B.</p> <p>Justification : La balise <code>&lt;title&gt;</code> est utilis\u00e9e dans l'en-t\u00eate d'un document HTML pour d\u00e9finir le titre de la page.</p> <p>Question D3</p> <p>R\u00e9ponse D.</p> <p>Justification : L'attribut <code>onmouseover</code> en HTML est utilis\u00e9 pour ex\u00e9cuter un script lorsqu'un utilisateur passe la souris sur un \u00e9l\u00e9ment sp\u00e9cifique.</p> <p>Question D4</p> <p>R\u00e9ponse C.</p> <p>Justification : La balise <code>&lt;input type=\"checkbox\"&gt;</code> est utilis\u00e9e pour cr\u00e9er des cases \u00e0 cocher dans un formulaire HTML.</p> <p>Question D5</p> <p>R\u00e9ponse C.</p> <p>Justification : La propri\u00e9t\u00e9 <code>onclick</code> d'une balise <code>&lt;button /&gt;</code> en HTML est utilis\u00e9e pour d\u00e9finir un script JavaScript \u00e0 ex\u00e9cuter lors du clic sur le bouton.</p> <p>Question D6</p> <p>R\u00e9ponse C.</p> <p>Justification : Le s\u00e9lecteur CSS <code>#tab-nav</code> a cible les liens (<code>&lt;a&gt;</code>) \u00e0 l'int\u00e9rieur de l'\u00e9l\u00e9ment avec l'ID <code>tab-nav</code>, ce qui correspond \u00e0 la structure donn\u00e9e pour la barre de navigation.</p>"},{"location":"terminale/e3c/#theme-e-architectures-materielles-et-systemes-dexploitation-question-e1","title":"Th\u00e8me E : Architectures Mat\u00e9rielles et Syst\u00e8mes d'Exploitation Question E1.","text":"<p>Question E1</p> <p>R\u00e9ponse C.</p> <p>Justification : La commande <code>chmod a+x jeu</code> sous Linux donne les droits d'ex\u00e9cution \u00e0 tous les utilisateurs pour le fichier <code>jeu</code>.</p> <p>Question E2</p> <p>R\u00e9ponse C.</p> <p>Justification : La commande <code>cp /users/luc/interro.txt ./</code> sous Linux copie le fichier <code>interro.txt</code> vers le r\u00e9pertoire courant.</p> <p>Question E3</p> <p>R\u00e9ponse C.</p> <p>Justification : Apr\u00e8s les commandes, les fichiers <code>help.txt</code> et <code>tutorial.txt</code> seront dans le r\u00e9pertoire <code>Documents</code> du r\u00e9pertoire de l'utilisateur.</p> <p>Question E4</p> <p>R\u00e9ponse C.</p> <p>Justification : La commande <code>cat readme.txt</code> sous Linux est utilis\u00e9e pour afficher le contenu du fichier <code>readme.txt</code>.</p> <p>Question E5</p> <p>R\u00e9ponse C.</p> <p>Justification : Dans l'architecture de Von Neumann, l'unit\u00e9 arithm\u00e9tique et logique (UAL) a pour r\u00f4le d'effectuer les op\u00e9rations de base.</p> <p>Question E6</p> <p>R\u00e9ponse D.</p> <p>Justification : L'affirmation selon laquelle un syst\u00e8me d'exploitation propri\u00e9taire est plus s\u00e9curis\u00e9 est subjective et ne peut \u00eatre \u00e9tablie comme universellement vraie.</p>"},{"location":"terminale/e3c/#theme-f-langages-et-programmation-question-f1","title":"Th\u00e8me F : Langages et Programmation Question F1.","text":"<p>Question F1</p> <p>R\u00e9ponse D.</p> <p>Justification : L'instruction <code>(random.randint(0, 4) - 2) * 2</code> g\u00e9n\u00e8re un entier al\u00e9atoire entre <code>0</code> et <code>4</code>, soustrait <code>2</code>, puis multiplie le r\u00e9sultat par <code>2</code>, couvrant l'ensemble <code>{-4, -2, 0, 2, 4}</code>.</p> <p>Question F2</p> <p>R\u00e9ponse B </p> <p>Justification : Le test <code>ranger(3, 4, 1)</code> \u00e9choue \u00e0 trier correctement car il permute le <code>4</code> et le <code>1</code> mais laisse le <code>3</code> devant.</p> <p>Question F3</p> <p>R\u00e9ponse D.</p> <p>Justification : L'expression [1 * 7] cr\u00e9e une liste contenant 7 fois le nombre 1, donc [7, 7, 7, 7, 7, 7, 7].</p> <p>Question F4</p> <p>R\u00e9ponse C.</p> <p>Justification : Les conditions a &lt;= b &lt; longueur(T) garantissent que les indices sont dans les limites correctes du tableau sans chevauchement.</p> <p>Question F5</p> <p>R\u00e9ponse B.</p> <p>Justification : Remplacer les pointill\u00e9s par <code>L[i] &gt; m</code> garantit que <code>m</code> sera mis \u00e0 jour avec le plus grand \u00e9l\u00e9ment rencontr\u00e9 dans la liste.</p> <p>Question F6</p> <p>R\u00e9ponse C.</p> <p>Justification : Il est d\u00e9conseill\u00e9 d'utiliser des flottants avec cette fonction car la pr\u00e9cision des op\u00e9rations flottantes peut entra\u00eener des erreurs inattendues dans la comparaison.</p>"},{"location":"terminale/e3c/#theme-g-algorithmique-question-g1","title":"Th\u00e8me G : Algorithmique Question G1.","text":"<p>Question G1</p> <p>R\u00e9ponse A.</p> <p>Justification : Pour la recherche dichotomique, la liste doit \u00eatre tri\u00e9e pour permettre la division de la liste et la comparaison des \u00e9l\u00e9ments de mani\u00e8re efficace.</p> <p>Question G2</p> <p>R\u00e9ponse D.</p> <p>Justification : Dans le pire des cas, un algorithme de recherche dichotomique sur une liste de taille 2 n\u00e9cessite \\(2 + 1 = 3\\) comparaisons.</p> <p>Question G3</p> <p>R\u00e9ponse D.</p> <p>Justification : La fonction renvoie le maximum de la liste donn\u00e9e.</p> <p>Question G4</p> <p>R\u00e9ponse B.</p> <p>Justification : La fonction compte le nombre d'occurrences de la lettre <code>'e'</code> dans <code>\"Vive l\u2019informatique\"</code>, qui appara\u00eet 2 fois.</p> <p>Question G5</p> <p>R\u00e9ponse C.</p> <p>Justification : Cette fonction impl\u00e9mente la recherche dichotomique, un algorithme de recherche qui divise successivement la liste pour trouver un \u00e9l\u00e9ment.</p> <p>Question G6</p> <p>R\u00e9ponse B.</p> <p>Justification : Le script B boucle ind\u00e9finiment car <code>i</code> commence plus petit que <code>K</code> et diminue \u00e0 chaque fois, mais la condition de la boucle est que <code>i</code> soit plus petit que <code>K</code>, ce qui est toujours vrai.</p>"},{"location":"terminale/entrainement_python/","title":"R\u00e9visions et entra\u00eenement au langage Python","text":""},{"location":"terminale/entrainement_python/#revisions-et-entrainement-au-langage-python","title":"R\u00e9visions et entra\u00eenement au langage Python","text":""},{"location":"terminale/entrainement_python/#introduction","title":"Introduction","text":"<p>Cette activit\u00e9 est constitu\u00e9e de plusieurs programmes, de difficult\u00e9 croissante, \u00e0 compl\u00e9ter ou \u00e0 r\u00e9aliser.</p> <p>Pour chaque programme, des tests sont effectu\u00e9s dans chaque fonction pour v\u00e9rifier leur bon fonctionnement. Si vous n'avez pas d'erreur, rien ne doit s'afficher lorsque vous ex\u00e9cutez le programme.</p>"},{"location":"terminale/entrainement_python/#programme-1","title":"Programme 1","text":"<p>\u00c0 t\u00e9l\u00e9charger</p> <ul> <li>programme1.py : programme 1 \u00e0 compl\u00e9ter</li> <li>programme1_corr.py : corrig\u00e9 du programme 1</li> </ul> <p>Ouvrez le fichier <code>programme1.py</code> dans Thonny (ou votre IDE pr\u00e9f\u00e9r\u00e9).</p> <p>Question 1</p> <p>\u00c9crivez la fonction <code>somme(a,b)</code>, qui renvoie la somme de deux entiers a et b.</p> <p>Question 2</p> <p>Compl\u00e9tez la fonction <code>produit(a,b)</code>, qui renvoie le produit de deux entiers a et b, sans utiliser l'op\u00e9rateur <code>*</code>.</p> <p>Question 3</p> <p>Compl\u00e9tez la fonction <code>prod_liste(l1, l2)</code> qui fait le produit des \u00e9l\u00e9ments de deux listes, et renvoie une nouvelle liste contenant les \u00e9l\u00e9ments r\u00e9sultant de ces produits.</p> <p>Exemple : Si <code>l1 = [1, 2, 3]</code> et <code>l2 = [4, 5, 6]</code>, la fonction renverra une liste <code>[4, 10, 18]</code>.</p>"},{"location":"terminale/entrainement_python/#programme-2","title":"Programme 2","text":"<p>\u00c0 t\u00e9l\u00e9charger</p> <ul> <li>programme2.py : programme 2 \u00e0 compl\u00e9ter</li> <li>programme2_corr.py : corrig\u00e9 du programme 2</li> </ul> <p>Question 4</p> <p>Compl\u00e9tez la fonction <code>minimum(liste)</code> qui renvoie le plus petit \u00e9l\u00e9ment d'une liste.</p> <p>Question 5</p> <p>\u00c9crivez la fonction <code>maximum(liste)</code> en vous basant sur le m\u00eame principe que la fonction pr\u00e9c\u00e9dente.</p> <p>Question 6</p> <p>Compl\u00e9tez la fonction <code>indice_min(liste)</code> qui renvoie l'indice du plus petit \u00e9l\u00e9ment de la liste.</p> <p>Question 7</p> <p>Compl\u00e9tez la fonction <code>tri_selection(liste)</code> qui effectue le tri par s\u00e9lection d'une liste.</p>"},{"location":"terminale/entrainement_python/#programme-3","title":"Programme 3","text":"<p>\u00c0 t\u00e9l\u00e9charger</p> <ul> <li>programme3.py : programme 3 \u00e0 compl\u00e9ter</li> <li>programme3_corr.py : corrig\u00e9 du programme 3</li> </ul> <p>Question 8</p> <p>\u00c9crivez la fonction <code>concatener(liste)</code> qui renvoie la concat\u00e9nation de deux listes.</p> <p>Question 9</p> <p>\u00c9crivez la fonction <code>inverse(liste)</code> qui renvoie l'inverse d'une liste, vous ne devez pas utiliser la m\u00e9thode <code>reverse</code> !</p> <p>Question 10</p> <p>\u00c9crivez la fonction <code>somme_li(liste)</code> qui renvoie une liste contenant la somme des \u00e9l\u00e9ments de la liste avec les \u00e9l\u00e9ments de son inverse.</p> <p>Question 11</p> <p>\u00c9crivez la fonction <code>somme_lignes(tableau)</code> et compl\u00e9tez la fonction <code>somme_colonnes(tableau)</code> qui renvoient respectivement une liste contenant la somme de chaque ligne d'un tableau 2D et la somme de chaque colonne d'un tableau 2D.</p> <p>On consid\u00e8re que les lignes du tableau font toutes la m\u00eame taille.</p> <p>Une liste <code>l = [[1, 4, 5, 3], [7, 8, 5, 4], [4, 5, 8, 3]]</code> par exemple correspondrait au tableau suivant :</p> <p></p>"},{"location":"terminale/entrainement_python/#programme-4","title":"Programme 4","text":"<p>\u00c0 t\u00e9l\u00e9charger</p> <ul> <li>programme4.py : programme 4 \u00e0 compl\u00e9ter</li> <li>programme4_corr.py : corrig\u00e9 du programme 4</li> </ul> <p>Question 12</p> <p>\u00c9crivez une fonction <code>trouver(liste, element)</code> qui renvoie True si l'\u00e9l\u00e9ment <code>element</code> est dans la liste <code>liste</code>, False s'il n'y est pas.</p> <p>Question 13</p> <p>Compl\u00e9tez la fonction <code>dichotomie(liste, element)</code> qui renvoie True si <code>element</code> est dans la liste <code>liste</code>, False sinon. Le param\u00e8tre <code>liste</code> est une liste tri\u00e9e.</p>"},{"location":"terminale/entrainement_python/#programme-5","title":"Programme 5","text":"<p>\u00c0 t\u00e9l\u00e9charger</p> <ul> <li>programme5.py : programme 5 \u00e0 compl\u00e9ter</li> <li>programme5_corr.py : corrig\u00e9 du programme 5</li> </ul> <p>Question 14</p> <p>\u00c9crivez une fonction <code>compter(mot, lettre)</code> qui compte le nombre de fois qu'une lettre appara\u00eet dans un mot.</p> <p>Question 15</p> <p>\u00c9crivez une fonction <code>supprimer(mot, lettre)</code> qui renvoie le mot initial sans la lettre sp\u00e9cifi\u00e9e.</p> <p>Question 16</p> <p>\u00c9crivez une fonction <code>recherche(chaine, sequence)</code> qui recherche une s\u00e9quence (une suite de caract\u00e8res) dans une cha\u00eene de caract\u00e8res et renvoie True si elle est trouv\u00e9e, False sinon.</p>"},{"location":"terminale/entrainement_python/#programme-6","title":"Programme 6","text":"<p>\u00c0 t\u00e9l\u00e9charger</p> <ul> <li>programme6.py : programme 6 \u00e0 compl\u00e9ter</li> </ul> <p>On s'int\u00e9resse aux classes.</p> <p>Ce programme contient une classe <code>Carte</code> qui repr\u00e9sente une carte ayant une valeur (repr\u00e9sent\u00e9e par un entier de 1 \u00e0 4) et une couleur (repr\u00e9sent\u00e9e par un entier de 1 \u00e0 13).</p> <p>Question 17</p> <p>Le programme contient \u00e9galement une classe <code>PaquetDeCarte</code> dans laquelle vous devez \u00e9crire la m\u00e9thode <code>remplir()</code> qui remplit un paquet de cartes avec les 52 cartes (13 cartes de 4 couleurs) et la m\u00e9thode <code>getCarteAt(pos)</code> permettant de r\u00e9cup\u00e9rer la carte \u00e0 la position <code>pos</code> donn\u00e9e.</p>"},{"location":"terminale/entrainement_python/#programme-7","title":"Programme 7","text":"<p>\u00c0 t\u00e9l\u00e9charger</p> <ul> <li>programme7.py : programme 7 \u00e0 compl\u00e9ter</li> </ul> <p>On souhaite repr\u00e9senter une liste chain\u00e9e \u00e0 l'aide de classes Python. Ce programme contient une classe <code>Noeud</code> et une classe <code>Liste</code>.</p> <p>On repr\u00e9sente une liste chain\u00e9e de la mani\u00e8re suivante :</p> <p></p> <p>La classe Liste a comme attribut <code>premier_noeud</code> qui pointe vers le premier noeud de la liste. Un noeud a comme attribut <code>valeur</code> qui contient la valeur du noeud, et <code>suivant</code> qui pointe vers le noeud suivant. Ainsi, le premier noeud pointe vers le second, le second vers le troisi\u00e8me, etc. Un noeud vide est repr\u00e9sent\u00e9 par l'objet <code>None</code>.</p> <p>Le sch\u00e9ma ci-dessus par exemple repr\u00e9sente la liste <code>[2, 4, 7]</code>.</p> <p>Question 18</p> <p>Compl\u00e9tez la classe <code>Noeud</code> et la classe <code>Liste</code> en respectant les instructions contenues dans les docstrings.</p>"},{"location":"terminale/entrainement_python/#programme-8","title":"Programme 8","text":"<p>\u00c0 t\u00e9l\u00e9charger</p> <ul> <li>programme8.py : programme 8 \u00e0 compl\u00e9ter</li> </ul> <p>Un peu de r\u00e9cursivit\u00e9. Les fonctions suivantes doivent \u00eatre \u00e9crites de mani\u00e8re r\u00e9cursive.</p> <p>Question 19</p> <p>\u00c9crivez une fonction <code>factorielle(n)</code> qui renvoie la factorielle du nombre n sp\u00e9cifi\u00e9e.</p> <p>Question 20</p> <p>\u00c9crivez une fonction <code>fibonacci(n)</code> qui donne le n-i\u00e8me terme de la suite de Fibonacci. La suite de Fibonacci donne :</p> <ul> <li>n si n = 0 ou n = 1</li> <li>fibonacci(n - 1) + fibonacci(n - 2) si n &gt; 1</li> </ul> <p>Voir le tableau suivant :</p> n = r\u00e9sultat 0 0 1 1 2 1 + 0 = 1 3 1 + 1 = 2 4 2 + 1 = 3 <p>Question 21</p> <p>Le tri fusion est un tri bas\u00e9 sur l'algorithme \"Diviser pour r\u00e9gner\" qui effectue le tri d'une liste en s\u00e9parant r\u00e9cursivement la liste en deux, jusqu'\u00e0 effectuer des comparaisons d'\u00e9l\u00e9ments un \u00e0 un et \u00e0 reconstituer la liste finale. Plus d'informations ici : https://fr.wikipedia.org/wiki/Tri_fusion</p> <p>Voici un sch\u00e9ma du tri fusion appliqu\u00e9 \u00e0 une liste de 7 \u00e9l\u00e9ments :</p> <p></p> <p>La fonction <code>fusion</code>, qui fusionne deux listes tri\u00e9es, est donn\u00e9e. \u00c9crivez la fonction <code>tri_fusion</code> qui effectue le tri d'une liste en suivant cette m\u00e9thode.</p>"},{"location":"terminale/listes/","title":"Les listes cha\u00een\u00e9es","text":""},{"location":"terminale/listes/#les-listes-chainees","title":"Les listes cha\u00een\u00e9es","text":"Liste des contenus Description Cours Cours sur les listes cha\u00een\u00e9es. Exercices Exercices et notebooks sur les listes cha\u00een\u00e9es."},{"location":"terminale/listes/cours/","title":"Cours","text":""},{"location":"terminale/listes/cours/#les-listes-chainees","title":"Les listes cha\u00een\u00e9es","text":""},{"location":"terminale/listes/cours/#les-listes-python","title":"Les listes Python","text":"<p>Vous connaissez d\u00e9j\u00e0 les listes Python, qui permettent de stocker simplement des s\u00e9quences d'\u00e9l\u00e9ments, mais ces listes ne sont pas adapt\u00e9es \u00e0 toutes les op\u00e9rations que l'on pourrait vouloir effectuer sur des s\u00e9quences. </p> <p>Les listes de Python permettent par exemple d'ins\u00e9rer ou de supprimer efficacement des \u00e9l\u00e9ments \u00e0 la fin d'un tableau, avec les op\u00e9rations <code>append</code> et <code>pop</code>, mais se pr\u00eatent mal \u00e0 l'insertion ou la suppression d'un \u00e9l\u00e9ment \u00e0 une autre position <code>l</code>. En effet, les \u00e9l\u00e9ments d'un tableau \u00e9tant contigus et ordonn\u00e9s en m\u00e9moire, ins\u00e9rer un \u00e9l\u00e9ment dans une s\u00e9quence demande de d\u00e9placer tous les \u00e9l\u00e9ments qui le suivent pour lui laisser une place.</p> <p>Par exemple, si l'on veut ins\u00e9rer un \u00e9l\u00e9ment au d\u00e9but d'une liste, on pourrait utiliser la m\u00e9thode <code>insert</code> du type <code>List</code> :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>t = [2,5,1,9,8]bksl-nl# Ins\u00e9rer 5 au d\u00e9but :bksl-nlt.insert(0, 5)bksl-nlbksl-nlprint(f't = {t}')bksl-nl</p> <p>En terme de co\u00fbt algorithmique, cela revient \u00e0 \u00e9crire ceci :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>t = [2,5,1,9,8]bksl-nl# Ins\u00e9rer 5 au d\u00e9but :bksl-nlt.append(None)bksl-nlfor i in range(len (t) - 1, 0, -1):bksl-nl    t[i] = t[i - 1]bksl-nlt[0] = 5bksl-nlbksl-nlprint(f't = {t}')bksl-nl</p> <p>On voit donc que les listes Python ne sont pas toujours id\u00e9ales, selon les op\u00e9rations que l'on souhaite faire. C'est la raison pour laquelle nous allons nous int\u00e9resser \u00e0 un nouveau type de listes : les listes cha\u00een\u00e9es.</p>"},{"location":"terminale/listes/cours/#presentation-des-listes-chainees","title":"Pr\u00e9sentation des listes cha\u00een\u00e9es","text":"<p>Une liste cha\u00een\u00e9e permet, tout comme les listes Python, de repr\u00e9senter une liste, c'est-\u00e0-dire une s\u00e9quence finie de valeurs.</p> <p>Sa structure a pour particularit\u00e9 le fait que les \u00e9l\u00e9ments sont cha\u00een\u00e9s entre eux, permettant le passage d'un \u00e9l\u00e9ment \u00e0 l'\u00e9l\u00e9ment suivant. Ainsi, chaque \u00e9l\u00e9ment est stock\u00e9 dans un petit bloc allou\u00e9 quelque part dans la m\u00e9moire, que l'on pourra appeler maillon ou cellule, \u00e0 laquelle est associ\u00e9e :</p> <ul> <li>une valeur,</li> <li>la r\u00e9f\u00e9rence vers la cellule contenant l'\u00e9l\u00e9ment suivant de la liste.</li> </ul> <p> </p> Une liste cha\u00een\u00e9e <p>La liste cha\u00een\u00e9e ci-dessus contient donc les \u00e9l\u00e9ments <code>1, 2, 3</code>.</p> <p>Type abstrait Liste</p> <p>Voici une mani\u00e8re de d\u00e9finir le type abstrait <code>Liste</code> repr\u00e9sentant une liste cha\u00een\u00e9e.  </p> <p>Utilise : Element, Entier, Booleen Op\u00e9rations fondamentales (primitives):</p> Op\u00e9ration Description \\(nouvelleListeVide :~\\rightarrow Liste~VIDE\\) Renvoie une nouvelle liste vide. \\(estListeVide :~Liste \\rightarrow Booleen\\) Renvoie <code>True</code> si la liste donn\u00e9e est vide, <code>False</code> sinon. \\(inserer :~Liste \\times Element \\times Entier \\rightarrow Liste~NON~VIDE\\) Renvoie une nouvelle liste incluant les \u00e9l\u00e9ments de la liste donn\u00e9e \u00e0 laquelle on a ajout\u00e9 l'\u00e9l\u00e9ment donn\u00e9 d'indice donn\u00e9. \\(listeTete :~Liste \\rightarrow Element\\) Renvoie l'\u00e9l\u00e9ment en t\u00eate (dans la premi\u00e8re cellule) de la liste. \\(listeQueue :~Liste \\rightarrow Liste\\) Renvoie la liste donn\u00e9e priv\u00e9e de sa t\u00eate. <p>Autres op\u00e9rations:</p> Op\u00e9ration Description \\(nieme\\_element :~Liste \\times Entier \\rightarrow Element\\) Renvoie l'\u00e9l\u00e9ment situ\u00e9 \u00e0 l'indice donn\u00e9 de la liste donn\u00e9e. \\(supprimer :~Liste~NON~VIDE \\times Entier \\rightarrow Liste\\) Renvoie une nouvelle liste contenant les \u00e9l\u00e9ments de la liste donn\u00e9e \u00e0 laquelle on a supprim\u00e9 l'\u00e9l\u00e9ment donn\u00e9 d'indice donn\u00e9. \\(longueur :~Liste \\rightarrow Entier~Naturel\\) Renvoie la longueur (nombre d'\u00e9l\u00e9ments) de la liste donn\u00e9e. <p>On peut \u00e9galement avoir des op\u00e9rations permettant d'interagir avec les cellules de la liste, \u00e0 condition de faire, lors de l'impl\u00e9mentation, la distinction entre \"liste\" et \"cellule\" (en cr\u00e9ant une classe <code>Liste</code> et une classe <code>Cellule</code> par exemple). En effet, dans certaines impl\u00e9mentations, listes et cellules peuvent \u00eatre confondues.</p> <p>Interactions avec les Cellules:</p> Op\u00e9ration Description \\(acces :~Liste~NON~VIDE \\times Entier \\rightarrow Cellule\\) Renvoie la cellule situ\u00e9e \u00e0 l'indice donn\u00e9 de la liste donn\u00e9e. \\(contenu :~Cellule \\rightarrow Element\\) Renvoie l'\u00e9l\u00e9ment contenu dans la cellule donn\u00e9e. \\(successeur :~Cellule \\rightarrow Cellule\\) Renvoie la cellule qui succ\u00e8de \u00e0 la cellule donn\u00e9e. <p>Type abstrait \\(\\ne\\) impl\u00e9mentation</p> <p>Il est essentiel de faire la diff\u00e9rence entre un type abstrait et une impl\u00e9mentation. On qualifie d'abstrait ce type de donn\u00e9e car on ne sp\u00e9cifie pas comment les donn\u00e9es sont repr\u00e9sent\u00e9es ni comment les op\u00e9rations sont impl\u00e9ment\u00e9es.</p> <p>Cette d\u00e9finition abstraite du type liste cha\u00een\u00e9e, bien qu'\u00e9tant non mutable (on renvoie une nouvelle liste lors d'une insertion ou de la suppression d'un \u00e9l\u00e9ment), peut donner lieu \u00e0 tout un tas d'impl\u00e9mentations diff\u00e9rentes : avec ou sans la POO, r\u00e9cursive ou non, muable ou immuable, etc. Il n'y a aucune obligation de suivre \u00e0 la lettre la d\u00e9finition abstraite lors de l'impl\u00e9mentation, tant que les op\u00e9rations d\u00e9finies sont bien impl\u00e9ment\u00e9es.</p> <p>On sera donc libre de faire une impl\u00e9mentation muable, avec modification en place de la liste si on le souhaite.</p>"},{"location":"terminale/listes/cours/#implementations-des-listes-chainees","title":"Impl\u00e9mentations des listes cha\u00een\u00e9es","text":""},{"location":"terminale/listes/cours/#implementation-recursive-avec-poo","title":"Impl\u00e9mentation r\u00e9cursive avec POO","text":"<p>Pour notre premi\u00e8re impl\u00e9mentation des listes cha\u00een\u00e9es, on propose d'utiliser la POO.</p> <p>On cr\u00e9e une classe <code>Cellule</code> permettant de repr\u00e9senter une cellule (ou un maillon) d'une liste :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>class Cellule:bksl-nl    ''' Une cellule d'une liste cha\u00een\u00e9e. '''bksl-nlbksl-nl    def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl        self.valeur = v  # Valeur contenue dans la cellulebksl-nl        self.suivante = s  # Cellule suivantebksl-nlbksl-nl    def py-undpy-undlenpy-undpy-und(self):bksl-nl        ''' Renvoie la longueur de la liste non vide. '''bksl-nl        bksl-nl        if self.suivante == None:bksl-nl            return 1bksl-nl        else:bksl-nl            return 1 + len(self.suivante)bksl-nl        bksl-nl    def py-undpy-undstrpy-undpy-und(self):bksl-nl        ''' Renvoie une repr\u00e9sentation textuelle de la liste. '''bksl-nlbksl-nl        res = f'[{self.valeur}'bksl-nl        cell = self.suivantebksl-nl        while cell:bksl-nl            res += f', {cell.valeur}'bksl-nl            cell = cell.suivantebksl-nl        res += ']'bksl-nl        return resbksl-nlbksl-nl# Fonctions d\u00e9finies en dehors de la classebksl-nlbksl-nldef longueur(lst):bksl-nl    ''' Renvoie la longueur d'une liste.bksl-nl    Si la liste est un objet None, cette longueur vaut 0.bksl-nl    Sinon, la longueur est calcul\u00e9e avec la m\u00e9thode py-undpy-undlenpy-undpy-und de la classe Cellule. '''bksl-nlbksl-nl    passbksl-nlbksl-nldef afficher(lst):bksl-nl    ''' Renvoie un affichage textuelle de la liste.bksl-nl    Si la liste est l'objet None, l'affichage sera [].bksl-nl    Sinon, l'affichage sera obtenu avec la m\u00e9thode py-undpy-undstrpy-undpy-und de la classe Cellule. '''bksl-nlbksl-nl    passbksl-nlbksl-nldef niemepy-undelement(n, lst):bksl-nl    ''' Renvoie le n-i\u00e8me \u00e9l\u00e9ment de la liste lst NON VIDE.bksl-nl    Les \u00e9l\u00e9ments sont index\u00e9s \u00e0 partir de 0.bksl-nl    :param lst: (Cellule) une liste cha\u00een\u00e9e non vide.bksl-nl    :return: l'\u00e9l\u00e9ment contenu \u00e0 l'indice n de la liste. '''bksl-nlbksl-nl    if lst is None:bksl-nl        raise ValueError(\"La liste ne doit pas \u00eatre vide !\")bksl-nl    else:bksl-nl        # \u00c0 COMPL\u00c9TERbksl-nl        passbksl-nlbksl-nldef concatener(l1, l2):bksl-nl    ''' Renvoie une nouvelle liste, r\u00e9sultant de la concat\u00e9nation des listes l1 et l2.bksl-nl    :param l1: (Cellule | None) une liste cha\u00een\u00e9ebksl-nl    :param l2: (Cellule | None) une autre liste cha\u00een\u00e9ebksl-nl    :return: (Cellule | None) une nouvelle liste cha\u00een\u00e9e '''bksl-nlbksl-nl    passbksl-nlbksl-nldef renverser(lst):bksl-nl    ''' Renvoie une nouvelle liste contenant les \u00e9l\u00e9ments de <code>lst</code> mais dans l'ordre inverse.bksl-nl    :param lst: (Cellule | None) une liste cha\u00een\u00e9ebksl-nl    :return: (Cellule | None) une nouvelle liste cha\u00een\u00e9e '''bksl-nlbksl-nl# Cr\u00e9er une nouvelle liste contenant 1, 2, 3bksl-nllst = Cellule(1, Cellule(2, Cellule(3, None)))bksl-nllstpy-undvide = Nonebksl-nlafficher(lst)bksl-nlafficher(lstpy-undvide)bksl-nl</p> <p></p> T\u00e9l\u00e9charger le fichier <code>liste.py</code> <p> </p> Visualisation des cellules <p>Impl\u00e9mentation</p> <p>Avec cette impl\u00e9mentation, une liste cha\u00een\u00e9e est soit :</p> <ul> <li>une liste vide repr\u00e9sent\u00e9e par la valeur <code>None</code></li> <li>une liste repr\u00e9sent\u00e9e par une instance de <code>Cellule</code>.</li> </ul> <p>\u00c0 faire</p> <p>\u00c9crivez de mani\u00e8re r\u00e9cursive les fonctions <code>longueur</code>, <code>afficher</code>, <code>nieme_element</code>, <code>concatener</code> et <code>renverser</code>, en respectant bien la documentation.</p>"},{"location":"terminale/listes/cours_corr/","title":"Les listes cha\u00een\u00e9es","text":""},{"location":"terminale/listes/cours_corr/#les-listes-chainees","title":"Les listes cha\u00een\u00e9es","text":""},{"location":"terminale/listes/cours_corr/#les-listes-python","title":"Les listes Python","text":"<p>Vous connaissez d\u00e9j\u00e0 les listes Python, qui permettent de stocker simplement des s\u00e9quences d'\u00e9l\u00e9ments, mais ces listes ne sont pas adapt\u00e9es \u00e0 toutes les op\u00e9rations que l'on pourrait vouloir effectuer sur des s\u00e9quences. </p> <p>Les listes de Python permettent par exemple d'ins\u00e9rer ou de supprimer efficacement des \u00e9l\u00e9ments \u00e0 la fin d'un tableau, avec les op\u00e9rations <code>append</code> et <code>pop</code>, mais se pr\u00eatent mal \u00e0 l'insertion ou la suppression d'un \u00e9l\u00e9ment \u00e0 une autre position <code>l</code>. En effet, les \u00e9l\u00e9ments d'un tableau \u00e9tant contigus et ordonn\u00e9s en m\u00e9moire, ins\u00e9rer un \u00e9l\u00e9ment dans une s\u00e9quence demande de d\u00e9placer tous les \u00e9l\u00e9ments qui le suivent pour lui laisser une place.</p> <p>Par exemple, si l'on veut ins\u00e9rer un \u00e9l\u00e9ment au d\u00e9but d'une liste, on pourrait utiliser la m\u00e9thode <code>insert</code> du type <code>List</code> :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>t = [2,5,1,9,8]bksl-nl# Ins\u00e9rer 5 au d\u00e9but :bksl-nlt.insert(0, 5)bksl-nlbksl-nlprint(f't = {t}')bksl-nl</p> <p>En terme de co\u00fbt algorithmique, cela revient \u00e0 \u00e9crire ceci :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>t = [2,5,1,9,8]bksl-nl# Ins\u00e9rer 5 au d\u00e9but :bksl-nlt.append(None)bksl-nlfor i in range(len (t) - 1, 0, -1):bksl-nl    t[i] = t[i - 1]bksl-nlt[0] = 5bksl-nlbksl-nlprint(f't = {t}')bksl-nl</p> <p>On voit donc que les listes Python ne sont pas toujours id\u00e9ales, selon les op\u00e9rations que l'on souhaite faire. C'est la raison pour laquelle nous allons nous int\u00e9resser \u00e0 un nouveau type de listes : les listes cha\u00een\u00e9es.</p>"},{"location":"terminale/listes/cours_corr/#presentation-des-listes-chainees","title":"Pr\u00e9sentation des listes cha\u00een\u00e9es","text":"<p>Une liste cha\u00een\u00e9e permet, tout comme les listes Python, de repr\u00e9senter une liste, c'est-\u00e0-dire une s\u00e9quence finie de valeurs.</p> <p>Sa structure a pour particularit\u00e9 le fait que les \u00e9l\u00e9ments sont cha\u00een\u00e9s entre eux, permettant le passage d'un \u00e9l\u00e9ment \u00e0 l'\u00e9l\u00e9ment suivant. Ainsi, chaque \u00e9l\u00e9ment est stock\u00e9 dans un petit bloc allou\u00e9 quelque part dans la m\u00e9moire, que l'on pourra appeler maillon ou cellule, \u00e0 laquelle est associ\u00e9e :</p> <ul> <li>une valeur,</li> <li>la r\u00e9f\u00e9rence vers la cellule contenant l'\u00e9l\u00e9ment suivant de la liste.</li> </ul> <p> </p> Une liste cha\u00een\u00e9e <p>La liste cha\u00een\u00e9e ci-dessus contient donc les \u00e9l\u00e9ments <code>1, 2, 3</code>.</p> <p>Type abstrait Liste</p> <p>Voici une mani\u00e8re de d\u00e9finir le type abstrait <code>Liste</code> repr\u00e9sentant une liste cha\u00een\u00e9e.  </p> <p>Utilise : Element, Entier, Booleen Op\u00e9rations fondamentales (primitives):</p> Op\u00e9ration Description \\(nouvelleListeVide :~\\rightarrow Liste~VIDE\\) Renvoie une nouvelle liste vide. \\(estListeVide :~Liste \\rightarrow Booleen\\) Renvoie <code>True</code> si la liste donn\u00e9e est vide, <code>False</code> sinon. \\(inserer :~Liste \\times Element \\times Entier \\rightarrow Liste~NON~VIDE\\) Renvoie une nouvelle liste incluant les \u00e9l\u00e9ments de la liste donn\u00e9e \u00e0 laquelle on a ajout\u00e9 l'\u00e9l\u00e9ment donn\u00e9 d'indice donn\u00e9. \\(listeTete :~Liste \\rightarrow Element\\) Renvoie l'\u00e9l\u00e9ment en t\u00eate (dans la premi\u00e8re cellule) de la liste. \\(listeQueue :~Liste \\rightarrow Liste\\) Renvoie la liste donn\u00e9e priv\u00e9e de sa t\u00eate. <p>Autres op\u00e9rations:</p> Op\u00e9ration Description \\(nieme\\_element :~Liste \\times Entier \\rightarrow Element\\) Renvoie l'\u00e9l\u00e9ment situ\u00e9 \u00e0 l'indice donn\u00e9 de la liste donn\u00e9e. \\(supprimer :~Liste~NON~VIDE \\times Entier \\rightarrow Liste\\) Renvoie une nouvelle liste contenant les \u00e9l\u00e9ments de la liste donn\u00e9e \u00e0 laquelle on a supprim\u00e9 l'\u00e9l\u00e9ment donn\u00e9 d'indice donn\u00e9. \\(longueur :~Liste \\rightarrow Entier~Naturel\\) Renvoie la longueur (nombre d'\u00e9l\u00e9ments) de la liste donn\u00e9e. <p>On peut \u00e9galement avoir des op\u00e9rations permettant d'interagir avec les cellules de la liste, \u00e0 condition de faire, lors de l'impl\u00e9mentation, la distinction entre \"liste\" et \"cellule\" (en cr\u00e9ant une classe <code>Liste</code> et une classe <code>Cellule</code> par exemple). En effet, dans certaines impl\u00e9mentations, listes et cellules peuvent \u00eatre confondues.</p> <p>Interactions avec les Cellules:</p> Op\u00e9ration Description \\(acces :~Liste~NON~VIDE \\times Entier \\rightarrow Cellule\\) Renvoie la cellule situ\u00e9e \u00e0 l'indice donn\u00e9 de la liste donn\u00e9e. \\(contenu :~Cellule \\rightarrow Element\\) Renvoie l'\u00e9l\u00e9ment contenu dans la cellule donn\u00e9e. \\(successeur :~Cellule \\rightarrow Cellule\\) Renvoie la cellule qui succ\u00e8de \u00e0 la cellule donn\u00e9e. <p>Type abstrait \\(\\ne\\) impl\u00e9mentation</p> <p>Il est essentiel de faire la diff\u00e9rence entre un type abstrait et une impl\u00e9mentation. On qualifie d'abstrait ce type de donn\u00e9e car on ne sp\u00e9cifie pas comment les donn\u00e9es sont repr\u00e9sent\u00e9es ni comment les op\u00e9rations sont impl\u00e9ment\u00e9es.</p> <p>Cette d\u00e9finition abstraite du type liste cha\u00een\u00e9e, bien qu'\u00e9tant non mutable (on renvoie une nouvelle liste lors d'une insertion ou de la suppression d'un \u00e9l\u00e9ment), peut donner lieu \u00e0 tout un tas d'impl\u00e9mentations diff\u00e9rentes : avec ou sans la POO, r\u00e9cursive ou non, muable ou immuable, etc. Il n'y a aucune obligation de suivre \u00e0 la lettre la d\u00e9finition abstraite lors de l'impl\u00e9mentation, tant que les op\u00e9rations d\u00e9finies sont bien impl\u00e9ment\u00e9es.</p> <p>On sera donc libre de faire une impl\u00e9mentation muable, avec modification en place de la liste si on le souhaite.</p>"},{"location":"terminale/listes/cours_corr/#implementations-des-listes-chainees","title":"Impl\u00e9mentations des listes cha\u00een\u00e9es","text":""},{"location":"terminale/listes/cours_corr/#implementation-recursive-avec-poo","title":"Impl\u00e9mentation r\u00e9cursive avec POO","text":"<p>Pour notre premi\u00e8re impl\u00e9mentation des listes cha\u00een\u00e9es, on propose d'utiliser la POO.</p> <p>On cr\u00e9e une classe <code>Cellule</code> permettant de repr\u00e9senter une cellule (ou un maillon) d'une liste :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>class Cellule:bksl-nl    ''' Une cellule d'une liste cha\u00een\u00e9e. '''bksl-nlbksl-nl    def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl        self.valeur = v  # Valeur contenue dans la cellulebksl-nl        self.suivante = s  # Cellule suivantebksl-nlbksl-nl    def py-undpy-undlenpy-undpy-und(self):bksl-nl        ''' Renvoie la longueur de la liste non vide. '''bksl-nl        bksl-nl        if self.suivante == None:bksl-nl            return 1bksl-nl        else:bksl-nl            return 1 + len(self.suivante)bksl-nl        bksl-nl    def py-undpy-undstrpy-undpy-und(self):bksl-nl        ''' Renvoie une repr\u00e9sentation textuelle de la liste. '''bksl-nlbksl-nl        res = f'[{self.valeur}'bksl-nl        cell = self.suivantebksl-nl        while cell:bksl-nl            res += f', {cell.valeur}'bksl-nl            cell = cell.suivantebksl-nl        res += ']'bksl-nl        return resbksl-nlbksl-nl# Fonctions d\u00e9finies en dehors de la classebksl-nlbksl-nldef longueur(lst):bksl-nl    ''' Renvoie la longueur d'une liste.bksl-nl    Si la liste est un objet None, cette longueur vaut 0.bksl-nl    Sinon, la longueur est calcul\u00e9e avec la m\u00e9thode py-undpy-undlenpy-undpy-und de la classe Cellule. '''bksl-nlbksl-nl    passbksl-nlbksl-nldef afficher(lst):bksl-nl    ''' Renvoie un affichage textuelle de la liste.bksl-nl    Si la liste est l'objet None, l'affichage sera [].bksl-nl    Sinon, l'affichage sera obtenu avec la m\u00e9thode py-undpy-undstrpy-undpy-und de la classe Cellule. '''bksl-nlbksl-nl    passbksl-nlbksl-nldef niemepy-undelement(n, lst):bksl-nl    ''' Renvoie le n-i\u00e8me \u00e9l\u00e9ment de la liste lst NON VIDE.bksl-nl    Les \u00e9l\u00e9ments sont index\u00e9s \u00e0 partir de 0.bksl-nl    :param lst: (Cellule) une liste cha\u00een\u00e9e non vide.bksl-nl    :return: l'\u00e9l\u00e9ment contenu \u00e0 l'indice n de la liste. '''bksl-nlbksl-nl    if lst is None:bksl-nl        raise ValueError(\"La liste ne doit pas \u00eatre vide !\")bksl-nl    else:bksl-nl        # \u00c0 COMPL\u00c9TERbksl-nl        passbksl-nlbksl-nldef concatener(l1, l2):bksl-nl    ''' Renvoie une nouvelle liste, r\u00e9sultant de la concat\u00e9nation des listes l1 et l2.bksl-nl    :param l1: (Cellule | None) une liste cha\u00een\u00e9ebksl-nl    :param l2: (Cellule | None) une autre liste cha\u00een\u00e9ebksl-nl    :return: (Cellule | None) une nouvelle liste cha\u00een\u00e9e '''bksl-nlbksl-nl    passbksl-nlbksl-nldef renverser(lst):bksl-nl    ''' Renvoie une nouvelle liste contenant les \u00e9l\u00e9ments de <code>lst</code> mais dans l'ordre inverse.bksl-nl    :param lst: (Cellule | None) une liste cha\u00een\u00e9ebksl-nl    :return: (Cellule | None) une nouvelle liste cha\u00een\u00e9e '''bksl-nlbksl-nl# Cr\u00e9er une nouvelle liste contenant 1, 2, 3bksl-nllst = Cellule(1, Cellule(2, Cellule(3, None)))bksl-nllstpy-undvide = Nonebksl-nlafficher(lst)bksl-nlafficher(lstpy-undvide)bksl-nl</p> <p> </p> Visualisation des cellules <p>Impl\u00e9mentation</p> <p>Avec cette impl\u00e9mentation, une liste cha\u00een\u00e9e est soit :</p> <ul> <li>une liste vide repr\u00e9sent\u00e9e par la valeur <code>None</code></li> <li>une liste repr\u00e9sent\u00e9e par une instance de <code>Cellule</code>.</li> </ul> <p>\u00c0 faire</p> <p>\u00c9crivez de mani\u00e8re r\u00e9cursive les fonctions <code>longueur</code>, <code>afficher</code>, <code>nieme_element</code>, <code>concatener</code> et <code>renverser</code>, en respectant bien la documentation.</p> <p>Impl\u00e9mentation finale</p> <p>T\u00e9l\u00e9charger cellule.py</p> <p></p>### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder class Cellule:bksl-nl    ''' Une cellule d'une liste cha\u00een\u00e9e. '''bksl-nlbksl-nl    def py-undpy-undinitpy-undpy-und(self, v, s):bksl-nl        self.valeur = v  # Valeur contenue dans la cellulebksl-nl        self.suivante = s  # Cellule suivantebksl-nlbksl-nl    def py-undpy-undlenpy-undpy-und(self):bksl-nl        ''' Renvoie la longueur de la liste non vide. '''bksl-nl        bksl-nl        if self.suivante == None:bksl-nl            return 1bksl-nl        else:bksl-nl            return 1 + len(self.suivante)bksl-nl        bksl-nl    def py-undpy-undstrpy-undpy-und(self):bksl-nl        ''' Renvoie une repr\u00e9sentation textuelle de la liste. '''bksl-nlbksl-nl        res = f'[{self.valeur}'bksl-nl        cell = self.suivantebksl-nl        while cell:bksl-nl            res += f', {cell.valeur}'bksl-nl            cell = cell.suivantebksl-nl        res += ']'bksl-nl        return resbksl-nlbksl-nl# Fonctions d\u00e9finies en dehors de la classebksl-nlbksl-nldef longueur(lst):bksl-nl    ''' Renvoie la longueur d'une liste.bksl-nl    Si la liste est un objet None, cette longueur vaut 0.bksl-nl    Sinon, la longueur est calcul\u00e9e avec la m\u00e9thode py-undpy-undlenpy-undpy-und de la classe Cellule. '''bksl-nlbksl-nl    if lst is None:  # si la liste cha\u00een\u00e9e est VIDEbksl-nl        return 0  # sa longueur vaut 0bksl-nl    else:bksl-nl        return len(lst)  # sinon, on fait appel \u00e0 la m\u00e9thode sp\u00e9ciale py-undpy-undlenpy-undpy-undbksl-nlbksl-nldef afficher(lst):bksl-nl    ''' Affiche textuellement la liste.bksl-nl    Si la liste est VIDE, repr\u00e9sent\u00e9e par l'objet None, l'affichage sera '[]'.bksl-nl    Sinon, l'affichage sera obtenu avec la m\u00e9thode py-undpy-undstrpy-undpy-und de la classe Cellule. '''bksl-nlbksl-nl    if lst is None:  # si la liste cha\u00een\u00e9e est VIDEbksl-nl        print('[]')bksl-nl    else:bksl-nl        print(lst)  # on fait appel \u00e0 la m\u00e9thode sp\u00e9ciale py-undpy-undstrpy-undpy-undbksl-nlbksl-nldef niemepy-undelement(n, lst):bksl-nl    ''' Renvoie le n-i\u00e8me \u00e9l\u00e9ment de la liste lst NON VIDE.bksl-nl    Les \u00e9l\u00e9ments sont index\u00e9s \u00e0 partir de 0.bksl-nl    :param lst: (Cellule) une liste cha\u00een\u00e9e non vide.bksl-nl    :return: l'\u00e9l\u00e9ment contenu \u00e0 l'indice n de la liste. '''bksl-nlbksl-nl    if lst is None:bksl-nl        raise ValueError(\"La liste ne doit pas \u00eatre vide !\")bksl-nl    elif n == 0:  # cas de base : si n vaut 0bksl-nl        return lst.valeur  # on renvoie la premi\u00e8re valeur de la liste lstbksl-nl    else:bksl-nl        return niemepy-undelement(n - 1, lst.suivante)  # cas g\u00e9n\u00e9ral (r\u00e9cursif)bksl-nlbksl-nldef concatener(l1, l2):bksl-nl    ''' Renvoie une nouvelle liste, r\u00e9sultant de la concat\u00e9nation des listes l1 et l2.bksl-nl    :param l1: (Cellule | None) une liste cha\u00een\u00e9ebksl-nl    :param l2: (Cellule | None) une autre liste cha\u00een\u00e9ebksl-nl    :return: (Cellule | None) une nouvelle liste cha\u00een\u00e9e '''bksl-nlbksl-nl    if l1 is None:  # cas de base : si la liste l1 est VIDEbksl-nl        return l2  # on renvoie simplement l2bksl-nl    else:bksl-nl        return Cellule(l1.valeur, concatener(l1.suivante, l2))  # cas g\u00e9n\u00e9ral (r\u00e9cursif)bksl-nlbksl-nldef renverserpy-undrec(lst):bksl-nl    ''' Renvoie une nouvelle liste contenant les \u00e9l\u00e9ments de <code>lst</code> mais dans l'ordre inverse.bksl-nl    Impl\u00e9mentation r\u00e9cursive, plus simple \u00e0 \u00e9crire mais moins efficace, car on doitbksl-nl    faire autant de concat\u00e9nations qu'il y a d'\u00e9l\u00e9ments dans lst.bksl-nl    :param lst: (Cellule | None) une liste cha\u00een\u00e9ebksl-nl    :return: (Cellule | None) une nouvelle liste cha\u00een\u00e9e '''bksl-nlbksl-nl    if lst is None:  # cas de base : si la liste lst est VIDEbksl-nl        return None  # une liste VIDE renserv\u00e9e reste une liste VIDEbksl-nl    else:bksl-nl        return concatener(renverserpy-undrec(lst.suivante), Cellule(lst.valeur, None))  # cas g\u00e9n\u00e9ral (r\u00e9cursif)bksl-nlbksl-nldef renverserpy-undit(lst):bksl-nl    ''' Renvoie une nouvelle liste contenant les \u00e9l\u00e9ments de <code>lst</code> mais dans l'ordre inverse.bksl-nl    Version it\u00e9rative, plus efficace que la version r\u00e9cursive pr\u00e9c\u00e9dente.bksl-nl    :param lst: (Cellule | None) une liste cha\u00een\u00e9ebksl-nl    :return: (Cellule | None) une nouvelle liste cha\u00een\u00e9e '''bksl-nlbksl-nl    res = None  # cr\u00e9er une nouvelle liste cha\u00een\u00e9e VIDEbksl-nl    c = lst  # stocker la premi\u00e8re cellule de lstbksl-nl    while c is not None:  # tant que l'on a pas parcouru toute la listebksl-nl        res = Cellule(c.valeur, res)  # on cr\u00e9e une nouvelle liste \u00e0 partir de la valeur de la cellule cbksl-nl                                      # et de l'ancienne liste contenue dans resbksl-nl        c = c.suivante  # on r\u00e9cup\u00e8re la cellule suivante pour la stocker dans cbksl-nl    return res  # renvoyer notre nouvelle liste cha\u00een\u00e9ebksl-nl    bksl-nl# Cr\u00e9er une nouvelle liste contenant 1, 2, 3bksl-nllst = Cellule(1, Cellule(2, Cellule(3, None)))bksl-nllstpy-undvide = Nonebksl-nlafficher(lst)bksl-nlafficher(lstpy-undvide)bksl-nl <p>Remarques</p> <ul> <li>La fonction concatener ne modifie pas les deux listes cha\u00een\u00e9es <code>l1</code> et <code>l2</code> pass\u00e9es en entr\u00e9e, elle renvoie une nouvelle liste cha\u00een\u00e9e. Pour cr\u00e9er une liste cha\u00een\u00e9e non vide, on fait appel au constructeur de la classe <code>Cellule</code>.</li> <li>Il faut bien comprendre que dans notre impl\u00e9mentation, une liste cha\u00een\u00e9e, repr\u00e9sent\u00e9e par une instance de la classe <code>Cellule</code>, est confondue avec la premi\u00e8re cellule de cette liste (les deux sont identiques). C'est pourquoi, \u00e0 la ligne <code>81</code> dans la fonction <code>renverser_it</code>, stocker la premi\u00e8re cellule de la liste <code>lst</code> revient \u00e0 stocker la liste <code>lst</code> elle-m\u00eame.</li> <li>La fonction r\u00e9cursive <code>renverser_rec</code> n'est pas tr\u00e8s efficace, puisqu'on fait autant de concat\u00e9nations qu'il y a d'\u00e9l\u00e9ments dans la liste initiale. La version it\u00e9rative <code>renverser_it</code> est plus efficace car on effectue un parcours de la liste initiale, en ajoutant chaque \u00e9l\u00e9ment \u00e0 notre nouvelle liste (en recr\u00e9ant \u00e0 chaque fois une nouvelle liste en instanciant <code>Cellule</code>). Cet ajout est moins co\u00fbteux qu'une concat\u00e9nation.</li> </ul>"},{"location":"terminale/listes/exercices/","title":"Exercices","text":""},{"location":"terminale/listes/exercices/#exercices-listes-chainees","title":"Exercices - Listes cha\u00een\u00e9es","text":"<p>\u00c0 t\u00e9l\u00e9charger</p> <ul> <li>Exercices - Impl\u00e9mentations des listes cha\u00een\u00e9es - Deux autres impl\u00e9mentations des listes cha\u00een\u00e9es.</li> </ul>"},{"location":"terminale/mise_au_point/","title":"Mise au point de programmes","text":""},{"location":"terminale/mise_au_point/#mise-au-point-de-programmes","title":"Mise au point de programmes","text":"Liste des contenus Description Activit\u00e9 pr\u00e9liminaire Une petite activit\u00e9 pr\u00e9liminaire. Cours et exercices Cours et exercices autour de la mise au point des programmes. Activit\u00e9 finale Activit\u00e9 finale autour de la mise au point de programmes. Corrig\u00e9 DS n\u00b01 Corrig\u00e9 du DS n\u00b01 sur la modularit\u00e9 et la mise au point des programmes."},{"location":"terminale/mise_au_point/activite_finale/","title":"Activit\u00e9 finale","text":""},{"location":"terminale/mise_au_point/activite_finale/#activite-finale","title":"Activit\u00e9 finale","text":"<p>Modalit\u00e9s de rendu</p> <p>Vous r\u00e9aliserez ce travail dans un fichier nomm\u00e9 <code>activite_sousmax.py</code>, que vous rendrez depuis la plateforme \u00c9l\u00e9a.</p> <p>On veut d\u00e9finir une fonction qui renvoie le deuxi\u00e8me plus grand \u00e9l\u00e9ment d\u2019un tableau de nombres entiers. Par exemple dans le tableau <code>[4, 2, 7, 5, 9, 1, 5, 3]</code>, la valeur cherch\u00e9e est <code>7</code>. On veut s\u2019assurer que la fonction est cod\u00e9e correctement en cr\u00e9ant un jeu de tests.</p> <p>Concernant les tests, vous \u00eates libre d'utiliser des assertions ou un module de votre choix parmi doctest, pytest et unittest.</p> <p>Exercice 1</p> <p>\u00c9crire l'en-t\u00eate de la fonction finale, que l'on nommera <code>sousmax</code>, incluant une sp\u00e9cification sous la forme d'une docstring. Cette sp\u00e9cification doit contenir :</p> <ul> <li>une explication de ce que fait la fonction,</li> <li>les param\u00e8tres d'entr\u00e9e et leurs types,</li> <li>les conditions d'utilisation (pr\u00e9conditions),</li> <li>le type de la valeur de retour.</li> </ul> <p>Vous devez \u00e9galement d\u00e9crire le comportement de la fonction lorsqu'il existe plusieurs \u00e9l\u00e9ments maximums dans le tableau.</p> <p>Exercice 2 - Tests \u00ab bo\u00eete noire \u00bb</p> <p>\u00c9crire un ensemble de tests unitaires de cette fonction. Ces tests ne prennent pas en compte l'impl\u00e9mentation de la fonction, et doivent uniquement \u00eatre li\u00e9s \u00e0 la sp\u00e9cification.</p> <p>Vous pouvez inclure :</p> <ul> <li>des tests avec des tableaux de moins de deux \u00e9l\u00e9ments,</li> <li>des tests avec des \u00e9l\u00e9ments tous diff\u00e9rents,</li> <li>des tests avec plusieurs \u00e9l\u00e9ments de m\u00eame valeur maximale,</li> <li>des tests avec plusieurs \u00e9l\u00e9ments sous-maximums,</li> <li>un test avec des \u00e9l\u00e9ments tous \u00e9gaux.</li> </ul> <p>Vous pouvez utiliser la fonction <code>shuffle</code> du module <code>random</code> pour effectuer des tests plus exhaustifs (des points bonus seront accord\u00e9s le cas \u00e9ch\u00e9ant).</p> <p>Exercice 3 - Impl\u00e9mentation</p> <p>On propose deux approches pour coder la fonction demand\u00e9e :</p> <p>a. \u00e9crire d\u2019abord une fonction qui calcule la valeur maximale d\u2019un tableau, puis une fonction qui calcule la plus grande valeur d\u2019un tableau inf\u00e9rieure \u00e0 une valeur donn\u00e9e, et enfin utiliser ces deux fonctions pour \u00e9crire une troisi\u00e8me fonction qui calcule la valeur demand\u00e9e ;</p> <p>b. \u00e9crire une fonction qui calcule directement la valeur demand\u00e9e.</p> <p>Impl\u00e9mentez la fonction <code>sousmax</code> en utilisant une des approches ci-dessus.</p> <p>Exercice 4</p> <p>Enfin, lancez les tests que vous avez \u00e9crits \u00e0 l'exercice 2 et corrigez les erreurs \u00e9ventuelles de votre code.</p>"},{"location":"terminale/mise_au_point/cours/","title":"Cours et exercices","text":"Sources <ul> <li>dautrylimoges.scenari-community.org </li> <li>silanus.fr </li> <li>lamadone.frama.io </li> <li>Eduscol </li> <li>Livres : Hachette Terminale NSI, Serge Bays - Terminale NSI, Balabonski Terminale</li> </ul>"},{"location":"terminale/mise_au_point/cours/#cours-mise-au-point-des-programmes","title":"Cours - Mise au point des programmes","text":"<p>Extrait du programme officiel :</p> Contenus Capacit\u00e9s attendues Commentaires Mise au point des programmes. Gestion des bugs. Dans la pratique de la programmation, savoir r\u00e9pondre aux causes typiques de bugs : probl\u00e8mes li\u00e9s au typage, effets de bord non d\u00e9sir\u00e9s, d\u00e9bordements  dans les tableaux, instruction conditionnelle non exhaustive, choix des  in\u00e9galit\u00e9s, comparaisons et calculs entre flottants, mauvais nommage des variables, etc. On prolonge le travail entrepris en classe de premi\u00e8re sur l'utilisation de la sp\u00e9cification, des assertions, de la documentation des programmes et de la construction de jeux de tests. <p>Lorsque l\u2019on ex\u00e9cute un programme, il peut ne pas fonctionner comme pr\u00e9vu. Par exemple, il peut boucler ind\u00e9finiment, ou bien ne pas produire le r\u00e9sultat escompt\u00e9. Et m\u00eame s\u2019il fonctionne comme pr\u00e9vu, rien ne garantit qu'il fournisse toujours un r\u00e9sultat correct quelles que soient les donn\u00e9es d\u2019entr\u00e9e qu\u2019on lui fournit. Un dysfonctionnement dans un programme informatique li\u00e9 \u00e0 un d\u00e9faut de conception est appel\u00e9 \"bug\" .</p> <p>Les bugs causent chaque ann\u00e9e des millions d\u2019euros de perte pour les entreprises et les \u00c9tats (on peut parler du fameux bug ayant caus\u00e9 l'explosion de la fus\u00e9e Ariane 5), voire sont parfois responsables de morts civiles ou militaires.</p> <p>Par ailleurs, un bug peut produire un r\u00e9sultat erron\u00e9, un effet de bord non souhait\u00e9, voire fournir un r\u00e9sultat inattendu mais tr\u00e8s int\u00e9ressant. On dit qu'un programme est \"correct\" s'il :</p> <ul> <li>se termine toujours,</li> <li>fait ce que l'on attend de lui (ad\u00e9quation \u00e0 la sp\u00e9cification).</li> </ul> <p>Autrement dit, pour que le programme soit correct, il ne doit pas y avoir de bug.</p>"},{"location":"terminale/mise_au_point/cours/#bugs","title":"Bugs","text":"<p>Point historique</p> <p>Le terme bug (insecte en fran\u00e7ais) est apparu sur un document de 1947, \u00e9crit par un groupe travaillant sur le calculateur Mark II \u00e0 l'universit\u00e9 d'Harvard. Ce terme \u00e9tait toutefois d\u00e9j\u00e0 employ\u00e9 en \u00e9lectricit\u00e9 depuis des dizaines d'ann\u00e9es pour \u00e9voquer un probl\u00e8me de fonctionnement ou de connexion d'un appareil \u00e9lectrique. Cela a \u00e9t\u00e9 confirm\u00e9 par Grace Hopper, informaticienne am\u00e9ricaine ayant travaill\u00e9 sur le Mark I puis sur le Mark II depuis 1943.</p> <p>Bien s\u00fbr, le but est d'\u00e9viter autant que possible l'\u00e9criture de bugs. Pour ce faire, on peut utiliser des m\u00e9thodes de d\u00e9veloppement particuli\u00e8res, ou des outils d\u2019aide au d\u00e9veloppement (certains IDE sont capables de d\u00e9tecter des erreurs avant l'ex\u00e9cution du programme). Malheureusement, on finit en g\u00e9n\u00e9ral t\u00f4t ou tard par introduire des bugs dans un programme, auquel cas il faut :</p> <ul> <li>savoir mettre en \u00e9vidence le bug et le reproduire ;</li> <li>comprendre l'origine du bug ;</li> <li>corriger le bug.</li> </ul> <p>C\u2019est ce qu\u2019on appelle la mise au point, ou le d\u00e9boguage.</p>"},{"location":"terminale/mise_au_point/cours/#un-exemple","title":"Un exemple","text":"<p>Voici un programme utilisant le module <code>Turtle</code>, un module permettant de faire du dessin vectoriel en d\u00e9pla\u00e7ant une tortue sur l'\u00e9cran :</p> <pre><code>from turtle import *\n\ndef m1(taille):\n    forward(taille)\n    left(60)\n    forward(taille)\n    right(120)\n    forward(taille)\n    left(60)\n    forward(taille)\n\ndef m2(taille):\n    forward(taille)\n    left(60)\n    forward(taille)\n    right(120)\n    forward(taille)\n    left(60)\n    forward(taille)\n    left(60)\n\ndef courbe(longueur, niveau, motif):\n    if niveau == 1:\n        motif(longueur)\n    else:\n        longueur = longueur / 3\n        niveau = niveau - 1\n        courbe(longueur, niveau, motif)\n        lt(60)\n        courbe(longueur, niveau, motif)\n        rt(120)\n        courbe(longueur, niveau, motif)\n        lt(60)\n        courbe(longueur, niveau, motif)\n\nup()\ngoto(-300, -160)\ndown()\nspeed(0)\nht()\nwidth(4)\ncolor('black')\ncourbe(200, 4, m1)\nup()\ngoto(-300, -160)\ndown()\ncolor('red')\ncourbe(200, 4, m2)\n</code></pre> <p>Les diff\u00e9rences entre la fonction <code>m1</code> et <code>m2</code> sont minimes : Il y a une seule instruction en plus \u00e0 la fin de la fonction <code>m2</code> : <code>left(60)</code>. Et pourtant, en ex\u00e9cutant le programme, voici en noir le trac\u00e9 utilisant la fonction <code>m1</code>, et en rouge le trac\u00e9 utilisant la fonction <code>m2</code> :</p> <p> </p> Capture d'\u00e9cran de Turtle <p>On voit donc qu'un tout petit \u00e9l\u00e9ment peut avoir un impact \u00e9norme sur le fonctionnement d'un programme ! D'o\u00f9 l'importance de pr\u00e9venir les erreurs, m\u00eames celles qui peuvent sembler minimes.</p>"},{"location":"terminale/mise_au_point/cours/#deceler-lorigine-dun-bug","title":"D\u00e9celer l'origine d'un bug","text":"<p>Pour comprendre la cause d\u2019un bug, il faut d'abord comprendre comment s\u2019est d\u00e9roul\u00e9e l\u2019ex\u00e9cution du programme qui a amen\u00e9 au bug. Il est important d'\u00eatre capable de simuler \u00e0 la main l'ex\u00e9cution du programme.</p> <p>Il est \u00e9galement important de conna\u00eetre, pour chaque fonction, quelles sont les pr\u00e9conditions, c'est-\u00e0-dire les conditions sur les param\u00e8tres d'entr\u00e9e. On peut pour cela d\u00e9finir des assertions \u00e0 l'int\u00e9rieur de nos fonctions pour v\u00e9rifier les pr\u00e9conditions, ou au minimum d\u00e9finir les pr\u00e9conditions \u00e0 l'int\u00e9rieur de la docstring de nos fonctions.</p> <p>Par exemple, voici une fonction <code>maximum</code> renvoyant le maximum d'une liste de nombres positifs ou nuls :</p> <pre><code>def maximum(liste):\n    '''\n    Fonction renvoyant le maximum d\u2019une liste.\n    :CU: la liste doit contenir des nombres exclusivement positifs ou nuls\n    '''\n\n    valeur_max = 0\n    for valeur in liste:\n        if valeur &gt; valeur_max:\n            valeur_max = valeur\n    return valeur_max\n</code></pre> <p>Ici, <code>CU</code> signifie \"conditions d'utilisation\" (on y indique les pr\u00e9conditions relatives aux param\u00e8tres d'entr\u00e9e). Sur la forme de votre docstring, il n'y a pas de r\u00e8gle particuli\u00e8re. On aurait pu \u00e9crire <code>assert</code> ou encore <code>pr\u00e9conditions</code> au lieu de <code>CU</code>, par exemple.</p> <p>Si l'on ajoute des assertions \u00e0 l'int\u00e9rieur de notre fonction :</p> <pre><code>def maximum(liste):\n    '''\n    Fonction renvoyant le maximum d\u2019une liste.\n    :CU: la liste doit contenir des nombres exclusivement positifs ou nuls\n    '''\n\n    assert all(el &gt;= 0 for el in liste)\n    valeur_max = 0\n    for valeur in liste:\n        if valeur &gt; valeur_max:\n            valeur_max = valeur\n    return valeur_max\n</code></pre> <p>Pour effectuer une analyse pas-\u00e0-pas de votre code, vous pouvez \u00e9galement utiliser un d\u00e9bogueur. De nombreux IDE sont dot\u00e9s d'un d\u00e9bogueur, c'est le cas notamment de Thonny. (Pour d\u00e9bugguer un script avec Thonny, il faut cliquer sur la petite ic\u00f4ne \u00e0 droite de l'ic\u00f4ne d'ex\u00e9cution du script courant.)</p> <p> </p> d\u00e9bogueur de Thonny <p>Par ailleurs, une autre technique plus primaire mais fort utile consiste \u00e0 ajouter des affichages \u00e0 l'int\u00e9rieur de vos fonctions, avec la fonction <code>print</code>, de mani\u00e8re \u00e0 observer l'\u00e9volution du contenu des variables.</p> <p>En savoir plus</p> <p>Pour en savoir plus sur la gestion des bugs, je vous recommande de lire ce document propos\u00e9 par Eduscol.</p>"},{"location":"terminale/mise_au_point/cours/#les-types-derreurs-en-python","title":"Les types d'erreurs en Python","text":""},{"location":"terminale/mise_au_point/cours/#erreurs-de-syntaxe","title":"Erreurs de syntaxe","text":"<p>Les erreurs de syntaxe sont li\u00e9es \u00e0 des instructions malform\u00e9es, qui ne respectent pas les r\u00e8gles du langage. Elles sont d\u00e9tect\u00e9es lors de l\u2019ex\u00e9cution du programme et sont assez faciles \u00e0 corriger car un message d\u2019erreur explicite indique la nature et la localisation de l'erreur.</p> <p>Quelques exemples d'erreurs de syntaxe :</p> <ul> <li>Mauvaise indentation du code, m\u00e9lange d'espaces et de tabulations</li> <li>Oubli des deux-points \u00e0 la fin d'une instruction comme <code>def</code>, <code>if</code> ou <code>while</code></li> <li>Utilisation de <code>=</code> au lieu de <code>==</code> pour les tests d'\u00e9galit\u00e9</li> <li>...</li> </ul>"},{"location":"terminale/mise_au_point/cours/#erreurs-de-typage","title":"Erreurs de typage","text":"<p>Chaque valeur manipul\u00e9e par un programme Python est associ\u00e9e \u00e0 un type. On rappelle les principaux types manipul\u00e9s en Python :</p> <p> </p> Les principaux types en Python(extrait du Balabonski terminale) <p>Voici un exemple d'instruction incorrecte :</p> <pre><code>&gt;&gt;&gt; '2' + 2\nTraceback (most recent call last):\n  File \"&lt;pyshell&gt;\", line 1, in &lt;module&gt;\nTypeError: can only concatenate str (not \"int\") to str\n</code></pre> <p>En cas d'erreur de type, Python l\u00e8ve une erreur de type <code>TypeError</code>, ici Python indique qu'il n'est possible de concat\u00e9ner que deux cha\u00eenes de caract\u00e8res.</p> <p>D'autres erreurs de types :</p> <pre><code>''' L : (list) '''\n&gt;&gt;&gt; print(L[1.5])\nTypeError: list indices must be integers or slices, not float\n</code></pre> <p>Parenth\u00e8ses \u00e0 la place de crochets (pour un objet qui ne peut pas \u00eatre appel\u00e9) :</p> <pre><code>''' L : (list), i : (int) '''\n&gt;&gt;&gt; print(L(i))\nTypeError: \u2019list\u2019 object is not callable\n</code></pre> <p>Crochets \u00e0 la place des parenth\u00e8ses (pour un objet qui ne peut pas \u00eatre indic\u00e9) :</p> <pre><code>''' mystere : (function), i : (int), a : (int) '''\n&gt;&gt;&gt; print(mystere[i])\nTypeError: \u2019function\u2019 object is not subscriptable\n&gt;&gt;&gt; print(a[i])\nTypeError: \u2019int\u2019 object is not subscriptable\n</code></pre> <p>Op\u00e9rations entre deux types non compatibles (ici addition) :</p> <pre><code>''' i : (int) '''\n&gt;&gt;&gt; print(i + \u2019a\u2019)\nTypeError: unsupported operand type(s) for +: \u2019int\u2019 and \u2019str\u2019\n</code></pre> <p>Op\u00e9rations entre deux types non compatibles (ici concat\u00e9nation) :</p> <pre><code>''' i : (int) '''\n&gt;&gt;&gt; print(\u2019a\u2019 + i)\nTypeError: can only concatenate str (not \"int\") to str\n</code></pre> <p> \u00c0 vous de jouer 1</p> <p>Pour chacune des fonctions suivantes, proposez un type pour chacun de ses arguments et un type pour les r\u00e9sultats. Il peut parfois y avoir plusieurs solutions !</p> <pre><code>def f1(t) : \n    return t[O] + 1 \ndef f2(x) : \n    return str(3.14 * x) \ndef f3(p) : \n    x, y = p \n    return 2 * x + y \ndef f4(d, s): \n    if s != \"toto\": \n        d[s] += 1 \n    return d[s] \n</code></pre>"},{"location":"terminale/mise_au_point/cours/#erreurs-liees-aux-effets-de-bord","title":"Erreurs li\u00e9es aux effets de bord","text":"<p>Un effet de bord est une modification d\u2019une variable qui affecte l\u2019\u00e9tat du programme en dehors de la fonction ou de la m\u00e9thode o\u00f9 elle a lieu. En Python, cela arrive principalement de deux mani\u00e8res : par les variables globales et par l\u2019aliassage.</p> <p>On rappelle que pour modifier une variable globale dans une fonction, il est n\u00e9cessaire d'ajouter l\u2019instruction <code>global &lt;nom de la variable&gt;</code> dans la fonction. Par cons\u00e9quent, il est rare de cr\u00e9er un effet de bord par erreur.</p> <p>L\u2019aliassage survient lorsque deux variables r\u00e9f\u00e9rencent la m\u00eame donn\u00e9e, ce qui peut arriver avec les types structur\u00e9s tableau et dictionnaire et avec les objets, notamment lorsqu\u2019on les passe en param\u00e8tre.</p> <p>Les effets de bord ind\u00e9sirables peuvent \u00eatre difficile \u00e0 d\u00e9tecter car ils ne l\u00e8vent pas d'erreurs \u00e0 l'ex\u00e9cution. Il s'agit donc de bien documenter les fonctions pour indiquer quels sont les \u00e9ventuels effets de bord attendus.</p> <p>Voici un petit exemple :</p> <pre><code>def mystere():\n  L.sort()\n  for i in L:\n    return i == 1\n\ndef autre_fonction():\n  assert L == [3,2,1]\n</code></pre> <p>Si l'on ex\u00e9cute les instructions suivantes :</p> <pre><code>&gt;&gt;&gt; L = [3,2,1]\n&gt;&gt;&gt; mystere()\n&gt;&gt;&gt; autre_fonction()\nTraceback (most recent call last):\n  File \"C:\\Users\\demer\\Desktop\\test.py\", line 12, in &lt;module&gt;\n    autre_fonction()\n  File \"C:\\Users\\demer\\Desktop\\test.py\", line 8, in autre_fonction\n    assert L == [3,2,1]\nAssertionError\n</code></pre> <p> \u00c0 vous de jouer 2</p> <p>Pourquoi la fonction <code>autre_fonction</code> a t-elle \u00e9chou\u00e9e ?</p>"},{"location":"terminale/mise_au_point/cours/#erreurs-semantiques","title":"Erreurs s\u00e9mantiques","text":"<p>L'erreur s\u00e9mantique, \u00e9galement appel\u00e9e erreur de logique, est une erreur qui n'implique pas de message d'erreur : le programme semble s'ex\u00e9cuter parfaitement, mais le r\u00e9sultat n\u2019est pas le r\u00e9sultat attendu.</p> <p>En fait, le programme fait exactement ce que vous lui avez dit de faire, mais ce que vous lui avez dit de faire ne correspond pas \u00e0 ce que vous vouliez qu\u2019il fasse : la s\u00e9quence d\u2019instructions du programme ne correspond pas \u00e0 l\u2019objectif vis\u00e9. La s\u00e9mantique (la logique) est donc incorrecte.</p> <p>Ces erreurs sont particuli\u00e8rement difficile \u00e0 identifier, et n\u00e9cessite d'\u00eatre capable de vous replonger dans la logique de votre code pour en d\u00e9celer les failles.</p>"},{"location":"terminale/mise_au_point/cours/#erreurs-a-lexecution","title":"Erreurs \u00e0 l'ex\u00e9cution","text":"<p>Il s'agit d'une erreur qui survient en cours d\u2019ex\u00e9cution (Runtime error), lorsqu'un programme fonctionne d\u00e9j\u00e0, mais que des circonstances particuli\u00e8res se pr\u00e9sentent (par exemple, le programme essaie de lire un fichier qui n\u2019existe plus).</p>"},{"location":"terminale/mise_au_point/cours/#erreurs-de-valeur","title":"Erreurs de valeur","text":"<p>Un exemple :</p> <pre><code>&gt;&gt;&gt; from random import randrange\n&gt;&gt;&gt; randrange(1, 3.5)\nTraceback (most recent call last):\n    File \"&lt;pyshell#92&gt;\", line 1, in &lt;module&gt;\n        randrange(1, 3.5)\n    File \"C:\\python3.7.4.amd64\\lib\\random.py\", line 195, in randrange\n        raise ValueError(\"nonintegerstop for randrange()\")\nValueError: nonintegerstop for randrange()\n</code></pre>"},{"location":"terminale/mise_au_point/cours/#erreurs-lies-au-nommage-des-variables","title":"Erreurs li\u00e9s au nommage des variables","text":"<p>Le bon nommage des variables est particuli\u00e8rement important car il permet d'am\u00e9liorer la lisibilit\u00e9 du programme, et \u00e9galement d'\u00e9viter le masquage de variables.</p> <p>Le masquage de variables peut survenir lorsque :</p> <ul> <li>Vous importez une biblioth\u00e8que et d\u00e9clarez une fonction dans votre programme qui a le m\u00eame nom qu'une fonction de votre biblioth\u00e8que. Cela peut survenir lorsque vous effectuez des imports de la forme <code>from ma_bibliotheque import *</code>, il faut vraiment \u00e9viter ce type d'imports. Il vaut mieux effectuer des imports de la forme <code>import ma_bibliotheque</code> ou encore <code>import ma_bibliotheque as mb</code>, cela permet de faire des appels de fonctions de la forme <code>mb.ma_fonction</code>.</li> <li>Vous utiliser une variable globale \u00e0 l'int\u00e9rieur d'une fonction qui porte le m\u00eame nom qu'un des param\u00e8tres de la fonction. Pour \u00e9viter cela, on peut par exemple ajouter <code>g_</code> devant le nom de toutes nos variables globales. Par ailleurs, en g\u00e9n\u00e9ral, les variables globales sont utilis\u00e9es comme des constantes, et on met leurs noms en majuscules par convention.</li> </ul>"},{"location":"terminale/mise_au_point/cours/#autres-types-derreurs","title":"Autres types d'erreurs...","text":"<ul> <li>Erreurs de syntaxe et d'indentation :<ul> <li><code>SyntaxError</code> : erreur de parenth\u00e8se manquante.   Exemple : <code>len([1,2,3]</code></li> <li><code>IdentationError</code> (h\u00e9rite de <code>SyntaxError</code>) : Indentation oubli\u00e9e, trop grande, blocs mal d\u00e9limit\u00e9s, etc.</li> </ul> </li> <li>Erreurs d'ex\u00e9cution d'op\u00e9rations de base :<ul> <li><code>IndexError</code> : Acc\u00e8s \u00e0 un index non pr\u00e9sent dans une liste, un tuple, un str...   Exemple : <code>[1,2,3][3]</code></li> <li><code>KeyError</code> : Erreur de cl\u00e9 avec un dictionnaire.</li> <li><code>NameError</code> Nom de fonction ou de variable mal orthographi\u00e9.   Exemple : <code>prout(\"Bonsoir\")</code></li> <li><code>ValueError</code> : Lev\u00e9e lorsqu'une op\u00e9ration ou une fonction re\u00e7oit une valeur inappropri\u00e9e.</li> <li><code>TypeError</code> : Op\u00e9ration impossible entre deux types, conversion de type impossible.   Exemple : <code>\"3\" * \"5\"</code></li> <li><code>ZeroDivisionError</code> : Lev\u00e9e en cas de division par z\u00e9ro.</li> </ul> </li> <li>Oubli du <code>return</code> dans une fonction.</li> </ul>"},{"location":"terminale/mise_au_point/cours/#exercices","title":"Exercices","text":"<p> \u00c0 vous de jouer 3</p> <p>Cliquez-ici pour acc\u00e9der aux exercices.</p>"},{"location":"terminale/mise_au_point/cours/#specification-et-tests","title":"Sp\u00e9cification et tests","text":"<p>Tester un programme (ou une fonction, un module) consiste \u00e0 v\u00e9rifier qu\u2019il fonctionne comme pr\u00e9vu dans un maximum de situations possibles. Un jeu de tests est un programme ou un ensemble de programmes qui vise \u00e0 mettre en d\u00e9faut la partie test\u00e9e. Si un test \u00e9choue, il faut mettre au point le code, c\u2019est-\u00e0-dire identifier puis corriger le probl\u00e8me, et effectuer \u00e0 nouveau le test.</p> <p>Attention !</p> <p>Les jeux de tests ne permettent pas de garantir qu'un programme est correct, \u00e0 moins que ceux-ci soient exhaustifs (c'est-\u00e0-dire que l'on teste notre programme avec toutes les entr\u00e9es possibles, ce qui n'est pas envisageable la plupart du temps.)</p> <p>Si l'on veut prouver qu'un programme est correct, il faut utiliser la notion d'invariant vue en premi\u00e8re, et pour prouver que notre programme se termine, il faut utiliser la notion de variant. Lorsque l'on parvient \u00e0 exhiber un variant et un invariant, on peut les v\u00e9rifier avec des assertions \u00e0 l'int\u00e9rieur de notre programme (voir activit\u00e9 pr\u00e9liminaire.)</p> <p>Durant la phase de conception d'un programme, on commence par :</p> <ul> <li> <p>\u00e9crire la sp\u00e9cification du programme</p> </li> <li> <p>\u00e9crire des jeux de tests pour valider le fonctionnement du programme.</p> </li> </ul> <p>La sp\u00e9cification d'une fonction :</p> <ul> <li>d\u00e9crit ce que fait la fonction.</li> <li>liste ses param\u00e8tres d'entr\u00e9e et leur type</li> <li>indique le type de la valeur de retour</li> <li>\u00e9ventuellement :<ul> <li>sp\u00e9cifie les pr\u00e9conditions (parfois appel\u00e9es conditions d'utilisation) sur les param\u00e8tres d'entr\u00e9e,</li> <li>indique les effets de bord de la fonction,</li> <li>propose des exemples d'utilisation de la fonction,</li> <li>indique les erreurs lev\u00e9es en cas de mauvaise utilisation,</li> <li>etc.</li> </ul> </li> </ul> <p>Elle peut prendre diverses formes, comme un simple titre, un long document, une sp\u00e9cification formelle \u00e9crite dans un langage d\u00e9di\u00e9, un ensemble d\u2019exemples d\u2019utilisation, un ensemble de cas de tests, etc.</p> <p>En Python, on utilise des docstrings (cha\u00eenes de caract\u00e8res sous la forme <code>\"\"\" [...] \"\"\"</code> ou <code>''' [...] '''</code>) pour sp\u00e9cifier les fonctions, programmes, classes, etc.</p> <p>Les tests doivent donc se baser sur cette sp\u00e9cification qui indique ce que le programme est cens\u00e9 faire et ne pas faire.</p>"},{"location":"terminale/mise_au_point/cours/#plusieurs-types-de-tests","title":"Plusieurs types de tests","text":"<p>Les diff\u00e9rents types de tests</p> <p>On peut classer les tests selon diff\u00e9rents crit\u00e8res :</p> <ul> <li>le niveau des tests (tests unitaires, tests d\u2019int\u00e9gration, tests de recette) ;</li> <li>le processus de conception des tests (tests bo\u00eete blanche, tests bo\u00eete noire) ;</li> <li>le sujet du test (tests fonctionnels, tests de mont\u00e9e en charge, tests d\u2019utilisabilit\u00e9, etc.).</li> </ul> <p>Voici quelques d\u00e9finitions essentielles concernant les tests.</p> <ul> <li>cas de test : triplet (descriptif, donn\u00e9es d\u2019entr\u00e9e, r\u00e9sultat attendu) pr\u00e9cisant, pour des donn\u00e9es pr\u00e9cises, le r\u00e9sultat attendu de la partie du programme que l\u2019on veut tester.</li> <li>jeu de tests : ensemble de cas de test destin\u00e9s \u00e0 valider une partie pr\u00e9cise du fonctionnement d\u2019un programme. Le terme test peut se r\u00e9f\u00e9rer suivant les circonstances \u00e0 un cas de test, \u00e0 un jeu de tests, ou au processus de test en g\u00e9n\u00e9ral.</li> </ul> <p>Niveaux des tests :</p> <ul> <li>test unitaire : test destin\u00e9 \u00e0 tester une petite partie d'un programme (comme une fonction) ind\u00e9pendamment des autres parties.</li> <li>test d\u2019int\u00e9gration : test destin\u00e9 \u00e0 v\u00e9rifier que 2 parties d\u2019un programme, d\u00e9velopp\u00e9es a priori ind\u00e9pendamment l\u2019une de l\u2019autre, fonctionnent correctement lorsqu\u2019elles sont mises ensemble.</li> <li>test de recette : test destin\u00e9 \u00e0 v\u00e9rifier une fonctionnalit\u00e9 g\u00e9n\u00e9rale d\u2019un logiciel dans son ensemble.</li> </ul> <p>Processus de conception :</p> <p>On distingue les tests \u00ab bo\u00eete noire \u00bb et les tests \u00ab bo\u00eete blanche \u00bb (\u00e0 noter que ces notions ne sont pas au programme) :</p> <ul> <li> <p>Un test \u00ab bo\u00eete noire \u00bb est un test qui est con\u00e7u \u00e0 partir des donn\u00e9es d\u2019entr\u00e9es potentielles, ind\u00e9pendamment du code \u00e9crit. Un test \u00ab bo\u00eete noire \u00bb peut donc \u00eatre \u00e9crit avant le code, ou s\u2019il est \u00e9crit apr\u00e8s, il doit \u00eatre \u00e9crit par quelqu\u2019un qui ne conna\u00eet pas le code. Exemple : une fonction doit g\u00e9n\u00e9rer l\u2019en-t\u00eate d\u2019une lettre. Pour cela, elle prend en param\u00e8tre un objet repr\u00e9sentant le destinataire de la lettre (pr\u00e9nom, nom, sexe). Sans conna\u00eetre le code de la fonction, on peut d\u00e9j\u00e0 envisager 2 cas de test, un pour un homme et un pour une femme, et v\u00e9rifier que dans le premier cas l\u2019en-t\u00eate commence par \u00ab Cher \u00bb alors qu\u2019il commence par \u00ab Ch\u00e8re \u00bb dans le second cas.</p> </li> <li> <p>Un test \u00ab bo\u00eete blanche \u00bb est un test qui est con\u00e7u \u00e0 partir du programme. Le but de ce type de test est de tester les diff\u00e9rents cas pr\u00e9vus par le programme.</p> </li> </ul> <p>Sujets du test :</p> <ul> <li>test fonctionnel : test visant \u00e0 d\u00e9terminer la correction de l\u2019\u00e9tat final par rapport \u00e0 l\u2019\u00e9tat initial d'un programme. Si l'on parle de fonctions, il s'agit de d\u00e9terminer la correction de la valeur de retour (c'est-\u00e0-dire v\u00e9rifier que la valeur de retour soit bien celle qui est attendue) de la fonction par rapport aux donn\u00e9es d'entr\u00e9e. Souvent un test \u00ab bo\u00eete noire \u00bb.</li> <li>test structurel : test v\u00e9rifiant le fonctionnement interne d'un programme. Souvent un test \u00ab bo\u00eete blanche \u00bb.</li> <li>test de mont\u00e9e en charge : test visant \u00e0 v\u00e9rifier si un serveur continue \u00e0 bien fonctionner avec un grand nombre de sollicitations simultan\u00e9es.</li> <li>test d'utilisabilit\u00e9 : test destin\u00e9 \u00e0 \u00e9valuer l\u2019ergonomie (efficacit\u00e9 et simplicit\u00e9 de l'interface utilisateur) d\u2019un programme.</li> <li>test de performance : test v\u00e9rifiant que le logiciel se comporte correctement lorsqu\u2019il est confront\u00e9 \u00e0 des donn\u00e9es de grande taille ou, pour un serveur, \u00e0 un grand nombre de connexions.</li> </ul> <p>En savoir plus</p> <p>Pour en savoir plus sur l'\u00e9criture de tests, je vous recommande ce tr\u00e8s bon document propos\u00e9 par Eduscol.</p> <p>Toutefois, gardez en t\u00eate que beaucoup de choses qui y sont pr\u00e9sent\u00e9es ne sont pas au programme. Mais cela peut \u00eatre int\u00e9ressant pour votre culture personnelle !</p>"},{"location":"terminale/mise_au_point/cours/#tests-avec-des-assertions","title":"Tests avec des assertions","text":"<p>On peut effectuer des tests \u00e0 l'aide d'assertions. Si rien ne se passe, les tests sont valid\u00e9s.</p> <pre><code>def trouver_indice(lst, n):\n    ''' Fonction qui renvoie l'indice de l'entier n dans la liste lst.\n    Si l'\u00e9l\u00e9ment n est pr\u00e9sent plusieurs fois, l'indice du premier est renvoy\u00e9.\n    :param lst: (list[int]) Liste d'entiers\n    :param n: (int) Entier \u00e0 chercher\n    :return: (int) si \u00e9l\u00e9ment trouv\u00e9, (None) sinon\n    '''\n\n    for i in range(len(lst)):\n        if lst[i] == n:\n            return i\n\nassert trouver_indice([2,1,4], 4) == 2\nassert trouver_indice([2,1,4], 5) == None\nassert trouver_indice([], 1) == None\nassert trouver_indice([2,1,8,1,5], 1) == 1\n</code></pre> <p>Dans certains cas, il peut \u00e9galement \u00eatre utile d'effectuer des boucles de tests et des tests al\u00e9atoires.</p> <p>Exemple :</p> <pre><code>def tri(lst: list[int]) -&gt; list[int]  # Prend une liste non-tri\u00e9e, renvoie la liste tri\u00e9e\ndef generer_liste(n: int) -&gt; list[int]  # G\u00e9n\u00e8re une liste al\u00e9atoire de taille n\ndef est_trie(lst: list[int]) -&gt; bool  # Renvoie True si une liste est tri\u00e9e, False sinon\n\nfor n in range(20):  # Tester pour des tailles de 0 \u00e0 19\n    for _ in range(10):  # Tester sur 10 listes al\u00e9atoires diff\u00e9rentes\n        l = generer_liste(n)\n        assert est_trie(tri(l))\n</code></pre> <p>On peut \u00e9galement ajouter un message d'erreur lorsqu'une <code>AssertionError</code> est lev\u00e9e :</p> <pre><code>assert trouver_indice([], 1) == None, \"Erreur lors d'un test avec une liste vide.\"\n</code></pre> <p> \u00c0 vous de jouer 4</p> <p>\u00c9crivez une fonction <code>est_pair</code> qui renvoie <code>True</code>si un nombre <code>n</code> donn\u00e9 est pair, <code>False</code> sinon, puis cr\u00e9ez un ensemble de tests de votre fonction \u00e0 l'aide d'assertions.</p> <p>Documentez-bien votre fonction \u00e0 l'aide d'une docstring et \u00e9ventuellement d'annotations de types.</p> <p>Quelques exercices</p> <p>Voici deux exercices pour vous entra\u00eener \u00e0 \u00e9crire des tests \u00e0 l'aide d'assertions :</p> <ul> <li>Exercice - La fonction Factorielle</li> <li>Exercice - Que fait ce programme ?</li> </ul>"},{"location":"terminale/mise_au_point/cours/#quelques-modules-de-tests","title":"Quelques modules de tests","text":"<p>Pas au programme</p> <p>Les modules de tests sont pr\u00e9sent\u00e9s ici pour votre culture g\u00e9n\u00e9rale, et parce qu'ils vous seront bien utiles si vous souhaitez continuer \u00e0 travailler dans l'informatique apr\u00e8s le bac.</p> <p>Toutefois, dans le cadre des sujets propos\u00e9s au bac, les tests sont principalement effectu\u00e9s \u00e0 l'aide d'assertions. La connaissance des modules de tests pr\u00e9sent\u00e9s ici ne sont donc pas exigibles.</p> <p>Il existe principalement 3 modules Python pour \u00e9crire et ex\u00e9cuter des tests :</p> <ul> <li><code>unittest</code> : outil de base, int\u00e9gr\u00e9 \u00e0 Python ;</li> <li><code>doctest</code> : outil externe qui permet d\u2019ex\u00e9cuter des tests inclus dans la documentation des fonctions. Les tests servent alors \u00e9galement de documentation de la fonction ;</li> <li><code>pytest</code> : outil externe qui permet d\u2019ex\u00e9cuter des tests \u00e9crits dans des fichiers d\u00e9di\u00e9s. C\u2019est l\u2019outil le plus utilis\u00e9, car le plus complet.</li> </ul> <p>Exemples d'utilisation des modules</p> fichier description exemple_doctest.py Un exemple d'utilisation du module doctest. exemple_pytest.py Un exemple d'utilisation du module pytest. exemple_unittest.py Un exemple d'utilisation du module unittest."},{"location":"terminale/mise_au_point/cours/#aller-plus-loin-la-programmation-defensive","title":"Aller plus loin : La programmation d\u00e9fensive","text":"<ul> <li>La programmation d\u00e9fensive consiste \u00e0 \u00e9crire son code de fa\u00e7on \u00e0 s'attendre au pire.</li> <li>Il s'agit d'anticiper le comportement de l'utilisateur final :<ul> <li>V\u00e9rifier que les donn\u00e9es saisies et leur type sont \"correctes\" (= respectent la sp\u00e9cification).</li> <li>Si ce n'est pas le cas, interrompre le programme, \u00e9ventuellement afficher un message d'erreur...</li> </ul> </li> </ul> <p>Dans le cadre d'une fonction, il s'agit de s'assurer du respect :</p> <ul> <li>des pr\u00e9conditions : conditions sur les arguments d'entr\u00e9e.</li> <li>des postconditions : conditions sur la valeur de sortie.</li> </ul>"},{"location":"terminale/mise_au_point/cours/#gerer-les-exceptions","title":"G\u00e9rer les exceptions","text":"<p>Un bloc d'instructions <code>try... except...</code> permet d'effectuer des actions lorsque des erreurs sp\u00e9cifiques sont lev\u00e9es.</p> <pre><code>try:\n    a = int(input('a ? '))\n    b = int(input('b ? '))\n    print(a, '/', b, '=', a / b)\nexcept ValueError:\n    print('Erreur de conversion.')\nexcept ZeroDivisionError:\n    print('Division par z\u00e9ro.')\nexcept:\n    print('Autre erreur.')\n</code></pre> <p>Toutes les exceptions (<code>valueError</code>, <code>typeError</code>, etc.) natives de Python sont en fait d\u00e9riv\u00e9es d'une classe <code>Exception</code>. Ainsi, ce sont des objets, que l'on peut r\u00e9cup\u00e9rer en pr\u00e9cisant un nom de variable apr\u00e8s <code>except</code> comme dans cet exemple :</p> <pre><code>try:\n    a = int(input('a ? '))\n    b = int(input('b ? '))\n    print(a, '/', b, '=', a / b)\nexcept Exception as e:\n    print(type(e))\n    print(e)\n</code></pre> <p>Il est \u00e9galement possible de cr\u00e9er ses propres exceptions d\u00e9riv\u00e9es de cette classe.</p> <p>Plus d'informations sur cette page</p>"},{"location":"terminale/mise_au_point/ds1/","title":"Corrig\u00e9 DS n\u00b01","text":""},{"location":"terminale/mise_au_point/ds1/#corrige-ds-n1","title":"Corrig\u00e9 DS n\u00b01","text":"<p>\u00c9nonc\u00e9 PDF</p> <p>Vous pouvez t\u00e9l\u00e9charger ici l'\u00e9nonc\u00e9 du DS n\u00b01 au format PDF :</p> <p></p> T\u00e9l\u00e9charger l'\u00e9nonc\u00e9 du DS"},{"location":"terminale/mise_au_point/ds1/#un-module-adn","title":"Un module <code>adn</code>","text":"<p>Les mol\u00e9cules d'ADN pr\u00e9sentes dans les cellules vivantes contiennent l'information g\u00e9n\u00e9tique et permettent le d\u00e9veloppement, le fonctionnement et la reproduction des \u00eatres vivants. L'ADN est form\u00e9 de deux brins qui sont une succession de nucl\u00e9otides portant chacun une base azot\u00e9e.</p> <p>Les quatre bases azot\u00e9es sont l'ad\u00e9nine (A), la thymine (T), la cytosine (C) et la guanine (G). Elles s'associent deux par deux : A avec T d'une part, C avec G d'autre part. </p> <p>Exercice 1</p> <p>Le but de l'exercice est de d\u00e9finir un module <code>adn</code> contenant la constante et les fonctions suivantes :</p> <ol> <li>La constante <code>BASES_ASSOCIEES = {'A':'T', 'T':'A', 'C':'G', 'G':'C'}</code>.</li> <li>La fonction <code>sequence_alea</code> qui prend en param\u00e8tre d'entr\u00e9e un entier <code>n</code> positif et renvoie une s\u00e9quence d'ADN al\u00e9atoire de longueur <code>n</code> sous la forme de cha\u00eene de caract\u00e8res.</li> <li>La fonction <code>complementaire</code> qui prend en param\u00e8tre d'entr\u00e9e une cha\u00eene de caract\u00e8res <code>brin</code> et renvoie le brin compl\u00e9mentaire sous forme de cha\u00eene de caract\u00e8res.</li> <li>La fonction <code>proportionAT</code> qui prend en param\u00e8tre d'entr\u00e9e une cha\u00eene <code>brin</code> et renvoie la proportion de bases A/T pr\u00e9sentes dans le brin. Le valeur renvoy\u00e9e est donc un flottant.</li> </ol> <p>Impl\u00e9mentez ce module <code>adn</code>, en documentant chaque fonction \u00e0 l'aide d'une docstring contenant ce que fait la fonction, la liste de ses param\u00e8tres d'entr\u00e9e et leur type ainsi que le type de la valeur de retour.</p> <p>Aide - Exercice 1</p> <ul> <li>Pour la fonction <code>sequence_alea</code>, vous pourrez utiliser la fonction <code>choice</code> du module <code>random</code>, qui renvoie une valeur al\u00e9atoire dans une liste.</li> <li>Pour la fonction <code>proportionAT</code>, on calcule la proportion en divisant le nombre de bases A et T par la longueur du brin d'ADN.</li> </ul> Correction - Exercice 1 <p>Voici le module <code>adn</code> corrig\u00e9 :</p> <pre><code>from random import choice  # importer fonction choice du module random\n\n# D\u00e9finir constante BASES_ASSOCIEES :\nBASES_ASSOCIEES = {'A':'T', 'T':'A', 'C':'G', 'G':'C'}\n\ndef sequence_alea(n: int) -&gt; str:\n    ''' Renvoie une s\u00e9quence ADN al\u00e9atoire de longueur n\n    sous la forme de cha\u00eene de caract\u00e8res.\n    :param n: (int) taille de la s\u00e9quence \u00e0 g\u00e9n\u00e9rer\n    :return: (str) une s\u00e9quence ADN al\u00e9atoire '''\n\n    res = \"\"\n    bases = [key for key in BASES_ASSOCIEES]\n    for _ in range(n):\n        res += choice(bases)\n    return res\n\ndef complementaire(brin: str) -&gt; str:\n    ''' Renvoie le brin compl\u00e9mentaire du brin donn\u00e9.\n    :param brin: (str) un brin d'ADN\n    :return: (str) le brin compl\u00e9mentaire '''\n\n    res = \"\"\n    for base in brin:\n        res += BASES_ASSOCIEES[base]\n    return res\n\ndef proportionAT(brin: str) -&gt; float:\n    ''' Renvoie la proportion de bases A/T pr\u00e9sentes dans le brin.\n    :param brin: (str) un brin d'ADN\n    :return: (float) proportion de bases A/T '''\n\n    compteur = 0\n    for base in brin:\n        if base == 'A' or base == 'T':\n            compteur += 1\n    return compteur / len(brin)\n</code></pre> <p>Exercice 2</p> <p>On souhaite maintenant utiliser ce module <code>adn</code> (\u00e9crit dans un fichier <code>adn.py</code>).\\newline</p> <p>\u00c9crivez un nouveau script Python (incluant les imports n\u00e9cessaires du module <code>adn</code>) qui r\u00e9alise le programme suivant :</p> <ul> <li>demande \u00e0 l'utilisateur de saisir un nombre <code>n</code>,</li> <li>g\u00e9n\u00e8re <code>n</code> s\u00e9quences d'ADN al\u00e9atoires de taille <code>10</code>,</li> <li>affiche enfin la plus grande proportion de bases A/T parmi toutes les s\u00e9quences g\u00e9n\u00e9r\u00e9es, ainsi que la s\u00e9quence associ\u00e9e. Exemple d'affichage : <code>\"s\u00e9quence : ATCTCGCATA - proportion : 0.6\"</code>.</li> </ul> <p>Pour rappel, la fonction <code>input</code> permet de demander \u00e0 l'utilisateur de saisir une valeur, et de la r\u00e9cup\u00e9rer sous la forme d'une cha\u00eene de caract\u00e8res (il sera donc peut-\u00eatre n\u00e9cessaire de convertir la valeur en <code>int</code> en utilisant la fonction <code>int()</code>).</p> <p>Il n'est pas n\u00e9cessaire d'\u00e9crire une docstring ici.</p> Correction - Exercice 2 <p>Dans un nouveau script Python, il faut donc importer le module <code>adn</code> que nous avons cr\u00e9\u00e9 afin d'utiliser ses fonctions dans notre programme.</p> <p>En l'occurence, j'ai fait le choix d'importer uniquement les fonctions n\u00e9cessaires, c'est-\u00e0-dire <code>sequence_alea</code> et <code>proportionAT</code>.</p> <pre><code>from adn import sequence_alea, proportionAT\n\nn = int(input(\"Saisissez un nombre n : \"))  # demander \u00e0 l'utilisateur de saisir un nombre\nsequence_max = None  # initialiser la s\u00e9quence avec le max de bases A/T \u00e0 None\nproportion_max = 0  # initialiser la proportion max de bases A/T \u00e0 0\nfor _ in range(n):  # it\u00e9rer n fois\n    sequence = sequence_alea(10)  # g\u00e9n\u00e9rer une s\u00e9quence ADN de taille 10\n    proportion = proportionAT(sequence)  # obtenir la proportion de bases A/T\n    if proportion &gt; proportion_max:  # si la proportion de bases A/T est sup\u00e9rieure au max actuel\n        proportion_max = proportion  # on remplace la proportion max actuelle par celle que l'on a trouv\u00e9\n        sequence_max = sequence  # on remplace l'ancienne s\u00e9quence stock\u00e9e par la nouvelle\nprint(f's\u00e9quence : {sequence_max} - proportion : {proportion_max}')  # afficher r\u00e9sultat\n</code></pre> <p>On peut \u00e9galement importer le module <code>adn</code> avec l'instruction <code>import adn</code>, auquel cas l'appel des fonctions du module sera de la forme <code>adn.&lt;NOM_FONCTION&gt;</code>, comme ceci :</p> <pre><code>import adn\n\nn = int(input(\"Saisissez un nombre n : \"))\nsequence_max = None\nproportion_max = 0\nfor _ in range(n):\n    sequence = adn.sequence_alea(10)\n    proportion = adn.proportionAT(sequence)\n    if proportion &gt; proportion_max:\n        proportion_max = proportion\n        sequence_max = sequence\nprint(f's\u00e9quence : {sequence_max} - proportion : {proportion_max}')\n</code></pre>"},{"location":"terminale/mise_au_point/ds1/#mise-au-point-et-tests","title":"Mise au point et tests","text":""},{"location":"terminale/mise_au_point/preliminaire/","title":"Activit\u00e9 pr\u00e9liminaire","text":""},{"location":"terminale/mise_au_point/preliminaire/#activite-preliminaire","title":"Activit\u00e9 pr\u00e9liminaire","text":"<p>Source</p> <p>Inspir\u00e9 d'une activit\u00e9 du Hachette NSI Terminale.</p>"},{"location":"terminale/mise_au_point/preliminaire/#ajouter-des-traces","title":"Ajouter des traces","text":"<p>La fonction suivante a \u00e9t\u00e9 \u00e9crite par un \u00e9l\u00e8ve de premi\u00e8re suite \u00e0 une consigne de son professeur pour impl\u00e9menter l\u2019algorithme de recherche dichotomique.</p> <p>La docstring, pr\u00e9sent\u00e9 dans la fonction, sp\u00e9cifie ce qu'elle est cens\u00e9e faire.</p> <pre><code>def recherche(t, v):\n    ''' Renvoie l'indice de l'\u00e9l\u00e9ment v dans le tableau t.\n    Si l'\u00e9l\u00e9ment n'est pas trouver, renvoie -1.\n    :param t: (list) un tableau d'entiers\n    :param v: (int) l'entier \u00e0 chercher\n    :return: (int) l'indice de l'\u00e9l\u00e9ment s'il est trouv\u00e9, ou -1 sinon '''\n\n    gauche = 0\n    droite = len(t)\n    while gauche &lt; droite:\n        milieu = (gauche+droite) // 2\n        if t[milieu] &lt; v:\n            gauche = milieu\n        else:\n            droite = milieu\n    return droite\n</code></pre> <p>Exercice 1</p> <p>Copier le programme ci-dessus dans l\u2019\u00e9diteur de script de Thonny</p> <ol> <li>Tester la fonction recherche avec le tableau <code>[2, 3, 4, 6, 7]</code> et la valeur 5. Qu\u2019observe-t-on ? La fonction est-elle correcte ?</li> <li> <p>Ajouter des instructions <code>print</code> pour afficher les valeurs des variables au cours de l\u2019ex\u00e9cution. Pour vous aider, vous pouvez \u00e9galement utiliser un <code>assert</code> pour tester l'invariant, ainsi qu'un <code>assert</code> pour tester le variant. On rappelle l'invariant de la recherche dichotomique : \u00ab Si l'\u00e9l\u00e9ment recherch\u00e9 <code>v</code> est pr\u00e9sent dans le tableau, alors <code>v</code> est compris entre l'\u00e9l\u00e9ment d'indice <code>gauche</code> et l'\u00e9l\u00e9ment d'indice <code>droite</code> \u00bb. On peut \u00e9crire l'assertion v\u00e9rifiant cet invariant de la mani\u00e8re suivante : </p><pre><code>assert v not in t or (v &gt;= t[gauche] and v &lt;= t[droite]) ### ajout invariant\n</code></pre> Autrement dit, soit <code>v</code> n'est pas dans le tableau, soit (si <code>v</code> est dans le tableau) <code>v</code> est compris entre les \u00e9l\u00e9ments d'indices <code>gauche</code> et <code>droite</code>. Pour ce qui est du variant, il s'agit de <code>droite - gauche + 1</code> (quantit\u00e9 positive et strictement d\u00e9croissante). Il faut v\u00e9rifier que cette quantit\u00e9 diminue \u00e0 chaque it\u00e9ration de la boucle. </li> <li> <p>Identifier la ou les erreurs \u00e0 l\u2019aide de ces traces et les corriger.</p> </li> </ol> Corrig\u00e9 d\u00e9taill\u00e9 exercice 1 <ol> <li>Lorsque l'on ex\u00e9cute la fonction telle qu'elle est donn\u00e9e, on se rend compte que l'ex\u00e9cution ne se termine pas. On peut donc deviner que la boucle <code>while</code> it\u00e8re ind\u00e9finiment.</li> <li>En ajoutant une instruction <code>print</code> pour voir le contenu des variables <code>gauche</code>, <code>milieu</code> et <code>droite</code>, on voit qu'\u00e0 un certain stade, les valeurs de <code>gauche</code> et de <code>droite</code> ne changent plus, ainsi la condition d'arr\u00eat du <code>while</code> n'est jamais rencontr\u00e9e :  Si l'on teste notre variant <code>droite - gauche + 1</code> avec une assertion, en modifiant le code de la mani\u00e8re suivante : <pre><code>def recherche(t, v):\n    gauche = 0\n    droite = len(t)\n    amplitude = droite - gauche + 1  # On stocke la valeur initiale du variant\n    while gauche &lt; droite:\n        milieu = (gauche+droite) // 2\n        print(f'gauche = {gauche} | milieu = {milieu} | droite = {droite}')\n        if t[milieu] &lt; v:\n            gauche = milieu \n        else:\n            droite = milieu\n        assert droite - gauche + 1 &lt; amplitude, 'variant non v\u00e9rifi\u00e9'\n        amplitude = droite - gauche\n    return droite\n</code></pre> En ex\u00e9cutant le programme, on obtient une <code>assertionError</code> : notre variant n'est pas v\u00e9rifi\u00e9, ce qui prouve donc que le programme ne se termine pas.  Par ailleurs, si on teste l'invariant, en rajoutant une assertion de la mani\u00e8re suivante : <pre><code>def recherche(t, v):\ngauche = 0\ndroite = len(t)\namplitude = droite - gauche + 1  # On stocke la valeur initiale du variant\nwhile gauche &lt; droite:\n    milieu = (gauche+droite) // 2\n    print(f'gauche = {gauche} | milieu = {milieu} | droite = {droite}')\n    if t[milieu] &lt; v:\n        gauche = milieu \n    else:\n        droite = milieu\n    assert v &gt;= t[gauche] and v &lt;= t[droite] ### ajout invariant\n    assert droite - gauche + 1 &lt; amplitude, 'variant non v\u00e9rifi\u00e9'\n    amplitude = droite - gauche\nreturn droite\n</code></pre> On obtient l'erreur suivante :  La valeur recherch\u00e9e doit toujours \u00eatre comprise entre l'\u00e9l\u00e9ment d'indice <code>gauche</code> et l'\u00e9l\u00e9ment d'indice <code>droite</code>. Or, l'\u00e9l\u00e9ment d'indice <code>droite</code> vaut initialement <code>len(t)</code>, alors que sa valeur devrait correspondre \u00e0 l'indice du dernier \u00e9l\u00e9ment du tableau, soit <code>len(t) - 1</code>, d'o\u00f9 l'erreur obtenue : <code>len(t)</code> ne correspond pas \u00e0 un indice du tableau.</li> <li>Finalement, voici une liste des diff\u00e9rentes erreurs que comporte la fonction donn\u00e9e :<ol> <li><code>droite</code> doit \u00eatre \u00e9gal \u00e0 l'indice du dernier \u00e9l\u00e9ment du tableau, soit <code>len(t) - 1</code></li> <li>Lorsque <code>t[milieu] &lt; v</code> (l'\u00e9l\u00e9ment recherch\u00e9 est plus grand que l'\u00e9l\u00e9ment du milieu), on sait que l'on doit r\u00e9-effectuer la recherche dans la partie du tableau \u00e0 droite de l'\u00e9l\u00e9ment du milieu. Or, dans la fonction donn\u00e9e, <code>gauche</code> prend la valeur de l'indice stock\u00e9 dans <code>milieu</code>, alors que l'on sait que l'\u00e9l\u00e9ment associ\u00e9 \u00e0 l'indice <code>milieu</code> ne peut pas \u00eatre l'\u00e9l\u00e9ment recherch\u00e9. <code>gauche</code> doit donc prendre la valeur de l'indice juste \u00e0 droite de <code>milieu</code>, soit <code>milieu + 1</code>.</li> <li>Lorsque <code>t[milieu] &gt; v</code> (l'\u00e9l\u00e9ment recherch\u00e9 est plus petit que l'\u00e9l\u00e9ment du milieu), on sait que l'on soit r\u00e9-effectuer la recherche dans la partie du tableau \u00e0 gauche de l'\u00e9l\u00e9ment du milieu. Donc, <code>droite</code> doit prendre la valeur de l'indice juste \u00e0 gauche de <code>milieu</code>, soit <code>milieu - 1.</code></li> <li>Actuellement, la boucle continue tant que <code>gauche &lt; droite</code>. Or, on oublie le cas o\u00f9 <code>gauche = droite</code>, auquel cas on doit rester dans la boucle. On ne doit sortir de la boucle que lorsque <code>gauche &gt; droite</code>. Ainsi, la condition du <code>while</code> doit devenir : <code>gauche &lt;= droite</code>.</li> <li>On oublie de traiter un cas \u00e0 l'int\u00e9rieur du <code>while</code> : celui o\u00f9 l'\u00e9l\u00e9ment <code>t[milieu]</code> correspond \u00e0 l'\u00e9lement <code>v</code> recherch\u00e9 : dans ce cas, selon la docstring, on doit renvoyer l'indice de l'\u00e9l\u00e9ment trouv\u00e9, c'est \u00e0 dire <code>milieu</code>.</li> <li>Enfin, lorsque l'on sort de la boucle <code>while</code>, c'est-\u00e0-dire lorsque l'\u00e9l\u00e9ment recherche n'a pas \u00e9t\u00e9 trouv\u00e9, la docstring indique que l'on doit renvoyer <code>-1</code>, et non pas l'indice stock\u00e9 dans <code>droite</code>. Il faut en effet toujours faire en sorte que notre fonction respecte la sp\u00e9cification, c'est-\u00e0-dire qu'elle fait bien ce qui est attendu.</li> </ol> </li> </ol> <p>Finalement, voici la bonne impl\u00e9mentation de cette fonction, apr\u00e8s avoir corrig\u00e9 toutes ces erreurs, ajout\u00e9 des <code>print</code> pour afficher une trace d'ex\u00e9cution, ajout\u00e9 une assertion pour le variant et pour l'invariant : </p><pre><code>def recherche(t, v):\n    print(t, v) # TRACE\n    gauche = 0\n    droite = len(t) - 1\n    amplitude = droite - gauche + 1  # On stocke la valeur initiale du variant\n    while gauche &lt;= droite:\n        milieu = (gauche+droite) // 2\n        print(f'gauche = {gauche} | milieu = {milieu} | droite = {droite}')\n        if t[milieu] == v:\n            return milieu\n        elif t[milieu] &lt; v:\n            gauche = milieu + 1\n        else:\n            droite = milieu - 1\n        assert v not in t or (v &gt;= t[gauche] and v &lt;= t[droite]) ### ajout invariant\n        print(f'variant = {droite - gauche + 1}')\n        assert droite - gauche + 1 &lt; amplitude, 'variant non v\u00e9rifi\u00e9'\n        amplitude = droite - gauche\n    return -1\n</code></pre> Fonction finale uniquement exercice 1 <p>Voici la bonne impl\u00e9mentation de cette fonction, apr\u00e8s avoir corrig\u00e9 toutes les erreurs, ajout\u00e9 des <code>print</code> pour afficher une trace d'ex\u00e9cution, ajout\u00e9 une assertion pour le variant et pour l'invariant :</p> <pre><code>def recherche(t, v):\n    ''' Renvoie l'indice de l'\u00e9l\u00e9ment v dans le tableau t.\n    Si l'\u00e9l\u00e9ment n'est pas trouver, renvoie -1.\n    :param t: (list) un tableau d'entiers\n    :param v: (int) l'entier \u00e0 chercher\n    :return: (int) l'indice de l'\u00e9l\u00e9ment s'il est trouv\u00e9, ou -1 sinon '''\n\n    print(t, v) # TRACE\n    gauche = 0\n    droite = len(t) - 1\n    amplitude = droite - gauche + 1  # On stocke la valeur initiale du variant\n    while gauche &lt;= droite:\n        milieu = (gauche+droite) // 2\n        print(f'gauche = {gauche} | milieu = {milieu} | droite = {droite}')\n        if t[milieu] == v:\n            return milieu\n        elif t[milieu] &lt; v:\n            gauche = milieu + 1\n        else:\n            droite = milieu - 1\n        assert v not in t or (v &gt;= t[gauche] and v &lt;= t[droite]) ### ajout invariant\n        print(f'variant = {droite - gauche + 1}')\n        assert droite - gauche + 1 &lt; amplitude, 'variant non v\u00e9rifi\u00e9'\n        amplitude = droite - gauche\n    return -1\n</code></pre>"},{"location":"terminale/mise_au_point/preliminaire/#utiliser-un-debogueur","title":"Utiliser un d\u00e9bogueur","text":"<p>L\u2019impl\u00e9mentation suivante de l\u2019algorithme de tri par s\u00e9lection contient elle aussi des erreurs.</p> <pre><code>def tri(t):\n    ''' Effectue un tri par s\u00e9lection en place du tableau entr\u00e9.\n    :param t: (list) Une liste d'\u00e9l\u00e9ments \u00e0 trier\n    :return: (None) On ne renvoie rien '''\n\n    for i in range(len(t)):\n        jmin = i\n        for j in range(i, len(t)):\n            if t[j] &lt;= t[jmin]:\n                jmin = j\n        if jmin != i:\n            t[i] = t[jmin]\n            t[jmin] = t[i]\n</code></pre> <p>Exercice 2</p> <p>Nous allons utiliser un outil de mise au point appel\u00e9 d\u00e9bogueur (ou debugger en anglais).</p> <ol> <li>Copier le programme ci-dessus dans l\u2019\u00e9diteur de script de Thonny et ajouter une instruction qui appelle la fonction <code>tri</code> avec le tableau <code>[4, 2, 6, 7, 1, 8]</code>.</li> <li>Ex\u00e9cuter le programme. Qu\u2019observe-t-on ?</li> <li>Lancer le programme avec le d\u00e9bogueur de Thonny (l'ic\u00f4ne juste \u00e0 droite de celle permettant d'ex\u00e9cuter un script). Vous pouvez \u00e9galement mettre des points d'arr\u00eat sur des lignes pr\u00e9cises pour pouvoir ex\u00e9cuter votre programme normalement et ne l'arr\u00eater qu'\u00e0 ces points d\u00e9finis en vue du d\u00e9boguage. Un autre outil bien sympathique pour vous aider \u00e0 d\u00e9boguer un programme  Python Tutor.</li> <li>Identifier la ou les erreurs \u00e0 l\u2019aide du d\u00e9bogueur et les corriger.</li> </ol>"},{"location":"terminale/modularite/","title":"Modularit\u00e9","text":""},{"location":"terminale/modularite/#modularite","title":"Modularit\u00e9","text":"Liste des contenus Description Activit\u00e9 - Utilisation d'une API Utilisation d'une API dans un programme Python. Gestion de modules Appeler, cr\u00e9er et utiliser des modules Python."},{"location":"terminale/modularite/api/","title":"Activit\u00e9 - Utilisation d'une API","text":"Ressources <ul> <li>Les diff\u00e9rents types d'API</li> </ul>"},{"location":"terminale/modularite/api/#les-api","title":"Les API","text":"<p>Une API (Application Programming Interface) permet aux d\u00e9veloppeurs d'int\u00e9grer une application \u00e0 une autre. Cela peut permettre par exemple de r\u00e9cup\u00e9rer des donn\u00e9es structur\u00e9es depuis un site web pour les exploiter de mani\u00e8re automatis\u00e9e dans un programme.</p> <p>Il existe diff\u00e9rents types d'API, notamment les API Web permettant d'acc\u00e9der \u00e0 des donn\u00e9es. Pour ce type d'API, une m\u00e9thode consiste \u00e0 \u00e9mettre une requ\u00eate HTTP permettant de r\u00e9cup\u00e9rer des donn\u00e9es sur un serveur web.</p> <p>Il existe diff\u00e9rents formats structurants de donn\u00e9es, notamment le format XML (proche du HTML) et le format JSON, qui sont devenus des standards.</p> <p>Voici quelques exemples d'API :</p> <ul> <li>https://openweathermap.org/api - Diverses API concernant le climat et la m\u00e9t\u00e9o,</li> <li>https://openfoodfacts.org/data - Base de donn\u00e9es collaborative, libre et ouverte des produits alimentaires du monde entier,</li> <li>https://openstreetmap.fr/ - Un projet collaboratif de cartographie en ligne qui vise \u00e0 constituer une base de donn\u00e9es g\u00e9ographiques libre du monde, en utilisant le syst\u00e8me GPS et d'autres donn\u00e9es libres.</li> </ul>"},{"location":"terminale/modularite/api/#activite-recuperer-la-meteo-dans-un-programme-python","title":"Activit\u00e9 - R\u00e9cup\u00e9rer la m\u00e9t\u00e9o dans un programme Python","text":"<p>Pour cette activit\u00e9, on souhaite r\u00e9cup\u00e9rer des donn\u00e9es sur la m\u00e9t\u00e9o de diff\u00e9rentes villes en utilisant les donn\u00e9es fournies par l'API de openweathermap.org.</p> <p>Plus pr\u00e9cis\u00e9ment, on utilisera la m\u00e9t\u00e9o actuelle, vous pouvez vous rendre sur cette page pour voir les diff\u00e9rentes fa\u00e7ons de faire un appel avec l'API. Vous pouvez notamment utiliser la latitude, la longitude, le nom de la ville, le code postal... openweathermap fournit des donn\u00e9es en JSON, XML et HTML. Nous utiliserons ici le format JSON.</p> <p>\u00c0 t\u00e9l\u00e9charger</p> <ul> <li>meteo.py : Programme initial \u00e0 compl\u00e9ter</li> </ul> <p>Le module <code>requests</code> de Python permet d'effectuer des appels d'API \u00e0 l'aide de requ\u00eates HTTP, et ainsi de de r\u00e9cup\u00e9rer des donn\u00e9es sur le web au format JSON et de les int\u00e9grer dans un dictionnaire.</p> <p>Utilisation du programme</p> <p>Ouvrez le script <code>meteo.py</code> dans Thonny (ou dans votre IDE pr\u00e9f\u00e9r\u00e9), puis ex\u00e9cutez-le.</p> <p>En appelant <code>get_weather('Paris')</code>, vous devriez obtenir quelque chose comme ceci : </p><pre><code>{'coord': {'lon': 2.3488, 'lat': 48.8534}, \n'weather': [{'id': 800, 'main': 'Clear', 'description': 'clear sky', 'icon': '01n'}], \n'base': 'stations', \n'main': {'temp': 23.67, 'feels_like': 24, 'temp_min': 20.32, 'temp_max': 24.52, 'pressure': 1024, 'humidity': 73}, \n'visibility': 10000, \n'wind': {'speed': 5.14, 'deg': 60}, \n'clouds': {'all': 0}, \n'dt': 1693777827, \n'sys': {'type': 2, 'id': 2041230, 'country': 'FR', 'sunrise': 1693717783, 'sunset': 1693765857}, \n'timezone': 7200, \n'id': 2988507, \n'name': 'Paris', \n'cod': 200}\n</code></pre> <p>Remarque 1 : Les f-strings</p> <p>Lorsque vous souhaitez int\u00e9grer la valeur d'une variable \u00e0 une cha\u00eene de caract\u00e8res, vous avez sans doute l'habitude d'utiliser la concat\u00e9nation (avec le symbole <code>+</code>). Par exemple :</p> <pre><code>&gt;&gt;&gt; prenom = 'Erwan'\n&gt;&gt;&gt; 'Bonjour ' + prenom + ' !'\n'Bonjour Erwan !'\n</code></pre> <p>Dans la fonction <code>get_weather</code> de notre programme, vous pouvez voir la ligne suivante (ligne 12): </p><pre><code>url = f\"https://api.openweathermap.org/data/2.5/weather?q={ville},{PAYS}&amp;appid={API_KEY}&amp;units=metric\"\n</code></pre> <p>Ici, la cha\u00eene de caract\u00e8res cr\u00e9\u00e9e est un peu particuli\u00e8re : il s'agit d'une f-string. Une f-string permet d'int\u00e9grer facilement des variables \u00e0 une cha\u00eene de caract\u00e8res. Il suffit de rajouter un <code>f</code> devant la cha\u00eene de caract\u00e8res, puis de mettre le nom des variables entre accolades. De cette mani\u00e8re, les noms des variables entre accolades seront remplac\u00e9s par la valeur qui leur est associ\u00e9e.</p> <p>En reprenant l'exemple pr\u00e9c\u00e9dent :</p> <pre><code>&gt;&gt;&gt; prenom = 'Erwan'\n&gt;&gt;&gt; f'Bonjour {prenom} !'\n'Bonjour Erwan !'\n</code></pre> <p>Remarque 2 : Les annotations de types</p> <p>Chaque fonction de notre fichier <code>meteo.py</code> utilise ce que l'on appelle des annotations de types. Par exemple, si l'on regarde l'en-t\u00eate de la fonction <code>get_weather</code> :</p> <pre><code>def get_weather(ville: str) -&gt; dict:\n</code></pre> <p>Ici, on indique que la param\u00e8tre <code>ville</code> doit \u00eatre de type <code>str</code> (une cha\u00eene de caract\u00e8res), et que la fonction doit renvoyer un dictionnaire. Il s'agit simplement d'une indication qui n'a aucun effet sur l'ex\u00e9cution du programme.</p> <p>On aurait pu, \u00e0 la place, donner ces indications dans la docstring, par exemple :</p> <pre><code>def get_weather(ville: str) -&gt; dict:\n    ''' Renvoie un dictionnaire contenant les donn\u00e9es sur la m\u00e9t\u00e9o actuelle de la ville entr\u00e9e.\n    :param ville: (str) Le nom de la ville dont on souhaite obtenir la m\u00e9t\u00e9o\n    :return: (dict) Le dictionnaire contenant les donn\u00e9es sur la m\u00e9t\u00e9o\n    '''\n</code></pre> <p>Si l'on regarde l'en-t\u00eate de notre fonction <code>get_temp_from_lat_long</code> :</p> <pre><code>def get_temp_from_lat_long(lat: float, long: float) -&gt; None:\n</code></pre> <p>On peut voir qu'elle doit renvoyer un objet de type <code>None</code> : autrement dit, elle ne doit rien renvoyer. (Effectivement, il s'agit d'une fonction qui doit simplement afficher quelque chose. Les fonctions qui ne renvoient rien peuvent \u00e9galement \u00eatre appel\u00e9es proc\u00e9dures.)</p> <p>Exercice 1</p> <p>Compl\u00e9tez la fonction <code>temperature_ressentie</code>, r\u00e9utilisant la fonction <code>get_weather</code>, permettant d'afficher la temp\u00e9rature ressentie (feels_like) dans une ville donn\u00e9e en entr\u00e9e. Le message affich\u00e9 doit \u00eatre de la forme <code>Temp\u00e9rature ressentie \u00e0 Paris : 15.72 \u00b0C.</code> si l'on donne en entr\u00e9e <code>\"Paris\"</code> \u00e0 la fonction.</p> Corrig\u00e9 exercice 1 <p>Il faut simplement r\u00e9cup\u00e9rer les donn\u00e9es sur la ville pass\u00e9e en argument \u00e0 la fonction, en rappelant la fonction <code>get_weather</code>, puis afficher avec <code>print</code> la valeur associ\u00e9e \u00e0 la cl\u00e9 <code>feels_like</code> du dictionnaire lui-m\u00eame associ\u00e9 \u00e0 la cl\u00e9 <code>main</code> du dictionnaire principal :</p> <pre><code>def temperature_ressentie(ville: str) -&gt; None:\n    ''' Affiche la temp\u00e9rature ressentie (en degr\u00e9s) dans la ville sp\u00e9cifi\u00e9e. '''\n\n    donnees = get_weather(ville)\n    print(f\"Temp\u00e9rature ressentie \u00e0 {ville} : {donnees['main']['feels_like']} \u00b0C.\")\n</code></pre> <p>Un petit test dans la console de Thonny donnera quelque chose comme ceci :</p> <pre><code>&gt;&gt;&gt; temperature_ressentie('Paris')\nTemp\u00e9rature ressentie \u00e0 Paris : 33.02 \u00b0C.\n</code></pre> <p>Rappel</p> <p>En bas du script, vous pouvez voir le bloc de code suivant : </p><pre><code>if __name__ == '__main__':\n    ''' Instructions ex\u00e9cut\u00e9es si l'on ex\u00e9cute ce fichier directement '''\n\n    pass\n</code></pre> <p>Les instructions saisies dans ce bloc ne seront prises en compte que si le script est ex\u00e9cut\u00e9 directement. Si <code>meteo.py</code> est import\u00e9 dans un autre script, ces instructions seront ignor\u00e9es.</p> <p>Exercice 2</p> <p>En vous inspirant des deux fonctions pr\u00e9c\u00e9dentes, compl\u00e9tez la fonction <code>get_temp_from_lat_long</code> permettant d'afficher la temp\u00e9rature (temp) d'un lieu localis\u00e9 par sa valeur de latitude et de longitude (voir documentation si besoin).</p> <p>Faites le test avec <code>lat = 49.23588940429046, long = 2.135797340968115</code> (localisation de M\u00e9ru).</p> <p>Dans votre url utilis\u00e9e pour l'appel, vous utiliserez la cl\u00e9 d'API contenue dans la variable globale <code>API_KEY</code>.</p> Temp\u00e9rature en degr\u00e9s celsius <p>Par d\u00e9faut, les temp\u00e9ratures obtenues sont en degr\u00e9s Kelvin. Si vous souhaitez obtenir les temp\u00e9ratures en degr\u00e9s Celsius, il faut indiquer dans la requ\u00eate HTTP que l'on souhaite utiliser le syst\u00e8me m\u00e9trique.</p> <p>Pour cela, il faut ajouter le param\u00e8tre <code>units</code> avec la valeur <code>metric</code> \u00e0 votre requ\u00eate. Autrement dit, \u00e0 la fin de votre URL, vous devez ajouter <code>&amp;units=metric</code> (le <code>&amp;</code> permet de faire la s\u00e9paration avec le param\u00e8tre pr\u00e9c\u00e9dent).</p> Corrig\u00e9 exercice 2 <p>On s'inspire du code des fonctions <code>get_weather</code> et <code>temperature_ressentie</code> :</p> <pre><code>def get_temp_from_lat_long(lat: float, long: float) -&gt; None:\n    ''' Affiche la temp\u00e9rature (en degr\u00e9s) d'une ville dont on fournit la latitude et la longitude. '''\n\n    url = f\"https://api.openweathermap.org/data/2.5/weather?lat={lat}&amp;lon={long}&amp;appid={API_KEY}&amp;units=metric\"\n    r = requests.get(url)\n    donnees = r.json()\n\n    print(f\"Temp\u00e9rature : {donnees['main']['temp']} \u00b0C.\")\n</code></pre> <p>On souhaite maintenant obtenir les pr\u00e9visions m\u00e9t\u00e9o d'une ville de mani\u00e8re \u00e0 afficher une courbe d'\u00e9volution de la temp\u00e9rature (temp) pr\u00e9vue. L'API permet d'obtenir les pr\u00e9visions des 5 prochains jours, \u00e0 raison d'une mesure toutes les 3 heures. La page documentant les appels d'API permettant d'obtenir ces pr\u00e9visions est la suivante : https://openweathermap.org/forecast5.</p> <p>Ainsi, on obtiendra une liste de 40 mesures, la premi\u00e8re mesure correspondant aux donn\u00e9es sur la m\u00e9t\u00e9o \u00e0 l'heure actuelle, la deuxi\u00e8me mesure correspondant \u00e0 la m\u00e9t\u00e9o pr\u00e9vue dans 3 heures, la troisi\u00e8me \u00e0 celle pr\u00e9vue dans 6 heures, et ainsi de suite...</p> <p>Si l'on regarde un exemple de r\u00e9ponse de l'API :</p> Exemple de r\u00e9ponse de l'API <pre><code>{\n\"cod\": \"200\",\n\"message\": 0,\n\"cnt\": 40,\n\"list\": [\n    {\n    \"dt\": 1661871600,\n    \"main\": {\n        \"temp\": 296.76,\n        \"feels_like\": 296.98,\n        \"temp_min\": 296.76,\n        \"temp_max\": 297.87,\n        \"pressure\": 1015,\n        \"sea_level\": 1015,\n        \"grnd_level\": 933,\n        \"humidity\": 69,\n        \"temp_kf\": -1.11\n    },\n    \"weather\": [\n        {\n        \"id\": 500,\n        \"main\": \"Rain\",\n        \"description\": \"light rain\",\n        \"icon\": \"10d\"\n        }\n    ],\n    \"clouds\": {\n        \"all\": 100\n    },\n    \"wind\": {\n        \"speed\": 0.62,\n        \"deg\": 349,\n        \"gust\": 1.18\n    },\n    \"visibility\": 10000,\n    \"pop\": 0.32,\n    \"rain\": {\n        \"3h\": 0.26\n    },\n    \"sys\": {\n        \"pod\": \"d\"\n    },\n    \"dt_txt\": \"2022-08-30 15:00:00\"\n    },\n    {\n    \"dt\": 1661882400,\n    \"main\": {\n        \"temp\": 295.45,\n        \"feels_like\": 295.59,\n        \"temp_min\": 292.84,\n        \"temp_max\": 295.45,\n        \"pressure\": 1015,\n        \"sea_level\": 1015,\n        \"grnd_level\": 931,\n        \"humidity\": 71,\n        \"temp_kf\": 2.61\n    },\n    \"weather\": [\n        {\n        \"id\": 500,\n        \"main\": \"Rain\",\n        \"description\": \"light rain\",\n        \"icon\": \"10n\"\n        }\n    ],\n    \"clouds\": {\n        \"all\": 96\n    },\n    \"wind\": {\n        \"speed\": 1.97,\n        \"deg\": 157,\n        \"gust\": 3.39\n    },\n    \"visibility\": 10000,\n    \"pop\": 0.33,\n    \"rain\": {\n        \"3h\": 0.57\n    },\n    \"sys\": {\n        \"pod\": \"n\"\n    },\n    \"dt_txt\": \"2022-08-30 18:00:00\"\n    },\n    {\n    \"dt\": 1661893200,\n    \"main\": {\n        \"temp\": 292.46,\n        \"feels_like\": 292.54,\n        \"temp_min\": 290.31,\n        \"temp_max\": 292.46,\n        \"pressure\": 1015,\n        \"sea_level\": 1015,\n        \"grnd_level\": 931,\n        \"humidity\": 80,\n        \"temp_kf\": 2.15\n    },\n    \"weather\": [\n        {\n        \"id\": 500,\n        \"main\": \"Rain\",\n        \"description\": \"light rain\",\n        \"icon\": \"10n\"\n        }\n    ],\n    \"clouds\": {\n        \"all\": 68\n    },\n    \"wind\": {\n        \"speed\": 2.66,\n        \"deg\": 210,\n        \"gust\": 3.58\n    },\n    \"visibility\": 10000,\n    \"pop\": 0.7,\n    \"rain\": {\n        \"3h\": 0.49\n    },\n    \"sys\": {\n        \"pod\": \"n\"\n    },\n    \"dt_txt\": \"2022-08-30 21:00:00\"\n    },\n    ....\n    {\n    \"dt\": 1662292800,\n    \"main\": {\n        \"temp\": 294.93,\n        \"feels_like\": 294.83,\n        \"temp_min\": 294.93,\n        \"temp_max\": 294.93,\n        \"pressure\": 1018,\n        \"sea_level\": 1018,\n        \"grnd_level\": 935,\n        \"humidity\": 64,\n        \"temp_kf\": 0\n    },\n    \"weather\": [\n        {\n        \"id\": 804,\n        \"main\": \"Clouds\",\n        \"description\": \"overcast clouds\",\n        \"icon\": \"04d\"\n        }\n    ],\n    \"clouds\": {\n        \"all\": 88\n    },\n    \"wind\": {\n        \"speed\": 1.14,\n        \"deg\": 17,\n        \"gust\": 1.57\n    },\n    \"visibility\": 10000,\n    \"pop\": 0,\n    \"sys\": {\n        \"pod\": \"d\"\n    },\n    \"dt_txt\": \"2022-09-04 12:00:00\"\n    }\n],\n\"city\": {\n    \"id\": 3163858,\n    \"name\": \"Zocca\",\n    \"coord\": {\n    \"lat\": 44.34,\n    \"lon\": 10.99\n    },\n    \"country\": \"IT\",\n    \"population\": 4593,\n    \"timezone\": 7200,\n    \"sunrise\": 1661834187,\n    \"sunset\": 1661882248\n}\n}\n</code></pre> <p>On peut voir qu'une liste Python est associ\u00e9e \u00e0 la cl\u00e9 <code>list</code> du dictionnaire principal obtenu. Ce tableau contient lui-m\u00eame 40 dictionnaires, chacun correspondant \u00e0 une mesure de la m\u00e9t\u00e9o.</p> <p>Voici un exemple de graphe affichant la comparaison entre l'\u00e9volution de la temp\u00e9rature de la ville de Paris et celle de la ville de M\u00e9ru, sur les 5 prochains jours :</p> <p> </p> Courbes d'\u00e9volution des temp\u00e9ratures <p>Exercice 3</p> <p>Compl\u00e9tez la fonction <code>compare_two_cities</code> prenant deux noms de villes en entr\u00e9e, et affichant un graphe contenant les courbes d'\u00e9volution de la temp\u00e9rature de ces deux villes.</p> <p>Faites le test avec deux villes de votre choix.</p> <p>Pour proc\u00e9der, vous pouvez d\u00e9couper votre travail en 3 \u00e9tapes :</p> <p>\u00c9tape 1 : R\u00e9cup\u00e9rer les dictionnaires contenant les donn\u00e9es sur la ville 1 et sur la ville 2. Pour vous aider (et parce qu'on manipule des objets, notion qui n'a pas encore \u00e9t\u00e9 \u00e9tudi\u00e9e), je vous donne le code permettant de r\u00e9cup\u00e9rer et de stocker ces donn\u00e9es dans une variable <code>r1</code> pour la ville 1 et <code>r2</code> pour la ville 2 :</p> <pre><code>    url1 = f\"https://api.openweathermap.org/data/2.5/forecast?q={ville1},{PAYS}&amp;appid={API_KEY}&amp;units=metric\"\n    url2 = f\"https://api.openweathermap.org/data/2.5/forecast?q={ville2},{PAYS}&amp;appid={API_KEY}&amp;units=metric\"\n    r1 = requests.get(url1).json()  # r1 contient le dictionnaire contenant les donn\u00e9es sur la ville 1\n    r2 = requests.get(url2).json()  # r2 contient le dictionnaire contenant les donn\u00e9es sur la ville 2\n</code></pre> <p>\u00c9tape 2 : Cr\u00e9er deux tableaux contenant respectivement les 40 temp\u00e9ratures de la ville 1 et les 40 temp\u00e9ratures de la ville 2. Vous pouvez (mais ce n'est pas obligatoire) pour cela utiliser la m\u00e9thode de cr\u00e9ation de listes par compr\u00e9hension.</p> <p>On rappelle que les donn\u00e9es sur les 40 mesures d'une ville sont contenues dans 40 dictionnaires, eux-m\u00eames contenus dans une liste associ\u00e9e \u00e0 la cl\u00e9 <code>list</code> du dictionnaire principal.</p> <p>Pour revoir un exemple de r\u00e9ponse de l'API pour vous aider, vous pouvez d\u00e9rouler le bloc suivant :</p> Exemple de r\u00e9ponse de l'API <pre><code>{\n\"cod\": \"200\",\n\"message\": 0,\n\"cnt\": 40,\n\"list\": [\n    {\n    \"dt\": 1661871600,\n    \"main\": {\n        \"temp\": 296.76,\n        \"feels_like\": 296.98,\n        \"temp_min\": 296.76,\n        \"temp_max\": 297.87,\n        \"pressure\": 1015,\n        \"sea_level\": 1015,\n        \"grnd_level\": 933,\n        \"humidity\": 69,\n        \"temp_kf\": -1.11\n    },\n    \"weather\": [\n        {\n        \"id\": 500,\n        \"main\": \"Rain\",\n        \"description\": \"light rain\",\n        \"icon\": \"10d\"\n        }\n    ],\n    \"clouds\": {\n        \"all\": 100\n    },\n    \"wind\": {\n        \"speed\": 0.62,\n        \"deg\": 349,\n        \"gust\": 1.18\n    },\n    \"visibility\": 10000,\n    \"pop\": 0.32,\n    \"rain\": {\n        \"3h\": 0.26\n    },\n    \"sys\": {\n        \"pod\": \"d\"\n    },\n    \"dt_txt\": \"2022-08-30 15:00:00\"\n    },\n    {\n    \"dt\": 1661882400,\n    \"main\": {\n        \"temp\": 295.45,\n        \"feels_like\": 295.59,\n        \"temp_min\": 292.84,\n        \"temp_max\": 295.45,\n        \"pressure\": 1015,\n        \"sea_level\": 1015,\n        \"grnd_level\": 931,\n        \"humidity\": 71,\n        \"temp_kf\": 2.61\n    },\n    \"weather\": [\n        {\n        \"id\": 500,\n        \"main\": \"Rain\",\n        \"description\": \"light rain\",\n        \"icon\": \"10n\"\n        }\n    ],\n    \"clouds\": {\n        \"all\": 96\n    },\n    \"wind\": {\n        \"speed\": 1.97,\n        \"deg\": 157,\n        \"gust\": 3.39\n    },\n    \"visibility\": 10000,\n    \"pop\": 0.33,\n    \"rain\": {\n        \"3h\": 0.57\n    },\n    \"sys\": {\n        \"pod\": \"n\"\n    },\n    \"dt_txt\": \"2022-08-30 18:00:00\"\n    },\n    {\n    \"dt\": 1661893200,\n    \"main\": {\n        \"temp\": 292.46,\n        \"feels_like\": 292.54,\n        \"temp_min\": 290.31,\n        \"temp_max\": 292.46,\n        \"pressure\": 1015,\n        \"sea_level\": 1015,\n        \"grnd_level\": 931,\n        \"humidity\": 80,\n        \"temp_kf\": 2.15\n    },\n    \"weather\": [\n        {\n        \"id\": 500,\n        \"main\": \"Rain\",\n        \"description\": \"light rain\",\n        \"icon\": \"10n\"\n        }\n    ],\n    \"clouds\": {\n        \"all\": 68\n    },\n    \"wind\": {\n        \"speed\": 2.66,\n        \"deg\": 210,\n        \"gust\": 3.58\n    },\n    \"visibility\": 10000,\n    \"pop\": 0.7,\n    \"rain\": {\n        \"3h\": 0.49\n    },\n    \"sys\": {\n        \"pod\": \"n\"\n    },\n    \"dt_txt\": \"2022-08-30 21:00:00\"\n    },\n    ....\n    {\n    \"dt\": 1662292800,\n    \"main\": {\n        \"temp\": 294.93,\n        \"feels_like\": 294.83,\n        \"temp_min\": 294.93,\n        \"temp_max\": 294.93,\n        \"pressure\": 1018,\n        \"sea_level\": 1018,\n        \"grnd_level\": 935,\n        \"humidity\": 64,\n        \"temp_kf\": 0\n    },\n    \"weather\": [\n        {\n        \"id\": 804,\n        \"main\": \"Clouds\",\n        \"description\": \"overcast clouds\",\n        \"icon\": \"04d\"\n        }\n    ],\n    \"clouds\": {\n        \"all\": 88\n    },\n    \"wind\": {\n        \"speed\": 1.14,\n        \"deg\": 17,\n        \"gust\": 1.57\n    },\n    \"visibility\": 10000,\n    \"pop\": 0,\n    \"sys\": {\n        \"pod\": \"d\"\n    },\n    \"dt_txt\": \"2022-09-04 12:00:00\"\n    }\n],\n\"city\": {\n    \"id\": 3163858,\n    \"name\": \"Zocca\",\n    \"coord\": {\n    \"lat\": 44.34,\n    \"lon\": 10.99\n    },\n    \"country\": \"IT\",\n    \"population\": 4593,\n    \"timezone\": 7200,\n    \"sunrise\": 1661834187,\n    \"sunset\": 1661882248\n}\n}\n</code></pre> <p>\u00c9tape 3 : Enfin, il ne reste plus qu'\u00e0 cr\u00e9er les deux courbes avec la fonction <code>plot</code>, puis \u00e0 les afficher avec la fonction <code>show</code> de pyplot. Voir documentation de pyplot.</p> <p>Vous devrez donc appeler deux fois la fonction <code>plot</code>, en donnant les tableaux cr\u00e9\u00e9s pr\u00e9c\u00e9demment en entr\u00e9es.</p> <p>Aide Pyplot</p> <p>Vous pouvez consulter cette page pour des rappels concernant le module pyplot contenu dans la biblioth\u00e8que Matplotlib. N'oubliez pas d'importer le module dans votre script s'il ne l'est pas, en rajoutant cette ligne au d\u00e9but de votre script :</p> <pre><code>from matplotlib import pyplot\n</code></pre> <p>Si le module n'est pas install\u00e9 sur votre machine, vous devez l'installer. Pour cela, dans Thonny, cliquez sur \"Outils\" puis sur \"G\u00e9rer les paquets\", puis recherchez et installez le paquet Matplotlib.</p> <p>En l'occurence, vous n'aurez besoin que des fonctions <code>plot</code> et <code>show</code>, et \u00e9ventuellement de <code>legend</code> si vous souhaitez afficher des l\u00e9gendes.</p>"},{"location":"terminale/modularite/api_corr/","title":"Les API","text":""},{"location":"terminale/modularite/api_corr/#les-api","title":"Les API","text":"<p>Une API (Application Programming Interface) permet aux d\u00e9veloppeurs d'int\u00e9grer une application \u00e0 une autre. Cela peut permettre par exemple de r\u00e9cup\u00e9rer des donn\u00e9es structur\u00e9es depuis un site web pour les exploiter de mani\u00e8re automatis\u00e9e dans un programme.</p> <p>Il existe diff\u00e9rents types d'API, notamment les API Web permettant d'acc\u00e9der \u00e0 des donn\u00e9es. Pour ce type d'API, une m\u00e9thode consiste \u00e0 \u00e9mettre une requ\u00eate HTTP permettant de r\u00e9cup\u00e9rer des donn\u00e9es sur un serveur web.</p> <p>Il existe diff\u00e9rents formats structurants de donn\u00e9es, notamment le format XML (proche du HTML) et le format JSON, qui sont devenus des standards.</p> <p>Voici quelques exemples d'API :</p> <ul> <li>https://openweathermap.org/api - Diverses API concernant le climat et la m\u00e9t\u00e9o,</li> <li>https://openfoodfacts.org/data - Base de donn\u00e9es collaborative, libre et ouverte des produits alimentaires du monde entier,</li> <li>https://openstreetmap.fr/ - Un projet collaboratif de cartographie en ligne qui vise \u00e0 constituer une base de donn\u00e9es g\u00e9ographiques libre du monde, en utilisant le syst\u00e8me GPS et d'autres donn\u00e9es libres.</li> </ul>"},{"location":"terminale/modularite/api_corr/#activite-recuperer-la-meteo-dans-un-programme-python","title":"Activit\u00e9 - R\u00e9cup\u00e9rer la m\u00e9t\u00e9o dans un programme Python","text":"<p>Pour cette activit\u00e9, on souhaite r\u00e9cup\u00e9rer des donn\u00e9es sur la m\u00e9t\u00e9o de diff\u00e9rentes villes en utilisant les donn\u00e9es fournies par l'API de openweathermap.org.</p> <p>Plus pr\u00e9cis\u00e9ment, on utilisera la m\u00e9t\u00e9o actuelle, vous pouvez vous rendre sur cette page pour voir les diff\u00e9rentes fa\u00e7ons de faire un appel avec l'API. Vous pouvez notamment utiliser la latitude, la longitude, le nom de la ville, le code postal... openweathermap fournit des donn\u00e9es en JSON, XML et HTML. Nous utiliserons ici le format JSON.</p> <p>\u00c0 t\u00e9l\u00e9charger</p> <ul> <li>meteo.py : Programme initial \u00e0 compl\u00e9ter</li> </ul> <p>Le module <code>requests</code> de Python permet d'effectuer des appels d'API \u00e0 l'aide de requ\u00eates HTTP, et ainsi de de r\u00e9cup\u00e9rer des donn\u00e9es sur le web au format JSON et de les int\u00e9grer dans un dictionnaire.</p> <p>Utilisation du programme</p> <p>Ouvrez le script <code>meteo.py</code> dans Thonny (ou dans votre IDE pr\u00e9f\u00e9r\u00e9), puis ex\u00e9cutez-le.</p> <p>En appelant <code>get_weather('Paris')</code>, vous devriez obtenir quelque chose comme ceci : </p><pre><code>{'coord': {'lon': 2.3488, 'lat': 48.8534}, \n'weather': [{'id': 800, 'main': 'Clear', 'description': 'clear sky', 'icon': '01n'}], \n'base': 'stations', \n'main': {'temp': 23.67, 'feels_like': 24, 'temp_min': 20.32, 'temp_max': 24.52, 'pressure': 1024, 'humidity': 73}, \n'visibility': 10000, \n'wind': {'speed': 5.14, 'deg': 60}, \n'clouds': {'all': 0}, \n'dt': 1693777827, \n'sys': {'type': 2, 'id': 2041230, 'country': 'FR', 'sunrise': 1693717783, 'sunset': 1693765857}, \n'timezone': 7200, \n'id': 2988507, \n'name': 'Paris', \n'cod': 200}\n</code></pre> <p>Remarque 1 : Les f-strings</p> <p>Lorsque vous souhaitez int\u00e9grer la valeur d'une variable \u00e0 une cha\u00eene de caract\u00e8res, vous avez sans doute l'habitude d'utiliser la concat\u00e9nation (avec le symbole <code>+</code>). Par exemple :</p> <pre><code>&gt;&gt;&gt; prenom = 'Erwan'\n&gt;&gt;&gt; 'Bonjour ' + prenom + ' !'\n'Bonjour Erwan !'\n</code></pre> <p>Dans la fonction <code>get_weather</code> de notre programme, vous pouvez voir la ligne suivante (ligne 12): </p><pre><code>url = f\"https://api.openweathermap.org/data/2.5/weather?q={ville},{PAYS}&amp;appid={API_KEY}&amp;units=metric\"\n</code></pre> <p>Ici, la cha\u00eene de caract\u00e8res cr\u00e9\u00e9e est un peu particuli\u00e8re : il s'agit d'une f-string. Une f-string permet d'int\u00e9grer facilement des variables \u00e0 une cha\u00eene de caract\u00e8res. Il suffit de rajouter un <code>f</code> devant la cha\u00eene de caract\u00e8res, puis de mettre le nom des variables entre accolades. De cette mani\u00e8re, les noms des variables entre accolades seront remplac\u00e9s par la valeur qui leur est associ\u00e9e.</p> <p>En reprenant l'exemple pr\u00e9c\u00e9dent :</p> <pre><code>&gt;&gt;&gt; prenom = 'Erwan'\n&gt;&gt;&gt; f'Bonjour {prenom} !'\n'Bonjour Erwan !'\n</code></pre> <p>Remarque 2 : Les annotations de types</p> <p>Chaque fonction de notre fichier <code>meteo.py</code> utilise ce que l'on appelle des annotations de types. Par exemple, si l'on regarde l'en-t\u00eate de la fonction <code>get_weather</code> :</p> <pre><code>def get_weather(ville: str) -&gt; dict:\n</code></pre> <p>Ici, on indique que la param\u00e8tre <code>ville</code> doit \u00eatre de type <code>str</code> (une cha\u00eene de caract\u00e8res), et que la fonction doit renvoyer un dictionnaire. Il s'agit simplement d'une indication qui n'a aucun effet sur l'ex\u00e9cution du programme.</p> <p>On aurait pu, \u00e0 la place, donner ces indications dans la docstring, par exemple :</p> <pre><code>def get_weather(ville: str) -&gt; dict:\n    ''' Renvoie un dictionnaire contenant les donn\u00e9es sur la m\u00e9t\u00e9o actuelle de la ville entr\u00e9e.\n    :param ville: (str) Le nom de la ville dont on souhaite obtenir la m\u00e9t\u00e9o\n    :return: (dict) Le dictionnaire contenant les donn\u00e9es sur la m\u00e9t\u00e9o\n    '''\n</code></pre> <p>Si l'on regarde l'en-t\u00eate de notre fonction <code>get_temp_from_lat_long</code> :</p> <pre><code>def get_temp_from_lat_long(lat: float, long: float) -&gt; None:\n</code></pre> <p>On peut voir qu'elle doit renvoyer un objet de type <code>None</code> : autrement dit, elle ne doit rien renvoyer. (Effectivement, il s'agit d'une fonction qui doit simplement afficher quelque chose. Les fonctions qui ne renvoient rien peuvent \u00e9galement \u00eatre appel\u00e9es proc\u00e9dures.)</p> <p>Exercice 1</p> <p>Compl\u00e9tez la fonction <code>temperature_ressentie</code> permettant d'afficher la temp\u00e9rature ressentie (feels_like) dans une ville donn\u00e9e en entr\u00e9e.</p> Corrig\u00e9 exercice 1 <p>Il faut simplement r\u00e9cup\u00e9rer les donn\u00e9es sur la ville pass\u00e9e en argument \u00e0 la fonction, en rappelant la fonction <code>get_weather</code>, puis afficher avec <code>print</code> la valeur associ\u00e9e \u00e0 la cl\u00e9 <code>feels_like</code> du dictionnaire lui-m\u00eame associ\u00e9 \u00e0 la cl\u00e9 <code>main</code> du dictionnaire principal :</p> <pre><code>def temperature_ressentie(ville: str) -&gt; None:\n    ''' Affiche la temp\u00e9rature ressentie (en degr\u00e9s) dans la ville sp\u00e9cifi\u00e9e. '''\n\n    donnees = get_weather(ville)\n    print(f\"Temp\u00e9rature ressentie \u00e0 {ville} : {donnees['main']['feels_like']} \u00b0C.\")\n</code></pre> <p>Un petit test dans la console de Thonny donnera quelque chose comme ceci :</p> <pre><code>&gt;&gt;&gt; temperature_ressentie('Paris')\nTemp\u00e9rature ressentie \u00e0 Paris : 33.02 \u00b0C.\n</code></pre> <p>Rappel</p> <p>En bas du script, vous pouvez voir le bloc de code suivant : </p><pre><code>if __name__ == '__main__':\n    ''' Instructions ex\u00e9cut\u00e9es si l'on ex\u00e9cute ce fichier directement '''\n\n    pass\n</code></pre> <p>Les instructions saisies dans ce bloc ne seront prises en compte que si le script est ex\u00e9cut\u00e9 directement. Si <code>meteo.py</code> est import\u00e9 dans un autre script, ces instructions seront ignor\u00e9es.</p> <p>Exercice 2</p> <p>En vous inspirant des deux fonctions pr\u00e9c\u00e9dentes, compl\u00e9tez la fonction <code>get_temp_from_lat_long</code> permettant d'afficher la temp\u00e9rature (temp) d'un lieu localis\u00e9 par sa valeur de latitude et de longitude (voir documentation si besoin).</p> <p>Faites le test avec <code>lat = 49.23588940429046, long = 2.135797340968115</code> (localisation de M\u00e9ru).</p> Temp\u00e9rature en degr\u00e9s celsius <p>Par d\u00e9faut, les temp\u00e9ratures obtenues sont en degr\u00e9s Kelvin. Si vous souhaitez obtenir les temp\u00e9ratures en degr\u00e9s Celsius, il faut indiquer dans la requ\u00eate HTTP que l'on souhaite utiliser le syst\u00e8me m\u00e9trique.</p> <p>Pour cela, il faut ajouter le param\u00e8tre <code>units</code> avec la valeur <code>metric</code> \u00e0 votre requ\u00eate. Autrement dit, \u00e0 la fin de votre URL, vous devez ajouter <code>&amp;units=metric</code> (le <code>&amp;</code> permet de faire la s\u00e9paration avec le param\u00e8tre pr\u00e9c\u00e9dent).</p> Corrig\u00e9 exercice 2 <p>On s'inspire du code des fonctions <code>get_weather</code> et <code>temperature_ressentie</code> :</p> <pre><code>def get_temp_from_lat_long(lat: float, long: float) -&gt; None:\n    ''' Affiche la temp\u00e9rature (en degr\u00e9s) d'une ville dont on fournit la latitude et la longitude. '''\n\n    url = f\"https://api.openweathermap.org/data/2.5/weather?lat={lat}&amp;lon={long}&amp;appid={API_KEY}&amp;units=metric\"\n    r = requests.get(url)\n    donnees = r.json()\n\n    print(f\"Temp\u00e9rature : {donnees['main']['temp']} \u00b0C.\")\n</code></pre> <p>On souhaite maintenant obtenir les pr\u00e9visions m\u00e9t\u00e9o d'une ville de mani\u00e8re \u00e0 afficher une courbe d'\u00e9volution de la temp\u00e9rature (temp) pr\u00e9vue. L'API permet d'obtenir les pr\u00e9visions des 5 prochains jours, \u00e0 raison d'une mesure toutes les 3 heures. La page documentant les appels d'API permettant d'obtenir ces pr\u00e9visions est la suivante : https://openweathermap.org/forecast5.</p> <p>Ainsi, on obtiendra une liste 40 mesures, la premi\u00e8re mesure correspondant aux donn\u00e9es sur la m\u00e9t\u00e9o \u00e0 l'heure actuelle, la deuxi\u00e8me mesure correspondant \u00e0 la m\u00e9t\u00e9o pr\u00e9vue dans 3 heures, la troisi\u00e8me \u00e0 celle pr\u00e9vue dans 6 heures, et ainsi de suite...</p> <p>Si l'on regarde un exemple de r\u00e9ponse de l'API :</p> Exemple de r\u00e9ponse de l'API <pre><code>{\n\"cod\": \"200\",\n\"message\": 0,\n\"cnt\": 40,\n\"list\": [\n    {\n    \"dt\": 1661871600,\n    \"main\": {\n        \"temp\": 296.76,\n        \"feels_like\": 296.98,\n        \"temp_min\": 296.76,\n        \"temp_max\": 297.87,\n        \"pressure\": 1015,\n        \"sea_level\": 1015,\n        \"grnd_level\": 933,\n        \"humidity\": 69,\n        \"temp_kf\": -1.11\n    },\n    \"weather\": [\n        {\n        \"id\": 500,\n        \"main\": \"Rain\",\n        \"description\": \"light rain\",\n        \"icon\": \"10d\"\n        }\n    ],\n    \"clouds\": {\n        \"all\": 100\n    },\n    \"wind\": {\n        \"speed\": 0.62,\n        \"deg\": 349,\n        \"gust\": 1.18\n    },\n    \"visibility\": 10000,\n    \"pop\": 0.32,\n    \"rain\": {\n        \"3h\": 0.26\n    },\n    \"sys\": {\n        \"pod\": \"d\"\n    },\n    \"dt_txt\": \"2022-08-30 15:00:00\"\n    },\n    {\n    \"dt\": 1661882400,\n    \"main\": {\n        \"temp\": 295.45,\n        \"feels_like\": 295.59,\n        \"temp_min\": 292.84,\n        \"temp_max\": 295.45,\n        \"pressure\": 1015,\n        \"sea_level\": 1015,\n        \"grnd_level\": 931,\n        \"humidity\": 71,\n        \"temp_kf\": 2.61\n    },\n    \"weather\": [\n        {\n        \"id\": 500,\n        \"main\": \"Rain\",\n        \"description\": \"light rain\",\n        \"icon\": \"10n\"\n        }\n    ],\n    \"clouds\": {\n        \"all\": 96\n    },\n    \"wind\": {\n        \"speed\": 1.97,\n        \"deg\": 157,\n        \"gust\": 3.39\n    },\n    \"visibility\": 10000,\n    \"pop\": 0.33,\n    \"rain\": {\n        \"3h\": 0.57\n    },\n    \"sys\": {\n        \"pod\": \"n\"\n    },\n    \"dt_txt\": \"2022-08-30 18:00:00\"\n    },\n    {\n    \"dt\": 1661893200,\n    \"main\": {\n        \"temp\": 292.46,\n        \"feels_like\": 292.54,\n        \"temp_min\": 290.31,\n        \"temp_max\": 292.46,\n        \"pressure\": 1015,\n        \"sea_level\": 1015,\n        \"grnd_level\": 931,\n        \"humidity\": 80,\n        \"temp_kf\": 2.15\n    },\n    \"weather\": [\n        {\n        \"id\": 500,\n        \"main\": \"Rain\",\n        \"description\": \"light rain\",\n        \"icon\": \"10n\"\n        }\n    ],\n    \"clouds\": {\n        \"all\": 68\n    },\n    \"wind\": {\n        \"speed\": 2.66,\n        \"deg\": 210,\n        \"gust\": 3.58\n    },\n    \"visibility\": 10000,\n    \"pop\": 0.7,\n    \"rain\": {\n        \"3h\": 0.49\n    },\n    \"sys\": {\n        \"pod\": \"n\"\n    },\n    \"dt_txt\": \"2022-08-30 21:00:00\"\n    },\n    ....\n    {\n    \"dt\": 1662292800,\n    \"main\": {\n        \"temp\": 294.93,\n        \"feels_like\": 294.83,\n        \"temp_min\": 294.93,\n        \"temp_max\": 294.93,\n        \"pressure\": 1018,\n        \"sea_level\": 1018,\n        \"grnd_level\": 935,\n        \"humidity\": 64,\n        \"temp_kf\": 0\n    },\n    \"weather\": [\n        {\n        \"id\": 804,\n        \"main\": \"Clouds\",\n        \"description\": \"overcast clouds\",\n        \"icon\": \"04d\"\n        }\n    ],\n    \"clouds\": {\n        \"all\": 88\n    },\n    \"wind\": {\n        \"speed\": 1.14,\n        \"deg\": 17,\n        \"gust\": 1.57\n    },\n    \"visibility\": 10000,\n    \"pop\": 0,\n    \"sys\": {\n        \"pod\": \"d\"\n    },\n    \"dt_txt\": \"2022-09-04 12:00:00\"\n    }\n],\n\"city\": {\n    \"id\": 3163858,\n    \"name\": \"Zocca\",\n    \"coord\": {\n    \"lat\": 44.34,\n    \"lon\": 10.99\n    },\n    \"country\": \"IT\",\n    \"population\": 4593,\n    \"timezone\": 7200,\n    \"sunrise\": 1661834187,\n    \"sunset\": 1661882248\n}\n}\n</code></pre> <p>On peut voir qu'une liste Python est associ\u00e9e \u00e0 la cl\u00e9 <code>list</code> du dictionnaire principal obtenu. Ce tableau contient lui-m\u00eame 40 dictionnaires, chacun correspondant \u00e0 une mesure de la m\u00e9t\u00e9o.</p> <p>Voici un exemple de graphe affichant la comparaison entre l'\u00e9volution de la temp\u00e9rature de la ville de Paris et celle de la ville de M\u00e9ru, sur les 5 prochains jours :</p> <p> </p> Courbes d'\u00e9volution des temp\u00e9ratures <p>Exercice 3</p> <p>Compl\u00e9tez la fonction <code>compare_two_cities</code> prenant deux noms de villes en entr\u00e9e, et affichant un graphe contenant les courbes d'\u00e9volution de la temp\u00e9rature de ces deux villes.</p> <p>Faites le test avec deux villes de votre choix.</p> <p>Pour proc\u00e9der, vous pouvez d\u00e9couper votre travail en 3 \u00e9tapes :</p> <p>\u00c9tape 1 : R\u00e9cup\u00e9rer les dictionnaires contenant les donn\u00e9es sur la ville 1 et sur la ville 2. Pour vous aider (et parce qu'on manipule des objets, notion qui n'a pas encore \u00e9t\u00e9 \u00e9tudi\u00e9e), je vous donne le code permettant de r\u00e9cup\u00e9rer et de stocker ces donn\u00e9es dans une variable <code>r1</code> pour la ville 1 et <code>r2</code> pour la ville 2 :</p> <pre><code>    url1 = f\"https://api.openweathermap.org/data/2.5/forecast?q={ville1},{PAYS}&amp;appid={API_KEY}&amp;units=metric\"\n    url2 = f\"https://api.openweathermap.org/data/2.5/forecast?q={ville2},{PAYS}&amp;appid={API_KEY}&amp;units=metric\"\n    r1 = requests.get(url1).json()  # r1 contient le dictionnaire contenant les donn\u00e9es sur la ville 1\n    r2 = requests.get(url2).json()  # r2 contient le dictionnaire contenant les donn\u00e9es sur la ville 2\n</code></pre> <p>\u00c9tape 2 : Cr\u00e9er deux tableaux contenant respectivement les 40 temp\u00e9ratures de la ville 1 et les 40 temp\u00e9ratures de la ville 2. Vous pouvez (mais ce n'est pas obligatoire) pour cela utiliser la m\u00e9thode de cr\u00e9ation de listes par compr\u00e9hension.</p> <p>On rappelle que les donn\u00e9es sur les 40 mesures d'une ville sont contenues dans 40 dictionnaires, eux-m\u00eames contenus dans une liste associ\u00e9e \u00e0 la cl\u00e9 <code>list</code> du dictionnaire principal.</p> <p>Pour revoir un exemple de r\u00e9ponse de l'API pour vous aider, vous pouvez d\u00e9rouler le bloc suivant :</p> Exemple de r\u00e9ponse de l'API <pre><code>{\n\"cod\": \"200\",\n\"message\": 0,\n\"cnt\": 40,\n\"list\": [\n    {\n    \"dt\": 1661871600,\n    \"main\": {\n        \"temp\": 296.76,\n        \"feels_like\": 296.98,\n        \"temp_min\": 296.76,\n        \"temp_max\": 297.87,\n        \"pressure\": 1015,\n        \"sea_level\": 1015,\n        \"grnd_level\": 933,\n        \"humidity\": 69,\n        \"temp_kf\": -1.11\n    },\n    \"weather\": [\n        {\n        \"id\": 500,\n        \"main\": \"Rain\",\n        \"description\": \"light rain\",\n        \"icon\": \"10d\"\n        }\n    ],\n    \"clouds\": {\n        \"all\": 100\n    },\n    \"wind\": {\n        \"speed\": 0.62,\n        \"deg\": 349,\n        \"gust\": 1.18\n    },\n    \"visibility\": 10000,\n    \"pop\": 0.32,\n    \"rain\": {\n        \"3h\": 0.26\n    },\n    \"sys\": {\n        \"pod\": \"d\"\n    },\n    \"dt_txt\": \"2022-08-30 15:00:00\"\n    },\n    {\n    \"dt\": 1661882400,\n    \"main\": {\n        \"temp\": 295.45,\n        \"feels_like\": 295.59,\n        \"temp_min\": 292.84,\n        \"temp_max\": 295.45,\n        \"pressure\": 1015,\n        \"sea_level\": 1015,\n        \"grnd_level\": 931,\n        \"humidity\": 71,\n        \"temp_kf\": 2.61\n    },\n    \"weather\": [\n        {\n        \"id\": 500,\n        \"main\": \"Rain\",\n        \"description\": \"light rain\",\n        \"icon\": \"10n\"\n        }\n    ],\n    \"clouds\": {\n        \"all\": 96\n    },\n    \"wind\": {\n        \"speed\": 1.97,\n        \"deg\": 157,\n        \"gust\": 3.39\n    },\n    \"visibility\": 10000,\n    \"pop\": 0.33,\n    \"rain\": {\n        \"3h\": 0.57\n    },\n    \"sys\": {\n        \"pod\": \"n\"\n    },\n    \"dt_txt\": \"2022-08-30 18:00:00\"\n    },\n    {\n    \"dt\": 1661893200,\n    \"main\": {\n        \"temp\": 292.46,\n        \"feels_like\": 292.54,\n        \"temp_min\": 290.31,\n        \"temp_max\": 292.46,\n        \"pressure\": 1015,\n        \"sea_level\": 1015,\n        \"grnd_level\": 931,\n        \"humidity\": 80,\n        \"temp_kf\": 2.15\n    },\n    \"weather\": [\n        {\n        \"id\": 500,\n        \"main\": \"Rain\",\n        \"description\": \"light rain\",\n        \"icon\": \"10n\"\n        }\n    ],\n    \"clouds\": {\n        \"all\": 68\n    },\n    \"wind\": {\n        \"speed\": 2.66,\n        \"deg\": 210,\n        \"gust\": 3.58\n    },\n    \"visibility\": 10000,\n    \"pop\": 0.7,\n    \"rain\": {\n        \"3h\": 0.49\n    },\n    \"sys\": {\n        \"pod\": \"n\"\n    },\n    \"dt_txt\": \"2022-08-30 21:00:00\"\n    },\n    ....\n    {\n    \"dt\": 1662292800,\n    \"main\": {\n        \"temp\": 294.93,\n        \"feels_like\": 294.83,\n        \"temp_min\": 294.93,\n        \"temp_max\": 294.93,\n        \"pressure\": 1018,\n        \"sea_level\": 1018,\n        \"grnd_level\": 935,\n        \"humidity\": 64,\n        \"temp_kf\": 0\n    },\n    \"weather\": [\n        {\n        \"id\": 804,\n        \"main\": \"Clouds\",\n        \"description\": \"overcast clouds\",\n        \"icon\": \"04d\"\n        }\n    ],\n    \"clouds\": {\n        \"all\": 88\n    },\n    \"wind\": {\n        \"speed\": 1.14,\n        \"deg\": 17,\n        \"gust\": 1.57\n    },\n    \"visibility\": 10000,\n    \"pop\": 0,\n    \"sys\": {\n        \"pod\": \"d\"\n    },\n    \"dt_txt\": \"2022-09-04 12:00:00\"\n    }\n],\n\"city\": {\n    \"id\": 3163858,\n    \"name\": \"Zocca\",\n    \"coord\": {\n    \"lat\": 44.34,\n    \"lon\": 10.99\n    },\n    \"country\": \"IT\",\n    \"population\": 4593,\n    \"timezone\": 7200,\n    \"sunrise\": 1661834187,\n    \"sunset\": 1661882248\n}\n}\n</code></pre> <p>\u00c9tape 3 : Enfin, il ne reste plus qu'\u00e0 cr\u00e9er les deux courbes avec la fonction <code>plot</code>, puis \u00e0 les afficher avec la fonction <code>show</code> de pyplot. Voir documentation de pyplot.</p> <p>Vous devrez donc appeler deux fois la fonction <code>plot</code>, en donnant les tableaux cr\u00e9\u00e9s pr\u00e9c\u00e9demment en entr\u00e9es.</p> <p>Aide Pyplot</p> <p>Vous pouvez consulter cette page pour des rappels concernant le module pyplot contenu dans la biblioth\u00e8que Matplotlib. N'oubliez pas d'importer le module dans votre script s'il ne l'est pas, en rajoutant cette ligne au d\u00e9but de votre script :</p> <pre><code>from matplotlib import pyplot\n</code></pre> <p>Si le module n'est pas install\u00e9 sur votre machine, vous devez l'installer. Pour cela, dans Thonny, cliquez sur \"Outils\" puis sur \"G\u00e9rer les paquets\", puis recherchez et installez le paquet Matplotlib.</p> <p>En l'occurence, vous n'aurez besoin que des fonctions <code>plot</code> et <code>show</code>, et \u00e9ventuellement de <code>legend</code> si vous souhaitez afficher des l\u00e9gendes.</p>"},{"location":"terminale/modularite/modules/","title":"Gestion de modules","text":""},{"location":"terminale/modularite/modules/#gestion-de-modules","title":"Gestion de modules","text":"<p>Comme vu dans le chapitre pr\u00e9c\u00e9dent, le travail sur les API a \u00e9t\u00e9 grandement facilit\u00e9 par l'utilisation du module <code>requests</code> de Python, qui a fait une bonne partie du travail pour nous. Sans avoir eu \u00e0 inspecter le code de ce module, nous avons pu l'utiliser facilement et avons ainsi \u00e9vit\u00e9 de longues heures de d\u00e9veloppement pour obtenir le m\u00eame r\u00e9sultat.</p> <p>Lorsque le code d\u2019un programme devient volumineux, il devient difficile de le mettre au point, c\u2019est-\u00e0-dire de corriger ses bugs et de le maintenir, de le faire \u00e9voluer, notamment pour int\u00e9grer de nouvelles fonctionnalit\u00e9s.</p> <p>Il est alors indispensable de le d\u00e9couper en plusieurs parties aussi ind\u00e9pendantes que possible les unes des autres. La plupart des programmes sont ainsi d\u00e9coup\u00e9s en plusieurs modules, on parle de programmation modulaire.</p> <p>On peut alors tester chaque module ind\u00e9pendamment (tests unitaires), et tester les modules ensemble (tests d\u2019int\u00e9gration), nous reviendrons sur les tests plus tard. La modularit\u00e9 facilite \u00e9galement la r\u00e9utilisation : un module bien con\u00e7u peut \u00eatre utilis\u00e9 par d\u2019autres programmes et mis \u00e0 disposition de la communaut\u00e9.</p> <p>Les modules Python permettent ainsi d'enrichir le langage de nouvelles fonctionnalit\u00e9s et de nouveaux objets r\u00e9utilisables facilement.</p>"},{"location":"terminale/modularite/modules/#importer-un-module","title":"Importer un module","text":"<p>Un module s'importe par son nom, qui correspond au nom du fichier Python priv\u00e9 de l'extension .py.</p> <p>Par exemple, le module <code>random</code> qui regroupe des fonctions en lien avec l'al\u00e9atoire (randint, choice, shuffle, ...) peut \u00eatre appel\u00e9 de la mani\u00e8re suivante :</p> <pre><code>import random\n</code></pre> <p>Le contenu du module est alors import\u00e9 dans un espace de noms, ici \"random\". Si l'on souhaite par exemple appeler la fonction <code>randint</code>, on \u00e9crira donc :</p> <pre><code>alea = random.randint(1,5)\n</code></pre> <p>On peut \u00e9galement utiliser un espace de noms diff\u00e9rent :</p> <p></p><pre><code>import random as rd\nalea = rd.randint(1,5)\n</code></pre> Cela permet de rendre l'appel plus concis et d'\u00e9viter que des m\u00e9thodes qui auraient le m\u00eame nom se court-circuitent. <p>Une autre mani\u00e8re de faire est d'utiliser le symbole <code>*</code> pour tout importer depuis un module :</p> <pre><code>from random import *\nalea = randint(1,6)\n</code></pre> <p>Attention !</p> <p>En utilisant cette m\u00e9thode, il y a un risque de conflit si le module contient des fonctions portant le m\u00eame nom que d'autres fonctions d\u00e9j\u00e0 existantes.</p> <p>Si l'on souhaite simplement, par exemple, importer la fonction <code>randint</code> et la fonction <code>choices</code> du module <code>random</code>, on peut \u00e9crire :</p> <pre><code>from random import randint, choices\nalea = randint(1,6)\nalea_lst = choices[1,2,4,3,7]\n</code></pre>"},{"location":"terminale/modularite/modules/#obtenir-de-laide-sur-une-fonction","title":"Obtenir de l'aide sur une fonction","text":"<p>Un module s'apparente \u00e0 une bo\u00eete noire, on a donc en g\u00e9n\u00e9ral pas le code des fonctions sous les yeux, d'o\u00f9 l'int\u00e9r\u00eat d'une bonne documentation.</p> <p>La sp\u00e9cification d'une fonction permet d'informer les utilisateurs des t\u00e2ches effectu\u00e9es par cette fonction, des contraintes impos\u00e9es sur les param\u00e8tres, des r\u00e9sultats attendus, (\u00e9ventuellement) des erreurs affich\u00e9es en cas de mauvaise utilisation...</p> <p>On utilise pour cela une docstring (commentaire sur plusieurs lignes) qui :</p> <ul> <li>d\u00e9crit ce que fait de la fonction.</li> <li>pr\u00e9cise les param\u00e8tres d'entr\u00e9e et leur type</li> <li>pr\u00e9cise la valeur de sortie et son type</li> <li>\u00e9ventuellement :<ul> <li>sp\u00e9cifie les conditions d'utilisation (pr\u00e9conditions) d'une fonction.</li> <li>indique les effets de bord d'une fonction.</li> <li>propose des exemples d'utilisation d'une fonction.</li> <li>indique les erreurs lev\u00e9es en cas de mauvaise utilisation...</li> <li>etc.</li> </ul> </li> </ul> <p>Voici un exemple avec une fonction <code>produit</code> qio calcule le produit de deux entiers <code>a</code> et <code>b</code> :</p> <pre><code>def produit(a, b):\n    ''' Fonction qui renvoie le produit de a et b.\n    :CU: type(a) == type(b) == int\n    :param a: (int) Un entier\n    :param b: (int) Un autre entier\n    :return: (int) Le produit de a et b\n\n    :Exemple:\n    &gt;&gt;&gt; produit(4, 6)\n    24\n    '''\n    assert type(a) == type(b) == int\n    res = 0\n    for _ in range(b):\n        res += a\n    assert res == a*b\n    return res\n</code></pre> Rappels annotations de types <p>On peut \u00e9galement indiquer les types des param\u00e8tres de fonctions sous la forme d'annotations de types, plut\u00f4t que de les sp\u00e9cifier dans la docstring. Une fonction <code>produit</code> qui calcule le produit de deux entiers <code>a</code> et <code>b</code> pourrait donc \u00eatre pr\u00e9sent\u00e9e ainsi :</p> <pre><code>def produit(a, b):\n    ''' Fonction qui renvoie le produit de a et b.\n    :param a: (int) Un entier\n    :param b: (int) Un autre entier\n    :return: (int) Le produit de a et b\n\n    :Exemple:\n    &gt;&gt;&gt; produit(4, 6)\n    24\n    '''\n    [...]\n</code></pre> <p>ou</p> <pre><code>def produit(a: int, b: int) -&gt; int:\n    ''' Fonction qui renvoie le produit de deux entiers a et b.\n\n    :Exemple:\n    &gt;&gt;&gt; produit(4, 6)\n    24\n    '''\n    [...]\n</code></pre> <p>La fonction <code>help</code> de Python permet d'obtenir la documentation des modules et fonctions. Par exemple, les instructions suivantes permettent d'afficher toute la documentation du module <code>random</code> (classes, m\u00e9thodes, fonctions...) :</p> <pre><code>&gt;&gt;&gt; import random\n&gt;&gt;&gt; help(random)\n</code></pre> <p>De plus, le module pydoc permet de g\u00e9n\u00e9rer de la documentation \u00e0 partir de docstrings.</p> <p><code>pydoc &lt;nom_classe&gt;</code> : Afficher la documentation sur terminal <code>pydoc -w &lt;nom_classe&gt;</code> : G\u00e9n\u00e9rer un fichier HTML</p> <p>\u00c0 vous de jouer</p> <p>\u00c0 l'aide de la fonction <code>help</code>, d\u00e9terminez \u00e0 quoi sert la fonction <code>randrange</code> du module <code>random</code>, le nombre et le nom de ses param\u00e8tres. Combien y a t-il de param\u00e8tres obligatoires ? Facultatifs ?</p> <p>Note</p> <p>On parle ici de \"fonctions\", mais en r\u00e9alit\u00e9 on devrait plut\u00f4t parler de \"m\u00e9thodes\", c'est-\u00e0-dire de fonctions contenues dans des \"classes\". Tout cela sera abord\u00e9 lors du chapitre sur la programmation orient\u00e9e objet (POO).</p>"},{"location":"terminale/modularite/modules/#activite-creer-un-module","title":"Activit\u00e9 - Cr\u00e9er un module","text":"<p>Vous allez cr\u00e9er un module permettant d'effectuer un certain nombre d'op\u00e9rations sur des listes d'entiers.</p> <p>\u00c0 t\u00e9l\u00e9charger</p> <ul> <li>operations.py - Module permettant d'effectuer des op\u00e9rations sur des listes.</li> <li>main.py - Programme principal</li> </ul> <p>Correction</p> <ul> <li>operations_corr.py - Module corrig\u00e9 permettant d'effectuer des op\u00e9rations sur des listes.</li> <li>main_corr.py - Programme principal corrig\u00e9</li> </ul> <p>Exercice 1</p> <p>Compl\u00e9tez le corps des fonctions <code>sum_lst</code>, <code>min_lst</code> et <code>max_lst</code> permettant de renvoyer respectivement la somme des \u00e9l\u00e9ments, l'\u00e9l\u00e9ment minimal et l'\u00e9l\u00e9ment maximal d'une liste d'entiers pass\u00e9e en argument. Compl\u00e9tez \u00e9galement le corps de la fonction <code>ajouter_debut</code> permettant d'ajouter un \u00e9l\u00e9ment au d\u00e9but d'une liste.</p> Corrig\u00e9 exercice 1 <pre><code>def sum_lst(lst: list) -&gt; int:\n    ''' Renvoie le r\u00e9sultat de la somme des \u00e9l\u00e9ments d'une liste.\n\n    :Exemples:\n    &gt;&gt;&gt; sum_lst([2,4,6,8])\n    20\n    '''\n\n    res = 0\n    for el in lst:\n        res += el\n    return res\n\ndef min_lst(lst: list) -&gt; int:\n    ''' Renvoie la valeur minimale d'une liste.\n\n    :Exemples:\n    &gt;&gt;&gt; min_lst([8,1,9,2,7])\n    1\n    '''\n\n    min = lst[0]\n    for i in range(1, len(lst)):\n        if lst[i] &lt; min:\n            min = lst[i]\n    return min\n\ndef max_lst(lst: list) -&gt; int:\n    ''' Renvoie la valeur maximale d'une liste.\n\n    :Exemples:\n    &gt;&gt;&gt; max_lst([8,1,9,2,7])\n    9\n    '''\n\n    max = lst[0]\n    for i in range(1, len(lst)):\n        if lst[i] &gt; max:\n            max = lst[i]\n    return max\n\ndef ajouter_debut(lst: list, el: int) -&gt; list:\n    ''' Renvoie une nouvelle liste contenant les \u00e9l\u00e9ments de lst incluant l'\u00e9l\u00e9ment el en premi\u00e8re position.\n\n    :Exemples:\n    &gt;&gt;&gt; ajouter_debut([2,9,4,5], 8)\n    [8, 2, 9, 4, 5]\n    '''\n\n    return [el] + lst\n</code></pre> <p>Exercice 2</p> <p>Ouvrez le script nomm\u00e9 <code>main.py</code>, et y importer le module <code>operations</code>.</p> <p>Compl\u00e9ter la fonction <code>to_bin</code> permettant de transformer un entier en nombre binaire stock\u00e9 sous la forme d'une liste de 0 et de 1. Vous utiliserez pour cela la fonction <code>ajouter_debut</code> d\u00e9finie dans le module <code>operations</code>.</p> Corrig\u00e9 exercice 2 <p>Il ne faut pas oublier d'importer la fonction <code>ajouter_debut</code> du module <code>operations</code> au d\u00e9but de votre script : </p><pre><code>from operations import ajouter_debut\n</code></pre> <p>Pour r\u00e9aliser la fonction <code>to_bin</code>, on utilise la m\u00e9thode des divisions successives :</p> <pre><code>def to_bin(ent: int) -&gt; list:\n    ''' Renvoie la repr\u00e9sentation binaire de l'entier sp\u00e9cifi\u00e9, sous la forme d'une liste.\n    On utilise la m\u00e9thode des divisions euclidiennes successives.\n\n    :Exemples:\n    &gt;&gt;&gt; to_bin(10)\n    [1, 0, 1, 0]\n    '''\n\n    lst = []\n    while ent != 0:\n        lst = ajouter_debut(lst, ent%2)\n        ent //= 2\n    return lst\n</code></pre> <p>Exercice 3</p> <p>Compl\u00e9tez la fonction <code>moyenne</code> permettant de calculer la moyenne des \u00e9l\u00e9ments d'une liste, en utilisant la fonction <code>sum_lst</code> de <code>operations</code>.</p> Corrig\u00e9 exercice 3 <p>Il ne faut pas oublier d'importer la fonction <code>sum_lst</code> du module <code>operations</code> au d\u00e9but de votre script. Pour importer \u00e0 la fois <code>ajouter_debut</code> et <code>sum_lst</code> : </p><pre><code>from operations import ajouter_debut, sum_lst\n</code></pre> <pre><code>def moyenne(lst: list) -&gt; float:\n    ''' Renvoie la moyenne des \u00e9l\u00e9ments d'une liste.\n\n    :Exemples:\n    &gt;&gt;&gt; moyenne([12,15,10,20])\n    14.25\n    '''\n\n    return sum_lst(lst) / len(lst)\n</code></pre>"},{"location":"terminale/modularite/modules/#la-notion-dinterface","title":"La notion d'interface","text":"<p>Extrait du Balabonski Terminale</p> <p>Pour chaque module, on distingue:</p> <ul> <li>sa r\u00e9alisation (on dit aussi souvent impl\u00e9mentation), c'est-\u00e0-dire le code lui-m\u00eame, et </li> <li>son interface, consistant en une \u00e9num\u00e9ration des fonctions d\u00e9finies dans le module qui sont destin\u00e9es \u00e0 \u00eatre utilis\u00e9es dans la r\u00e9alisation d'autres modules, appel\u00e9s clients. </li> </ul> <p>L'interface d'un module est li\u00e9e \u00e0 sa documentation, et doit notamment expliciter ce qu'un utilisateur a besoin de conna\u00eetre des fonctions propos\u00e9es: comment et pour quoi les utiliser. Pour chaque fonction de l'interface, on a ainsi besoin de son nom, de la liste de ses param\u00e8tres et de sa sp\u00e9cification, c'est-\u00e0-dire les conditions auxquelles la fonction peut \u00eatre appliqu\u00e9e et les r\u00e9sultats \u00e0 attendre. Des informations suppl\u00e9mentaires concernant des caract\u00e9ristiques comme le temps d'ex\u00e9cution ou l'espace m\u00e9moire requis peuvent \u00e9galement \u00eatre utiles.</p> <p>L'objectif est que ces fonctions incluses dans l'interface soient suffisantes pour permettre \u00e0 un utilisateur de faire appel aux fonctionnalit\u00e9s du module, et qu'elles puissent \u00eatre utilis\u00e9es sans avoir besoin d'aller consulter le code du module. L'interface peut \u00eatre d\u00e9crite comme une abstraction du module: une description de ce qui caract\u00e9rise le module, mais faite \u00e0 un niveau assez haut, ignorant les d\u00e9tails concrets de la r\u00e9alisation. La documentation de l'interface peut \u00eatre vue comme un contrat entre l'auteur d'un module et ses utilisateurs, qui simplifie l'utilisation du module en limitant le nombre de choses qu'il faille lire, comprendre et m\u00e9moriser pour utiliser le module.</p> <p>Voici un exemple d'interface :</p> <p></p> <p>Notion d'encapsulation</p> <p>Le contrat qu'une interface \u00e9tablit entre l'utilisateur et l'auteur d'un module porte sur les r\u00e9sultats, et non pas sur les moyens mis en oeuvre : il est notamment libre d'introduire des fonctions, variables, constantes, ..., qui ne sont pas incluses dans l'interface. On parle alors de fonctions, variables, constantes encapsul\u00e9es dans le module. (On reviendra sur cette notion d'encapsulation dans la partie sur la POO.)</p> <p>En Python, l'auteur d'un module peut indiquer que certains \u00e9l\u00e9ments sont priv\u00e9s (c'est-\u00e0-dire encapsul\u00e9s) en faisant commencer leur nom par un caract\u00e8re <code>_</code>. Toutefois, contrairement \u00e0 d'autres langages, en Python, on ne peut pas r\u00e9ellement emp\u00eacher l'utilisation de donn\u00e9es \"priv\u00e9es\". Il s'agit plus d'une indication tacite \u00e0 destination de l'utilisateur, que celui-ci doit respecter pour garantir le bon fonctionnement du module.</p> <p>\u00c0 vous de jouer !</p> <p>Voici une interface permettant de cr\u00e9er et manipuler des dictionnaires :</p> fonction description <code>cree()</code> cr\u00e9e et renvoie un dictionnaire vide <code>cle(d, k)</code> renvoie <code>True</code> si et seulement si le dictionnaire <code>d</code>contient la cl\u00e9 <code>k</code>. <code>lit(d, k)</code> renvoie la valeur associ\u00e9e \u00e0 la cl\u00e9 <code>k</code> dans le dictionnaire <code>d</code>, et <code>None</code> si la cl\u00e9 <code>k</code> n'apparait pas. <code>ecrit(d, k, v)</code> ajoute au dictionnaire <code>d</code> l'association entre la cl\u00e9 <code>k</code> et la valeur <code>v</code>, en rempla\u00e7ant une \u00e9ventuelle association d\u00e9j\u00e0 pr\u00e9sente pour <code>k</code>. <p>Impl\u00e9mentez un module <code>dictionnaire</code>, dans un fichier nomm\u00e9 <code>dictionnaire.py</code>, qui correspond \u00e0 cette interface.</p> Corrig\u00e9 - \u00c0 vous de jouer ! <p></p> T\u00e9l\u00e9charger le fichier Python corrig\u00e9"},{"location":"terminale/pilesfiles/","title":"Les piles et les files","text":""},{"location":"terminale/pilesfiles/#les-piles-et-les-files","title":"Les piles et les files","text":"Liste des contenus Description Cours Cours sur les piles et les files."},{"location":"terminale/pilesfiles/cours/","title":"Cours","text":""},{"location":"terminale/pilesfiles/cours/#piles-et-files","title":"Piles et files","text":""},{"location":"terminale/pilesfiles/cours/#presentation","title":"Pr\u00e9sentation","text":"<p>Les structures de pile et de file permettent de stocker des ensembles d'\u00e9l\u00e9ments et fournissent des op\u00e9rations permettant d'ajouter ou de retirer des \u00e9l\u00e9ments un \u00e0 un. Cependant, les \u00e9l\u00e9ments retir\u00e9s ne le sont pas dans un ordre arbitraire :</p> <ul> <li>Dans une pile (en anglais stack), chaque op\u00e9ration de retrait retire l'\u00e9l\u00e9ment arriv\u00e9 le plus r\u00e9cemment. Par exemple : une pile d'assiettes, dans laquelle chaque nouvelle assiette est ajout\u00e9e au-dessus des pr\u00e9c\u00e9dentes, et o\u00f9 l'assiette retir\u00e9e est syst\u00e9matiquement celle du sommet, un peu comme pour les tours de Hano\u00ef. On parle de m\u00e9thode DEPS pour dernier entr\u00e9, premier sorti, ou en anglais LIFO pour last in, first out.  </li> </ul> <p> </p> Exemple de pile : une pile d'assiettes.Source : ZoneNSI <ul> <li>Dans une structure de file (en anglais queue), chaque op\u00e9ration de retrait retire l'\u00e9l\u00e9ment qui avait \u00e9t\u00e9 ajout\u00e9 le premier. Par exemple : une file d'attente, dans laquelle des personnes arrivent \u00e0 tour de r\u00f4le, patientent, et sont servies dans leur ordre d'arriv\u00e9e. On parle ici de m\u00e9thode PEPS pour premier entr\u00e9, premier sorti, ou en anglais FIFO pour first in, first out.  </li> </ul> <p> </p> Exemple de file : une file d'attente.Source : ZoneNSI <p>Chacune de ces deux structures (pile et file) poss\u00e8de une interface proposant au minimum les op\u00e9rations suivantes :</p> <ul> <li>cr\u00e9er une structure initialement vide,</li> <li>tester si une structure est vide,</li> <li>ajouter un \u00e9l\u00e9ment \u00e0 une structure,</li> <li>retirer et obtenir un \u00e9l\u00e9ment d'une structure.</li> </ul> <p>Par ailleurs, tout comme dans le cas des listes cha\u00een\u00e9es, il est pr\u00e9f\u00e9rable (pour une question de logique) que les piles et les files soient des structures homog\u00e8nes, c'est-\u00e0-dire que tous les \u00e9l\u00e9ments stock\u00e9s soient de m\u00eame type.</p> <p>Le plus souvent, les structures de pile et de file sont consid\u00e9r\u00e9es mutables : chaque op\u00e9ration d'ajout ou de retrait d'un \u00e9l\u00e9ment modifie directement la pile ou la file sur laquelle elle est appliqu\u00e9e. Cela \u00e9vite, dans le cas d'un retrait (d\u00e9pilement pour une pile ou d\u00e9filement pour une file) notamment, d'avoir \u00e0 renvoyer \u00e0 la fois l'\u00e9l\u00e9ment retir\u00e9 et la pile apr\u00e8s d\u00e9pilement.</p> <p>On peut \u00e9galement ajouter des op\u00e9rations suppl\u00e9mentaires \u00e0 nos structures, comme par exemple :</p> <ul> <li>obtenir le nombre d'\u00e9l\u00e9ments contenus dans une structure,</li> <li>vider une structure,</li> <li>obtenir un \u00e9l\u00e9ment d'une structure (celui qu'on aurait obtenu avec l'op\u00e9ration de retrait), mais sans le retirer,</li> <li>etc.</li> </ul> <p>Comme dans le cas des listes cha\u00een\u00e9es, il y a plusieurs fa\u00e7ons d'impl\u00e9menter les structures de piles et de files. Mais avant d'\u00e9tudier les impl\u00e9mentations possibles, nous allons d\u00e9finir un interface (ou un type abstrait) permettant de d\u00e9finir les op\u00e9rations \u00e9l\u00e9mentaires utilisables dans le cas d'une pile et d'une file.</p> <p>Type abstrait Pile</p> <p>Voici une mani\u00e8re de d\u00e9finir l'interface <code>Pile</code> repr\u00e9sentant une pile. Note : La notation \\(Pile[Element]\\) correspond \u00e0 une pile contenant des objets de type \\(Element\\).</p> <p>Utilise : Element, Entier, Booleen Op\u00e9rations fondamentales (primitives):</p> Op\u00e9ration Description \\(nouvelle\\_pile\\_vide :~\\rightarrow Pile~VIDE\\) Renvoie une nouvelle pile VIDE. \\(est\\_vide :~Pile \\rightarrow Booleen\\) Renvoie <code>True</code> si la pile donn\u00e9e est vide, <code>False</code> sinon. \\(empiler :~Pile[Element] \\times Element \\rightarrow \\emptyset\\) Ajoute un nouvel \u00e9l\u00e9ment donn\u00e9 au sommet d'une pile d'\u00e9l\u00e9ments donn\u00e9e. \\(depiler :~Pile[Element] \\rightarrow Element\\) Retire l'\u00e9l\u00e9ment au sommet de la pile NON VIDE donn\u00e9e, et renvoie cet \u00e9l\u00e9ment. <p>Voici quelques op\u00e9rations suppl\u00e9mentaires :</p> Op\u00e9ration Description \\(nombre\\_elements :~Pile[Elements] \\rightarrow Entier\\) Renvoie le nombre d'\u00e9l\u00e9ments que contient une pile donn\u00e9e. \\(vider :~Pile[Elements] \\rightarrow \\emptyset\\) Vide le contenu de la pile donn\u00e9e (supprime tous ses \u00e9l\u00e9ments). \\(obtenir\\_element :~Pile[Elements] \\rightarrow Element\\) Renvoie l'\u00e9l\u00e9ment au sommet de la pile donn\u00e9e, sans le retirer. <p>Type abstrait File</p> <p>Voici une mani\u00e8re de d\u00e9finir l'interface <code>File</code> repr\u00e9sentant une file. (\u00c0 compl\u00e9ter pour lundi 13/11/2023)</p> <p>Utilise : Element, Entier, Booleen Op\u00e9rations fondamentales (primitives):</p> Op\u00e9ration Description \\(nouvelle\\_file\\_vide :~\\rightarrow File~VIDE\\) Renvoie une nouvelle file VIDE. \\(est\\_vide :~File \\rightarrow Booleen\\) Renvoie <code>True</code> si la file donn\u00e9e est vide, <code>False</code> sinon. \\(enfiler :~File[Element] \\times Element \\rightarrow \\emptyset\\) Ajoute un nouvel \u00e9l\u00e9ment donn\u00e9 dans une file d'\u00e9l\u00e9ments donn\u00e9e. \\(defiler :~File[Element] \\rightarrow Element\\) Retire le premier \u00e9l\u00e9ment ajout\u00e9 \u00e0 la file NON VIDE donn\u00e9e, et renvoie cet \u00e9l\u00e9ment. <p>Voici quelques op\u00e9rations suppl\u00e9mentaires :</p> Op\u00e9ration Description \\(nombre\\_elements :~File[Elements] \\rightarrow Entier\\) Renvoie le nombre d'\u00e9l\u00e9ments que contient une file donn\u00e9e. \\(vider :~File[Elements] \\rightarrow \\emptyset\\) Vide le contenu de la file donn\u00e9e (supprime tous ses \u00e9l\u00e9ments). \\(obtenir\\_element :~File[Elements] \\rightarrow Element\\) Renvoie le premier \u00e9l\u00e9ment ajout\u00e9 \u00e0 la file donn\u00e9e, sans le retirer. <p>Type abstrait \\(\\ne\\) impl\u00e9mentation</p> <p>On rappelle qu'il faut faire la distinction entre l'interface et les impl\u00e9mentations. On ne sp\u00e9cifie ici pas comment les donn\u00e9es sont repr\u00e9sent\u00e9es, ni comment les op\u00e9rations sont impl\u00e9ment\u00e9es.</p> <p>Ces d\u00e9finitions abstraites du type Pile et File, bien qu'\u00e9tant mutables (on modifie directement la structure plut\u00f4t que d'en renvoyer une nouvelle), n'emp\u00eachent toutefois pas de proposer par la suite des impl\u00e9mentations non mutables, tant que celles-ci suivent les op\u00e9rations d\u00e9finies.</p>"},{"location":"terminale/pilesfiles/cours/#exemple-dutilisation-dune-pile","title":"Exemple d'utilisation d'une pile","text":"<p>Un exemple d'utilisation d'une pile : les op\u00e9rations d'acc\u00e8s \u00e0 une nouvelle page web et de retour en arri\u00e8re (retour \u00e0 la derni\u00e8re page web) sur un navigateur.</p> <p>On pourrait, en Python, d\u00e9finir ces op\u00e9rations de cette mani\u00e8re :</p> <pre><code>adresse_courante = \"\"\nadresses_precedentes = nouvelle_pile_vide()\n\ndef aller_a(adresse_cible):\n    adresses_precedentes.empiler(adresse_courante)\n    adresse_courante = adresse_cible\n\ndef retour():\n    if not adresses_precedentes.est_vide():\n        adresse_courante = adresses_precedentes.depiler()\n</code></pre>"},{"location":"terminale/pilesfiles/cours/#implementations-dune-pile","title":"Impl\u00e9mentations d'une pile","text":"<p>On fait le choix d'impl\u00e9menter notre pile en utilisant la POO (programmation orient\u00e9e objet). On va donc cr\u00e9er une classe <code>Pile</code> permettant de repr\u00e9senter une pile.</p> <p>Par ailleurs, tout comme dans notre d\u00e9finition abstraite pr\u00e9c\u00e9dente, on choisit de travailler avec une structure mutable. Cela signifie que les op\u00e9rations <code>empiler</code> et <code>depiler</code> modifieront directement la pile, plut\u00f4t que de renvoyer une nouvelle pile.</p>"},{"location":"terminale/pilesfiles/cours/#avec-une-liste-python","title":"Avec une liste Python","text":"<p>Nous allons donc cr\u00e9er une classe <code>Pile</code> pour repr\u00e9senter notre pile, mais il nous faut \u00e9galement une autre structure de donn\u00e9es pour stocker les \u00e9l\u00e9ments de la pile. Pour cela, nous allons dans un premier temps utiliser une liste Python.</p> <p>Ainsi, notre classe <code>Pile</code> contiendra un seul attribut, que nous nommerons <code>contenu</code>, qui sera donc de type <code>list</code> et qui contiendra tous les \u00e9l\u00e9ments de la pile. Pour une question d'homog\u00e9n\u00e9it\u00e9, notre pile ne contiendra que des nombres entiers (type <code>int</code>).</p> <p>Ainsi :</p> <ul> <li>l'op\u00e9ration <code>empiler</code>, permettant d'ajouter un nouvel \u00e9l\u00e9ment au sommet de la pile, ajoutera cet \u00e9l\u00e9ment \u00e0 la fin de la liste Python de l'attribut <code>contenu</code>,</li> <li>l'op\u00e9ration <code>depiler</code>, permettant de retirer et de renvoyer l'\u00e9l\u00e9ment situ\u00e9 au sommet de la pile, retirera et renverra l'\u00e9l\u00e9ment situ\u00e9 \u00e0 la fin de la liste Python de l'attribut <code>contenu</code>.</li> </ul> <p>Voici le squelette de notre classe <code>Pile</code> :</p> <pre><code>class Pile:\n\n    def __init__(self: 'Pile'):\n        ''' Constructeur de la classe Pile. '''\n\n        self.contenu = []\n\n    # Op\u00e9rations de base\n\n    def est_vide(self: 'Pile') -&gt; bool:\n        ''' Renvoie True si la pile est vide, False sinon. '''\n\n        pass\n\n    def empiler(self: 'Pile', elt: int) -&gt; None:\n        ''' Empile un \u00e9l\u00e9ment donn\u00e9 au sommet de la pile. '''\n\n        pass\n\n    def depiler(self: 'Pile') -&gt; int:\n        ''' D\u00e9piler l'\u00e9l\u00e9ment situ\u00e9 au sommet de la pile NON VIDE. '''\n\n        pass\n\n    # Autres op\u00e9rations\n\n    def nombre_elements(self: 'Pile') -&gt; int:\n        ''' Renvoie le nb d'\u00e9l\u00e9ments de la pile. '''\n\n        pass\n\n    def vider(self: 'Pile') -&gt; None:\n        ''' Vide la pile (supprime tous ses \u00e9l\u00e9ments). '''\n\n        pass\n\n    def obtenir_element(self: 'Pile') -&gt; int:\n        ''' Renvoie l'\u00e9l\u00e9ment au sommet de la pile NON VIDE SANS LE SUPPRIMER. '''\n\n        pass\n</code></pre> <p>Cette classe <code>Pile</code> contient :</p> <ul> <li>un attribut :<ul> <li><code>contenu</code>, de type <code>list</code>, contenant les \u00e9l\u00e9ments (en l'occurence des entiers, de type <code>int</code>) contenus dans la pile.</li> </ul> </li> <li>trois m\u00e9thodes repr\u00e9sentant les op\u00e9rations de base :<ul> <li><code>est_vide</code> : pr\u00e9dicat qui renvoie <code>True</code> si la pile est vide, et <code>False</code> sinon,</li> <li><code>empiler</code> : permet d'ajouter un nouvel \u00e9l\u00e9ment <code>elt</code> donn\u00e9 au sommet de la pile,</li> <li><code>depiler</code> : permet de retirer et de renvoyer l'\u00e9l\u00e9ment situ\u00e9 au sommet de la pile.</li> </ul> </li> <li>trois m\u00e9thodes repr\u00e9sentant d'autres op\u00e9rations utiles :<ul> <li><code>nombre_elements</code> : renvoie le nombre d'\u00e9l\u00e9ments de la pile,</li> <li><code>vider</code> : retire tous les \u00e9l\u00e9ments de la pile,</li> <li><code>obtenir_element</code> : renvoie l'\u00e9l\u00e9ment situ\u00e9 au sommet de la pile, sans le retirer de la pile.</li> </ul> </li> </ul> <p>Annotations de type</p> <p>On a ici utilis\u00e9 des annotations de type, par exemple : <code>def empiler(self: 'Pile', elt: int) -&gt; None</code> : les annotations utilis\u00e9es permettent d'indiquer que le param\u00e8tre <code>self</code> est de type <code>Pile</code>, que le param\u00e8tre <code>elt</code> est de type <code>int</code>, et que la m\u00e9thode ne renvoie rien (<code>None</code>).</p> <p>Les annotations de type servent juste d'indications et n'ont aucun effet sur l'ex\u00e9cution du programme.</p> Voir l'impl\u00e9mentation compl\u00e8te <p>Voici finalement notre impl\u00e9mentation :</p> <pre><code>class Pile:\n\n    def __init__(self: 'Pile'):\n        ''' Constructeur de la classe Pile. '''\n\n        self.contenu = []\n\n    # Op\u00e9rations de base\n\n    def est_vide(self: 'Pile') -&gt; bool:\n        ''' Renvoie True si la pile est vide, False sinon. '''\n\n        return not self.contenu\n\n    def empiler(self: 'Pile', elt: int) -&gt; None:\n        ''' Empile un \u00e9l\u00e9ment donn\u00e9 au sommet de la pile. '''\n\n        self.contenu.append(elt)\n\n    def depiler(self: 'Pile') -&gt; int:\n        ''' D\u00e9piler l'\u00e9l\u00e9ment situ\u00e9 au sommet de la pile NON VIDE. '''\n\n        if self.est_vide():\n            raise ValueError(\"Erreur : Impossible de d\u00e9piler sur une pile vide !\")\n        return self.contenu.pop()\n\n    # Autres op\u00e9rations\n\n    def nombre_elements(self: 'Pile') -&gt; int:\n        ''' Renvoie le nb d'\u00e9l\u00e9ments de la pile. '''\n\n        return len(self.contenu)\n\n    def vider(self: 'Pile') -&gt; None:\n        ''' Vide la pile (supprime tous ses \u00e9l\u00e9ments). '''\n\n        self.contenu = []\n\n    def obtenir_element(self: 'Pile') -&gt; int:\n        ''' Renvoie l'\u00e9l\u00e9ment au sommet de la pile NON VIDE SANS LE SUPPRIMER. '''\n\n        if self.est_vide():\n            raise ValueError(\"Erreur : La pile est vide !\")\n        return self.contenu[self.nombre_elements() - 1]\n</code></pre>"},{"location":"terminale/pilesfiles/cours/#avec-une-liste-chainee","title":"Avec une liste cha\u00een\u00e9e","text":"<p>On va cette fois utiliser une liste cha\u00een\u00e9e pour repr\u00e9senter le contenu de notre <code>Pile</code>. On va pour cela r\u00e9-utiliser notre classe <code>Cellule</code> pr\u00e9sent\u00e9e dans le cours sur les listes cha\u00een\u00e9es.</p> <p>Impl\u00e9mentation des listes cha\u00een\u00e9es</p> <p>Avec notre choix d'impl\u00e9mentation des listes cha\u00een\u00e9es, une liste cha\u00een\u00e9e est soit :</p> <ul> <li>une liste cha\u00een\u00e9e VIDE repr\u00e9sent\u00e9e par l'objet <code>None</code>,</li> <li>une liste cha\u00een\u00e9e NON VIDE repr\u00e9sent\u00e9e par une instance de la classe <code>Cellule</code> de la mani\u00e8re suivante : <code>Cellule(&lt;premier \u00e9l\u00e9ment&gt;, &lt;cellule suivante&gt;)</code>.</li> </ul> <p>Initialement, l'attribut <code>contenu</code> sera donc \u00e9gal \u00e0 <code>None</code>, repr\u00e9sentant une liste cha\u00een\u00e9e vide.</p> <p>On proc\u00e9dera de la mani\u00e8re suivante :</p> <ul> <li>l'op\u00e9ration <code>empiler</code>, permettant d'ajouter un nouvel \u00e9l\u00e9ment au sommet de la pile, ajoutera cet \u00e9l\u00e9ment au d\u00e9but de la liste cha\u00een\u00e9e de l'attribut <code>contenu</code>,</li> <li>l'op\u00e9ration <code>depiler</code>, permettant de retirer et de renvoyer l'\u00e9l\u00e9ment situ\u00e9 au sommet de la pile, retirera et renverra l'\u00e9l\u00e9ment situ\u00e9 au d\u00e9but de la liste cha\u00een\u00e9e de l'attribut <code>contenu</code>.</li> </ul> <p>En effet, ajouter les \u00e9l\u00e9ments \u00e0 la fin de la liste cha\u00een\u00e9e serait co\u00fbteux car, \u00e0 chaque empilement ou d\u00e9pilement, il faudrait parcourir enti\u00e8rement la liste pour aller chercher la derni\u00e8re cellule ! Alors qu'en ajoutant les \u00e9l\u00e9ments au d\u00e9but de la liste cha\u00een\u00e9e, on a pas de parcours \u00e0 effectuer.</p> <p>Voici le squelette de notre classe <code>Pile</code> :</p> <pre><code>class Cellule:\n    ''' Une cellule d'une liste cha\u00een\u00e9e. '''\n\n    def __init__(self, v, s):\n        self.valeur = v  # Valeur contenue dans la cellule\n        self.suivante = s  # Cellule suivante\n\nclass Pile:\n\n    def __init__(self: 'Pile'):\n        ''' Constructeur de la classe Pile. '''\n\n        self.contenu = None\n\n    # Op\u00e9rations de base\n\n    def est_vide(self: 'Pile') -&gt; bool:\n        ''' Renvoie True si la pile est vide, False sinon. '''\n\n        pass\n\n    def empiler(self: 'Pile', elt: int) -&gt; None:\n        ''' Empile un \u00e9l\u00e9ment donn\u00e9 au sommet de la pile. '''\n\n        pass\n\n    def depiler(self: 'Pile') -&gt; int:\n        ''' D\u00e9piler l'\u00e9l\u00e9ment situ\u00e9 au sommet de la pile NON VIDE. '''\n\n        pass\n\n    # Autres op\u00e9rations\n\n    def nombre_elements(self: 'Pile') -&gt; int:\n        ''' Renvoie le nb d'\u00e9l\u00e9ments de la pile. '''\n\n        pass\n\n    def vider(self: 'Pile') -&gt; None:\n        ''' Vide la pile (supprime tous ses \u00e9l\u00e9ments). '''\n\n        pass\n\n    def obtenir_element(self: 'Pile') -&gt; int:\n        ''' Renvoie l'\u00e9l\u00e9ment au sommet de la pile NON VIDE SANS LE SUPPRIMER. '''\n\n        pass\n</code></pre> Voir l'impl\u00e9mentation compl\u00e8te <pre><code>class Cellule:\n    ''' Une cellule d'une liste cha\u00een\u00e9e. '''\n\n    def __init__(self, v, s):\n        self.valeur = v  # Valeur contenue dans la cellule\n        self.suivante = s  # Cellule suivante\n\nclass Pile:\n\n    def __init__(self: 'Pile'):\n        ''' Constructeur de la classe Pile. '''\n\n        self.contenu = None\n\n    # Op\u00e9rations de base\n\n    def est_vide(self: 'Pile') -&gt; bool:\n        ''' Renvoie True si la pile est vide, False sinon. '''\n\n        return self.contenu is None\n\n    def empiler(self: 'Pile', elt: int) -&gt; None:\n        ''' Empile un \u00e9l\u00e9ment donn\u00e9 au sommet de la pile. '''\n\n        self.contenu = Cellule(elt, self.contenu)\n\n    def depiler(self: 'Pile') -&gt; int:\n        ''' D\u00e9piler l'\u00e9l\u00e9ment situ\u00e9 au sommet de la pile NON VIDE. '''\n\n        if self.est_vide():\n            raise ValueError(\"Erreur : Impossible de d\u00e9piler sur une pile vide !\")\n        res = self.contenu.valeur\n        self.contenu = self.contenu.suivante\n        return res\n\n    # Autres op\u00e9rations\n\n    # Autres op\u00e9rations\n\n    def nombre_elements(self: 'Pile') -&gt; int:\n        ''' Renvoie le nb d'\u00e9l\u00e9ments de la pile. '''\n\n        res = 0\n        c = self.contenu\n        while c is not None:\n            res += 1\n            c = c.suivante\n        return res\n\n    def vider(self: 'Pile') -&gt; None:\n        ''' Vide la pile (supprime tous ses \u00e9l\u00e9ments). '''\n\n        self.contenu = None\n\n    def obtenir_element(self: 'Pile') -&gt; int:\n        ''' Renvoie l'\u00e9l\u00e9ment au sommet de la pile NON VIDE SANS LE SUPPRIMER. '''\n\n        if self.est_vide():\n            raise ValueError(\"Erreur : La pile est vide !\")\n        return self.contenu.valeur\n</code></pre>"},{"location":"terminale/pilesfiles/cours/#implementations-dune-file","title":"Impl\u00e9mentations d'une file","text":"<p>Comme pr\u00e9c\u00e9demment, on fait le choix d'impl\u00e9menter notre file en utilisant la POO. On va donc cr\u00e9er une classe <code>File</code> permettant de repr\u00e9senter une file.</p> <p>Ici aussi, on travaillera avec une structure mutable. Cela signifie que les op\u00e9rations <code>enfiler</code> et <code>defiler</code> modifieront directement la file, plut\u00f4t que de renvoyer une nouvelle file.</p>"},{"location":"terminale/pilesfiles/cours/#avec-une-liste-python_1","title":"Avec une liste Python","text":"<p>Ici, on repr\u00e9sentera le contenu de la file avec une liste Python (qui sera affect\u00e9e \u00e0 un attribut <code>contenu</code>, comme pour notre premi\u00e8re impl\u00e9mentation des piles).</p> <p>Cette fois, les \u00e9l\u00e9ments ajout\u00e9s \u00e0 la file (enfil\u00e9s) seront ajout\u00e9s d'un c\u00f4t\u00e9 de la liste Python de l'attribut <code>contenu</code>, et les \u00e9l\u00e9ments d\u00e9fil\u00e9s seront retir\u00e9s de l'autre c\u00f4t\u00e9 de la liste Python de l'attribut <code>contenu</code>, puisque le premier \u00e9l\u00e9ment entr\u00e9 est le premier sorti. On pourra proc\u00e9der comme suit :</p> <ul> <li>l'op\u00e9ration <code>enfiler</code>, permettant d'ajouter un nouvel \u00e9l\u00e9ment \u00e0 la file, ajoutera cet \u00e9l\u00e9ment \u00e0 la fin de la liste Python de l'attribut <code>contenu</code>,</li> <li>l'op\u00e9ration <code>defiler</code>, permettant de retirer et de renvoyer un \u00e9l\u00e9ment de la file, retirera et renverra l'\u00e9l\u00e9ment situ\u00e9 au d\u00e9but de la liste Python de l'attribut <code>contenu</code>.</li> </ul> \u00c0 faire - Impl\u00e9mentation <p>Compl\u00e9tez l'impl\u00e9mentation suivante de la classe File avec une liste Python :</p> <pre><code>class File:\n    def __init__(self):\n        ''' Constructeur de la classe File.\n        :param contenu: (list[int]) une liste d'entiers '''\n\n        self.contenu = []\n\n    def est_vide(self) -&gt; bool:\n        ''' Renvoie True si la file est vide, False sinon.'''\n\n        return ...\n\n    def enfiler(self, elt) -&gt; None:\n        ''' Enfile un \u00e9l\u00e9ment dans la file. '''\n\n        ...\n\n\n    def defiler(self) -&gt; int:\n        ''' D\u00e9file le premier \u00e9l\u00e9ment ajout\u00e9 \u00e0 la file, et le renvoie.\n        LEVER UNE ERREUR si la file est VIDE. '''\n\n        ...\n\n    def nombre_elements(self) -&gt; int:\n        ''' Renvoie le nombre d'\u00e9l\u00e9ments de la file. '''\n\n        ...\n\n    def vider(self) -&gt; None:\n        ''' Vide la file (supprime tous ses \u00e9l\u00e9ments). '''\n\n        ...\n\n    def obtenir_element(self) -&gt; int:\n        ''' Renvoie le premier \u00e9l\u00e9ment ajout\u00e9 \u00e0 la file sans le supprimer. '''\n\n        ...\n</code></pre>"},{"location":"terminale/pilesfiles/cours/#avec-une-liste-chainee_1","title":"Avec une liste cha\u00een\u00e9e","text":"<p>Cette fois, l'impl\u00e9mentation d'une file avec une liste cha\u00een\u00e9e diff\u00e8rera un petit peu de notre impl\u00e9mentation d'une pile.</p> <p>En effet, dans une pile, on ajoutait et retirait les \u00e9l\u00e9ments du m\u00eame c\u00f4t\u00e9 de la liste cha\u00een\u00e9e utilis\u00e9e pour stocker son contenu, puisque d\u00e9piler un \u00e9l\u00e9ment dans une pile consiste \u00e0 retirer le dernier \u00e9l\u00e9ment ajout\u00e9. L'op\u00e9ration <code>empiler</code> consistait donc \u00e0 ajouter un \u00e9l\u00e9ment en t\u00eate de la liste cha\u00een\u00e9e, et l'op\u00e9ration d\u00e9p`iler retirait l'\u00e9l\u00e9ment en t\u00eate de la liste cha\u00een\u00e9e.</p> <p>Ici, dans le cas d'une file, on devra ajouter les \u00e9l\u00e9ments d'un c\u00f4t\u00e9 de la liste cha\u00een\u00e9e, puis les retirer de l'autre c\u00f4t\u00e9 de la liste cha\u00een\u00e9e. Pour \u00e9viter d'effectuer des parcours de liste cha\u00een\u00e9e, qui sont co\u00fbteux, on impl\u00e9mentera notre classe <code>File</code> avec deux attributs :</p> <ul> <li>un attribut <code>tete</code> qui contiendra la r\u00e9f\u00e9rence de la cellule t\u00eate de la liste cha\u00een\u00e9e permettant de stocker les \u00e9l\u00e9ments de la file,</li> <li>un attribut <code>queue</code> qui contiendra la r\u00e9f\u00e9rence de la cellule queue de la liste cha\u00een\u00e9e permettant de stocker les \u00e9l\u00e9ments de la file.</li> </ul> <p>Ainsi :</p> <ul> <li>la m\u00e9thode <code>enfiler</code> de notre classe <code>File</code> ajoutera un \u00e9l\u00e9ment \u00e0 la queue de la liste cha\u00een\u00e9e,</li> <li>la m\u00e9thode <code>defiler</code> de notre classe <code>File</code> retirera l'\u00e9l\u00e9ment situ\u00e9 en t\u00eate de la liste cha\u00een\u00e9e.</li> </ul> \u00c0 faire - Impl\u00e9mentation <p>En reprenant le squelette ci-dessus, \u00e9crivez l'impl\u00e9mentation d'une File avec une liste cha\u00een\u00e9e.</p> <pre><code>class Cellule:\n    ''' Impl\u00e9mentation d'une liste cha\u00een\u00e9e. '''\n\n    def __init__(self, v, s):\n\n        self.valeur = v  # valeur de la cellule\n        self.suivante = s  # cellule suivante\n\nclass File:\n\n    def __init__(self: 'File'):\n        # La liste cha\u00een\u00e9e ne contient initialement aucune cellule,\n        # donc la t\u00eate et la queue sont initialis\u00e9es \u00e0 None\n\n        self.tete = None\n        self.queue = None\n\n    def est_vide(self: 'File') -&gt; bool:\n        # Si la liste cha\u00een\u00e9e est vide, la t\u00eate et la queue contiennent None.\n\n        return ...\n\n    def enfiler(self: 'File', elt: int) -&gt; None:\n\n        ...\n\n    def defiler(self: 'File') -&gt; int:\n\n        ...\n</code></pre>"},{"location":"terminale/pilesfiles/cours/#exercices","title":"Exercices","text":"<p>Exercice 1</p> <p>On souhaite utiliser une pile pour v\u00e9rifier si une expression arithm\u00e9tique est bien parenth\u00e9s\u00e9e. \u00c9crire une fonction <code>est_bien_parenthesee(chaine)</code> qui renvoie <code>True</code> si l'expression est bien parenth\u00e9s\u00e9e, <code>False</code> sinon.</p> <p>Par exemple : <code>est_bien_parenthesee('(1 + 3) * (6 + 7)')</code> renverra <code>True</code>. <code>est_bien_parenthesee('(6 + (4 * 5) - (2 + 1)')</code> renverra <code>False</code>.</p> <p>Exercice 2</p> <p>L'\u00e9criture polonaise inverse des expressions arithm\u00e9tiques place l'op\u00e9rateur apr\u00e8s ses op\u00e9randes. Cette notation ne n\u00e9cessite aucune parenth\u00e8se ni aucune r\u00e8gle de priorit\u00e9. Ainsi, l'expression polonaise inverse d\u00e9crite par la cha\u00eene de caract\u00e8res <code>1 2 3 * + 4 *</code> d\u00e9signe l'expression traditionnellement not\u00e9e \\((1 + 2 \\times 3) \\times 4\\). </p> <p>La valeur d'une telle expression peut \u00eatre calcul\u00e9e facilement en utilisant une pile pour stocker les r\u00e9sultats interm\u00e9diaires. Pour cela, on observe un \u00e0 un les \u00e9l\u00e9ments de l'expression et on effectue les actions suivantes:</p> <ul> <li>si on voit un nombre, on le place sur la pile;</li> <li>si on voit un op\u00e9rateur binaire, on r\u00e9cup\u00e8re les deux nombres au sommet de la pile, on leur applique l'op\u00e9rateur, et on replace le r\u00e9sultat sur la pile.</li> </ul> <p>Si l'expression \u00e9tait bien \u00e9crite, il y a bien toujours deux nombres sur la pile lorsque l'on voit un op\u00e9rateur, et \u00e0 la fin du processus il reste exactement un nombre sur la pile, qui est le r\u00e9sultat.</p> <p>\u00c9crire une fonction prenant en param\u00e8tre une cha\u00eene de caract\u00e8res repr\u00e9sentant une expression en notation polonaise inverse compos\u00e9e d'additions et de multiplications de nombres entiers et renvoyant la valeur de cette expression. On supposera que les \u00e9l\u00e9ments de l'expression sont s\u00e9par\u00e9s par des espaces.</p> <p>Attention : cette fonction ne doit pas renvoyer de r\u00e9sultat si l'expression est mal \u00e9crite. </p>"},{"location":"terminale/pilesfiles/cours_corr/","title":"Piles et files","text":""},{"location":"terminale/pilesfiles/cours_corr/#piles-et-files","title":"Piles et files","text":""},{"location":"terminale/pilesfiles/cours_corr/#presentation","title":"Pr\u00e9sentation","text":"<p>Les structures de pile et de file permettent de stocker des ensembles d'\u00e9l\u00e9ments et fournissent des op\u00e9rations permettant d'ajouter ou de retirer des \u00e9l\u00e9ments un \u00e0 un. Cependant, les \u00e9l\u00e9ments retir\u00e9s ne le sont pas dans un ordre arbitraire :</p> <ul> <li>Dans une pile (en anglais stack), chaque op\u00e9ration de retrait retire l'\u00e9l\u00e9ment arriv\u00e9 le plus r\u00e9cemment. Par exemple : une pile d'assiettes, dans laquelle chaque nouvelle assiette est ajout\u00e9e au-dessus des pr\u00e9c\u00e9dentes, et o\u00f9 l'assiette retir\u00e9e est syst\u00e9matiquement celle du sommet, un peu comme pour les tours de Hano\u00ef. On parle de m\u00e9thode DEPS pour dernier entr\u00e9, premier sorti, ou en anglais LIFO pour last in, first out.  </li> </ul> <p> </p> Exemple de pile : une pile d'assiettes.Source : ZoneNSI <ul> <li>Dans une structure de file (en anglais queue), chaque op\u00e9ration de retrait retire l'\u00e9l\u00e9ment qui avait \u00e9t\u00e9 ajout\u00e9 le premier. Par exemple : une file d'attente, dans laquelle des personnes arrivent \u00e0 tour de r\u00f4le, patientent, et sont servies dans leur ordre d'arriv\u00e9e. On parle ici de m\u00e9thode PEPS pour premier entr\u00e9, premier sorti, ou en anglais FIFO pour first in, first out.  </li> </ul> <p> </p> Exemple de file : une file d'attente.Source : ZoneNSI <p>Chacune de ces deux structures (pile et file) poss\u00e8de une interface proposant au minimum les op\u00e9rations suivantes :</p> <ul> <li>cr\u00e9er une structure initialement vide,</li> <li>tester si une structure est vide,</li> <li>ajouter un \u00e9l\u00e9ment \u00e0 une structure,</li> <li>retirer et obtenir un \u00e9l\u00e9ment d'une structure.</li> </ul> <p>Par ailleurs, tout comme dans le cas des listes cha\u00een\u00e9es, il est pr\u00e9f\u00e9rable (pour une question de logique) que les piles et les files soient des structures homog\u00e8nes, c'est-\u00e0-dire que tous les \u00e9l\u00e9ments stock\u00e9s soient de m\u00eame type.</p> <p>Le plus souvent, les structures de pile et de file sont consid\u00e9r\u00e9es mutables : chaque op\u00e9ration d'ajout ou de retrait d'un \u00e9l\u00e9ment modifie directement la pile ou la file sur laquelle elle est appliqu\u00e9e. Cela \u00e9vite, dans le cas d'un retrait (d\u00e9pilement pour une pile ou d\u00e9filement pour une file) notamment, d'avoir \u00e0 renvoyer \u00e0 la fois l'\u00e9l\u00e9ment retir\u00e9 et la pile apr\u00e8s d\u00e9pilement.</p> <p>On peut \u00e9galement ajouter des op\u00e9rations suppl\u00e9mentaires \u00e0 nos structures, comme par exemple :</p> <ul> <li>obtenir le nombre d'\u00e9l\u00e9ments contenus dans une structure,</li> <li>vider une structure,</li> <li>obtenir un \u00e9l\u00e9ment d'une structure (celui qu'on aurait obtenu avec l'op\u00e9ration de retrait), mais sans le retirer,</li> <li>etc.</li> </ul> <p>Comme dans le cas des listes cha\u00een\u00e9es, il y a plusieurs fa\u00e7ons d'impl\u00e9menter les structures de piles et de files. Mais avant d'\u00e9tudier les impl\u00e9mentations possibles, nous allons d\u00e9finir un interface (ou un type abstrait) permettant de d\u00e9finir les op\u00e9rations \u00e9l\u00e9mentaires utilisables dans le cas d'une pile et d'une file.</p> <p>Type abstrait Pile</p> <p>Voici une mani\u00e8re de d\u00e9finir l'interface <code>Pile</code> repr\u00e9sentant une pile. Note : La notation \\(Pile[Element]\\) correspond \u00e0 une pile contenant des objets de type \\(Element\\).</p> <p>Utilise : Element, Entier, Booleen Op\u00e9rations fondamentales (primitives):</p> Op\u00e9ration Description \\(nouvelle\\_pile\\_vide :~\\rightarrow Pile~VIDE\\) Renvoie une nouvelle pile VIDE. \\(est\\_vide :~Pile \\rightarrow Booleen\\) Renvoie <code>True</code> si la pile donn\u00e9e est vide, <code>False</code> sinon. \\(empiler :~Pile[Element] \\times Element \\rightarrow \\emptyset\\) Ajoute un nouvel \u00e9l\u00e9ment donn\u00e9 au sommet d'une pile d'\u00e9l\u00e9ments donn\u00e9e. \\(depiler :~Pile[Element] \\rightarrow Element\\) Retire l'\u00e9l\u00e9ment au sommet de la pile NON VIDE donn\u00e9e, et renvoie cet \u00e9l\u00e9ment. <p>Voici quelques op\u00e9rations suppl\u00e9mentaires :</p> Op\u00e9ration Description \\(nombre\\_elements :~Pile[Elements] \\rightarrow Entier\\) Renvoie le nombre d'\u00e9l\u00e9ments que contient une pile donn\u00e9e. \\(vider :~Pile[Elements] \\rightarrow \\emptyset\\) Vide le contenu de la pile donn\u00e9e (supprime tous ses \u00e9l\u00e9ments). \\(obtenir\\_element :~Pile[Elements] \\rightarrow Element\\) Renvoie l'\u00e9l\u00e9ment au sommet de la pile donn\u00e9e, sans le retirer. <p>Type abstrait File</p> <p>Voici une mani\u00e8re de d\u00e9finir l'interface <code>File</code> repr\u00e9sentant une file. (\u00c0 compl\u00e9ter pour lundi 13/11/2023)</p> <p>Utilise : Element, Entier, Booleen Op\u00e9rations fondamentales (primitives):</p> Op\u00e9ration Description \\(nouvelle\\_file\\_vide :~\\rightarrow File~VIDE\\) Renvoie une nouvelle file VIDE. \\(est\\_vide :~File \\rightarrow Booleen\\) Renvoie <code>True</code> si la file donn\u00e9e est vide, <code>False</code> sinon. \\(enfiler :~File[Element] \\times Element \\rightarrow \\emptyset\\) Ajoute un nouvel \u00e9l\u00e9ment donn\u00e9 dans une file d'\u00e9l\u00e9ments donn\u00e9e. \\(defiler :~File[Element] \\rightarrow Element\\) Retire le premier \u00e9l\u00e9ment ajout\u00e9 \u00e0 la file NON VIDE donn\u00e9e, et renvoie cet \u00e9l\u00e9ment. <p>Voici quelques op\u00e9rations suppl\u00e9mentaires :</p> Op\u00e9ration Description \\(nombre\\_elements :~File[Elements] \\rightarrow Entier\\) Renvoie le nombre d'\u00e9l\u00e9ments que contient une file donn\u00e9e. \\(vider :~File[Elements] \\rightarrow \\emptyset\\) Vide le contenu de la file donn\u00e9e (supprime tous ses \u00e9l\u00e9ments). \\(obtenir\\_element :~File[Elements] \\rightarrow Element\\) Renvoie le premier \u00e9l\u00e9ment ajout\u00e9 \u00e0 la file donn\u00e9e, sans le retirer. <p>Type abstrait \\(\\ne\\) impl\u00e9mentation</p> <p>On rappelle qu'il faut faire la distinction entre l'interface et les impl\u00e9mentations. On ne sp\u00e9cifie ici pas comment les donn\u00e9es sont repr\u00e9sent\u00e9es, ni comment les op\u00e9rations sont impl\u00e9ment\u00e9es.</p> <p>Ces d\u00e9finitions abstraites du type Pile et File, bien qu'\u00e9tant mutables (on modifie directement la structure plut\u00f4t que d'en renvoyer une nouvelle), n'emp\u00eachent toutefois pas de proposer par la suite des impl\u00e9mentations non mutables, tant que celles-ci suivent les op\u00e9rations d\u00e9finies.</p>"},{"location":"terminale/pilesfiles/cours_corr/#exemple-dutilisation-dune-pile","title":"Exemple d'utilisation d'une pile","text":"<p>Un exemple d'utilisation d'une pile : les op\u00e9rations d'acc\u00e8s \u00e0 une nouvelle page web et de retour en arri\u00e8re (retour \u00e0 la derni\u00e8re page web) sur un navigateur.</p> <p>On pourrait, en Python, d\u00e9finir ces op\u00e9rations de cette mani\u00e8re :</p> <pre><code>adresse_courante = \"\"\nadresses_precedentes = nouvelle_pile_vide()\n\ndef aller_a(adresse_cible):\n    adresses_precedentes.empiler(adresse_courante)\n    adresse_courante = adresse_cible\n\ndef retour():\n    if not adresses_precedentes.est_vide():\n        adresse_courante = adresses_precedentes.depiler()\n</code></pre>"},{"location":"terminale/pilesfiles/cours_corr/#implementations-dune-pile","title":"Impl\u00e9mentations d'une pile","text":"<p>On fait le choix d'impl\u00e9menter notre pile en utilisant la POO (programmation orient\u00e9e objet). On va donc cr\u00e9er une classe <code>Pile</code> permettant de repr\u00e9senter une pile.</p> <p>Par ailleurs, tout comme dans notre d\u00e9finition abstraite pr\u00e9c\u00e9dente, on choisit de travailler avec une structure mutable. Cela signifie que les op\u00e9rations <code>empiler</code> et <code>depiler</code> modifieront directement la pile, plut\u00f4t que de renvoyer une nouvelle pile.</p>"},{"location":"terminale/pilesfiles/cours_corr/#avec-une-liste-python","title":"Avec une liste Python","text":"<p>Nous allons donc cr\u00e9er une classe <code>Pile</code> pour repr\u00e9senter notre pile, mais il nous faut \u00e9galement une autre structure de donn\u00e9es pour stocker les \u00e9l\u00e9ments de la pile. Pour cela, nous allons dans un premier temps utiliser une liste Python.</p> <p>Ainsi, notre classe <code>Pile</code> contiendra un seul attribut, que nous nommerons <code>contenu</code>, qui sera donc de type <code>list</code> et qui contiendra tous les \u00e9l\u00e9ments de la pile. Pour une question d'homog\u00e9n\u00e9it\u00e9, notre pile ne contiendra que des nombres entiers (type <code>int</code>).</p> <p>Ainsi :</p> <ul> <li>l'op\u00e9ration <code>empiler</code>, permettant d'ajouter un nouvel \u00e9l\u00e9ment au sommet de la pile, ajoutera cet \u00e9l\u00e9ment \u00e0 la fin de la liste Python de l'attribut <code>contenu</code>,</li> <li>l'op\u00e9ration <code>depiler</code>, permettant de retirer et de renvoyer l'\u00e9l\u00e9ment situ\u00e9 au sommet de la pile, retirera et renverra l'\u00e9l\u00e9ment situ\u00e9 \u00e0 la fin de la liste Python de l'attribut <code>contenu</code>.</li> </ul> <p>Voici le squelette de notre classe <code>Pile</code> :</p> <pre><code>class Pile:\n\n    def __init__(self: 'Pile'):\n        ''' Constructeur de la classe Pile. '''\n\n        self.contenu = []\n\n    # Op\u00e9rations de base\n\n    def est_vide(self: 'Pile') -&gt; bool:\n        ''' Renvoie True si la pile est vide, False sinon. '''\n\n        pass\n\n    def empiler(self: 'Pile', elt: int) -&gt; None:\n        ''' Empile un \u00e9l\u00e9ment donn\u00e9 au sommet de la pile. '''\n\n        pass\n\n    def depiler(self: 'Pile') -&gt; None:\n        ''' D\u00e9piler l'\u00e9l\u00e9ment situ\u00e9 au sommet de la pile NON VIDE. '''\n\n        pass\n\n    # Autres op\u00e9rations\n\n    def nombre_elements(self: 'Pile') -&gt; int:\n        ''' Renvoie le nb d'\u00e9l\u00e9ments de la pile. '''\n\n        pass\n\n    def vider(self: 'Pile') -&gt; None:\n        ''' Vide la pile (supprime tous ses \u00e9l\u00e9ments). '''\n\n        pass\n\n    def obtenir_element(self: 'Pile') -&gt; int:\n        ''' Renvoie l'\u00e9l\u00e9ment au sommet de la pile NON VIDE SANS LE SUPPRIMER. '''\n\n        pass\n\n    '''\n</code></pre> <p>Cette classe <code>Pile</code> contient :</p> <ul> <li>un attribut :<ul> <li><code>contenu</code>, de type <code>list</code>, contenant les \u00e9l\u00e9ments (en l'occurence des entiers, de type <code>int</code>) contenus dans la pile.</li> </ul> </li> <li>trois m\u00e9thodes repr\u00e9sentant les op\u00e9rations de base :<ul> <li><code>est_vide</code> : pr\u00e9dicat qui renvoie <code>True</code> si la pile est vide, et <code>False</code> sinon,</li> <li><code>empiler</code> : permet d'ajouter un nouvel \u00e9l\u00e9ment <code>elt</code> donn\u00e9 au sommet de la pile,</li> <li><code>depiler</code> : permet de retirer et de renvoyer l'\u00e9l\u00e9ment situ\u00e9 au sommet de la pile.</li> </ul> </li> <li>trois m\u00e9thodes repr\u00e9sentant d'autres op\u00e9rations utiles :<ul> <li><code>nombre_elements</code> : renvoie le nombre d'\u00e9l\u00e9ments de la pile,</li> <li><code>vider</code> : retire tous les \u00e9l\u00e9ments de la pile,</li> <li><code>obtenir_element</code> : renvoie l'\u00e9l\u00e9ment situ\u00e9 au sommet de la pile, sans le retirer de la pile.</li> </ul> </li> </ul> <p>Annotations de type</p> <p>On a ici utilis\u00e9 des annotations de type, par exemple : <code>def empiler(self: 'Pile', elt: int) -&gt; None</code> : les annotations utilis\u00e9es permettent d'indiquer que le param\u00e8tre <code>self</code> est de type <code>Pile</code>, que le param\u00e8tre <code>elt</code> est de type <code>int</code>, et que la m\u00e9thode ne renvoie rien (<code>None</code>).</p> <p>Les annotations de type servent juste d'indications et n'ont aucun effet sur l'ex\u00e9cution du programme.</p> Voir l'impl\u00e9mentation compl\u00e8te <p>Voici finalement notre impl\u00e9mentation :</p> <pre><code>class Pile:\n\n    def __init__(self: 'Pile'):\n        ''' Constructeur de la classe Pile. '''\n\n        self.contenu = []\n\n    # Op\u00e9rations de base\n\n    def est_vide(self: 'Pile') -&gt; bool:\n        ''' Renvoie True si la pile est vide, False sinon. '''\n\n        return not self.contenu\n\n    def empiler(self: 'Pile', elt: int) -&gt; None:\n        ''' Empile un \u00e9l\u00e9ment donn\u00e9 au sommet de la pile. '''\n\n        self.contenu.append(elt)\n\n    def depiler(self: 'Pile') -&gt; None:\n        ''' D\u00e9piler l'\u00e9l\u00e9ment situ\u00e9 au sommet de la pile NON VIDE. '''\n\n        if self.est_vide():\n            raise ValueError(\"Erreur : Impossible de d\u00e9piler sur une pile vide !\")\n        return self.contenu.pop()\n\n    # Autres op\u00e9rations\n\n    def nombre_elements(self: 'Pile') -&gt; int:\n        ''' Renvoie le nb d'\u00e9l\u00e9ments de la pile. '''\n\n        return len(self.contenu)\n\n    def vider(self: 'Pile') -&gt; None:\n        ''' Vide la pile (supprime tous ses \u00e9l\u00e9ments). '''\n\n        self.contenu = []\n\n    def obtenir_element(self: 'Pile') -&gt; int:\n        ''' Renvoie l'\u00e9l\u00e9ment au sommet de la pile NON VIDE SANS LE SUPPRIMER. '''\n\n        if self.est_vide():\n            raise ValueError(\"Erreur : La pile est vide !\")\n        return self.contenu[self.nombre_elements() - 1]\n</code></pre>"},{"location":"terminale/pilesfiles/cours_corr/#avec-une-liste-chainee","title":"Avec une liste cha\u00een\u00e9e","text":"<p>On va cette fois utiliser une liste cha\u00een\u00e9e pour repr\u00e9senter le contenu de notre <code>Pile</code>. On va pour cela r\u00e9-utiliser notre classe <code>Cellule</code> pr\u00e9sent\u00e9e dans le cours sur les listes cha\u00een\u00e9es.</p> <p>Impl\u00e9mentation des listes cha\u00een\u00e9es</p> <p>Avec notre choix d'impl\u00e9mentation des listes cha\u00een\u00e9es, une liste cha\u00een\u00e9e est soit :</p> <ul> <li>une liste cha\u00een\u00e9e VIDE repr\u00e9sent\u00e9e par l'objet <code>None</code>,</li> <li>une liste cha\u00een\u00e9e NON VIDE repr\u00e9sent\u00e9e par une instance de la classe <code>Cellule</code> de la mani\u00e8re suivante : <code>Cellule(&lt;premier \u00e9l\u00e9ment&gt;, &lt;cellule suivante&gt;)</code>.</li> </ul> <p>Initialement, l'attribut <code>contenu</code> sera donc \u00e9gal \u00e0 <code>None</code>, repr\u00e9sentant une liste cha\u00een\u00e9e vide.</p> <p>On proc\u00e9dera de la mani\u00e8re suivante :</p> <ul> <li>l'op\u00e9ration <code>empiler</code>, permettant d'ajouter un nouvel \u00e9l\u00e9ment au sommet de la pile, ajoutera cet \u00e9l\u00e9ment au d\u00e9but de la liste cha\u00een\u00e9e de l'attribut <code>contenu</code>,</li> <li>l'op\u00e9ration <code>depiler</code>, permettant de retirer et de renvoyer l'\u00e9l\u00e9ment situ\u00e9 au sommet de la pile, retirera et renverra l'\u00e9l\u00e9ment situ\u00e9 au d\u00e9but de la liste cha\u00een\u00e9e de l'attribut <code>contenu</code>.</li> </ul> <p>En effet, ajouter les \u00e9l\u00e9ments \u00e0 la fin de la liste cha\u00een\u00e9e serait co\u00fbteux car, \u00e0 chaque empilement ou d\u00e9pilement, il faudrait parcourir enti\u00e8rement la liste pour aller chercher la derni\u00e8re cellule ! Alors qu'en ajoutant les \u00e9l\u00e9ments au d\u00e9but de la liste cha\u00een\u00e9e, on a pas de parcours \u00e0 effectuer.</p> <p>Voici le squelette de notre classe <code>Pile</code> :</p> <pre><code>class Cellule:\n    ''' Une cellule d'une liste cha\u00een\u00e9e. '''\n\n    def __init__(self, v, s):\n        self.valeur = v  # Valeur contenue dans la cellule\n        self.suivante = s  # Cellule suivante\n\nclass Pile:\n\n    def __init__(self: 'Pile'):\n        ''' Constructeur de la classe Pile. '''\n\n        self.contenu = None\n\n    # Op\u00e9rations de base\n\n    def est_vide(self: 'Pile') -&gt; bool:\n        ''' Renvoie True si la pile est vide, False sinon. '''\n\n        pass\n\n    def empiler(self: 'Pile', elt: int) -&gt; None:\n        ''' Empile un \u00e9l\u00e9ment donn\u00e9 au sommet de la pile. '''\n\n        pass\n\n    def depiler(self: 'Pile') -&gt; None:\n        ''' D\u00e9piler l'\u00e9l\u00e9ment situ\u00e9 au sommet de la pile NON VIDE. '''\n\n        pass\n\n    # Autres op\u00e9rations\n\n    def nombre_elements(self: 'Pile') -&gt; int:\n        ''' Renvoie le nb d'\u00e9l\u00e9ments de la pile. '''\n\n        pass\n\n    def vider(self: 'Pile') -&gt; None:\n        ''' Vide la pile (supprime tous ses \u00e9l\u00e9ments). '''\n\n        pass\n\n    def obtenir_element(self: 'Pile') -&gt; int:\n        ''' Renvoie l'\u00e9l\u00e9ment au sommet de la pile NON VIDE SANS LE SUPPRIMER. '''\n\n        pass\n    '''\n</code></pre> Voir l'impl\u00e9mentation compl\u00e8te <pre><code>class Cellule:\n    ''' Une cellule d'une liste cha\u00een\u00e9e. '''\n\n    def __init__(self, v, s):\n        self.valeur = v  # Valeur contenue dans la cellule\n        self.suivante = s  # Cellule suivante\n\nclass Pile:\n\n    def __init__(self: 'Pile'):\n        ''' Constructeur de la classe Pile. '''\n\n        self.contenu = None\n\n    # Op\u00e9rations de base\n\n    def est_vide(self: 'Pile') -&gt; bool:\n        ''' Renvoie True si la pile est vide, False sinon. '''\n\n        return self.contenu is None\n\n    def empiler(self: 'Pile', elt: int) -&gt; None:\n        ''' Empile un \u00e9l\u00e9ment donn\u00e9 au sommet de la pile. '''\n\n        self.contenu = Cellule(elt, self.contenu)\n\n    def depiler(self: 'Pile') -&gt; None:\n        ''' D\u00e9piler l'\u00e9l\u00e9ment situ\u00e9 au sommet de la pile NON VIDE. '''\n\n        if self.est_vide():\n            raise ValueError(\"Erreur : Impossible de d\u00e9piler sur une pile vide !\")\n        res = self.contenu.valeur\n        self.contenu = self.contenu.suivante\n        return res\n\n    # Autres op\u00e9rations\n\n    def nombre_elements(self: 'Pile') -&gt; int:\n        ''' Renvoie le nb d'\u00e9l\u00e9ments de la pile. '''\n\n        res = 0\n        c = self.contenu\n        while c is not None:\n            res += 1\n            c = c.suivante\n        return res\n\n    def vider(self: 'Pile') -&gt; None:\n        ''' Vide la pile (supprime tous ses \u00e9l\u00e9ments). '''\n\n        self.contenu = None\n\n    def obtenir_element(self: 'Pile') -&gt; int:\n        ''' Renvoie l'\u00e9l\u00e9ment au sommet de la pile NON VIDE SANS LE SUPPRIMER. '''\n\n        if self.est_vide():\n            raise ValueError(\"Erreur : La pile est vide !\")\n        return self.contenu.valeur\n</code></pre>"},{"location":"terminale/pilesfiles/cours_corr/#implementations-dune-file","title":"Impl\u00e9mentations d'une file","text":"<p>Comme pr\u00e9c\u00e9demment, on fait le choix d'impl\u00e9menter notre file en utilisant la POO. On va donc cr\u00e9er une classe <code>File</code> permettant de repr\u00e9senter une file.</p> <p>Ici aussi, on travaillera avec une structure mutable. Cela signifie que les op\u00e9rations <code>enfiler</code> et <code>defiler</code> modifieront directement la file, plut\u00f4t que de renvoyer une nouvelle file.</p>"},{"location":"terminale/pilesfiles/cours_corr/#avec-une-liste-python_1","title":"Avec une liste Python","text":"<p>Ici, on repr\u00e9sentera le contenu de la file avec une liste Python (qui sera affect\u00e9e \u00e0 un attribut <code>contenu</code>, comme pour notre premi\u00e8re impl\u00e9mentation des piles).</p> <p>Cette fois, les \u00e9l\u00e9ments ajout\u00e9s \u00e0 la file (enfil\u00e9s) seront ajout\u00e9s d'un c\u00f4t\u00e9 de la liste Python de l'attribut <code>contenu</code>, et les \u00e9l\u00e9ments d\u00e9fil\u00e9s seront retir\u00e9s de l'autre c\u00f4t\u00e9 de la liste Python de l'attribut <code>contenu</code>, puisque le premier \u00e9l\u00e9ment entr\u00e9 est le premier sorti. On pourra proc\u00e9der comme suit :</p> <ul> <li>l'op\u00e9ration <code>enfiler</code>, permettant d'ajouter un nouvel \u00e9l\u00e9ment \u00e0 la file, ajoutera cet \u00e9l\u00e9ment \u00e0 la fin de la liste Python de l'attribut <code>contenu</code>,</li> <li>l'op\u00e9ration <code>defiler</code>, permettant de retirer et de renvoyer un \u00e9l\u00e9ment de la file, retirera et renverra l'\u00e9l\u00e9ment situ\u00e9 au d\u00e9but de la liste Python de l'attribut <code>contenu</code>.</li> </ul> Voir l'impl\u00e9mentation compl\u00e8te <pre><code>class File:\n    def __init__(self):\n        ''' Constructeur de la classe File.\n        :param contenu: (list[int]) une liste d'entiers '''\n\n        self.contenu = []\n\n    def est_vide(self) -&gt; bool:\n        ''' Renvoie True si la file est vide, False sinon.'''\n\n        return not self.contenu\n\n    def enfiler(self, elt) -&gt; None:\n        ''' Enfile un \u00e9l\u00e9ment dans la file. '''\n\n        self.contenu.append(elt)\n\n\n    def defiler(self) -&gt; int:\n        ''' D\u00e9file le premier \u00e9l\u00e9ment ajout\u00e9 \u00e0 la file, et le renvoie.\n        LEVER UNE ERREUR si la file est VIDE. '''\n\n        if self.est_vide():\n            raise ValueError(\"La liste ne doit pas \u00eatre vide\")\n        else:\n            return self.contenu.pop(0)\n\n    def nombre_elements(self) -&gt; int:\n        ''' Renvoie le nombre d'\u00e9l\u00e9ments de la file. '''\n\n        return len(self.contenu)\n\n    def vider(self) -&gt; None:\n        ''' Vide la file (supprime tous ses \u00e9l\u00e9ments). '''\n\n        self.contenu = []\n\n    def obtenir_element(self) -&gt; int:\n        ''' Renvoie le premier \u00e9l\u00e9ment ajout\u00e9 \u00e0 la file sans le supprimer. '''\n\n        if self.est_vide():\n            raise ValueError(\"La liste ne doit pas \u00eatre vide\")\n        else:\n            return self.contenu[0]\n</code></pre>"},{"location":"terminale/pilesfiles/cours_corr/#avec-une-liste-chainee_1","title":"Avec une liste cha\u00een\u00e9e","text":"<p>Cette fois, l'impl\u00e9mentation d'une file avec une liste cha\u00een\u00e9e diff\u00e8rera un petit peu de notre impl\u00e9mentation d'une pile.</p> <p>En effet, dans une pile, on ajoutait et retirait les \u00e9l\u00e9ments du m\u00eame c\u00f4t\u00e9 de la liste cha\u00een\u00e9e utilis\u00e9e pour stocker son contenu, puisque d\u00e9piler un \u00e9l\u00e9ment dans une pile consiste \u00e0 retirer le dernier \u00e9l\u00e9ment ajout\u00e9. L'op\u00e9ration <code>empiler</code> consistait donc \u00e0 ajouter un \u00e9l\u00e9ment en t\u00eate de la liste cha\u00een\u00e9e, et l'op\u00e9ration d\u00e9p`iler retirait l'\u00e9l\u00e9ment en t\u00eate de la liste cha\u00een\u00e9e.</p> <p>Ici, dans le cas d'une file, on devra ajouter les \u00e9l\u00e9ments d'un c\u00f4t\u00e9 de la liste cha\u00een\u00e9e, puis les retirer de l'autre c\u00f4t\u00e9 de la liste cha\u00een\u00e9e. Pour \u00e9viter d'effectuer des parcours de liste cha\u00een\u00e9e, qui sont co\u00fbteux, on impl\u00e9mentera notre classe <code>File</code> avec deux attributs :</p> <ul> <li>un attribut <code>tete</code> qui contiendra la r\u00e9f\u00e9rence de la cellule t\u00eate de la liste cha\u00een\u00e9e permettant de stocker les \u00e9l\u00e9ments de la file,</li> <li>un attribut <code>queue</code> qui contiendra la r\u00e9f\u00e9rence de la cellule queue de la liste cha\u00een\u00e9e permettant de stocker les \u00e9l\u00e9ments de la file.</li> </ul> <p>Ainsi :</p> <ul> <li>la m\u00e9thode <code>enfiler</code> de notre classe <code>File</code> ajoutera un \u00e9l\u00e9ment \u00e0 la queue de la liste cha\u00een\u00e9e,</li> <li>la m\u00e9thode <code>defiler</code> de notre classe <code>File</code> retirera l'\u00e9l\u00e9ment situ\u00e9 en t\u00eate de la liste cha\u00een\u00e9e.</li> </ul> Voir l'impl\u00e9mentation compl\u00e8te <pre><code>class Cellule:\n    ''' Impl\u00e9mentation d'une liste cha\u00een\u00e9e. '''\n\n    def __init__(self, v, s):\n        self.valeur = v  # valeur de la cellule\n        self.suivante = s  # cellule suivante\n\nclass File:\n\n    def __init__(self: 'File'):\n        # La liste cha\u00een\u00e9e ne contient initialement aucune cellule,\n        # donc la t\u00eate et la queue sont initialis\u00e9es \u00e0 None\n        self.tete = None\n        self.queue = None\n\n    def est_vide(self: 'File') -&gt; bool:\n        # Si la liste cha\u00een\u00e9e est vide, la t\u00eate et la queue contiennent None.\n        return self.tete is None\n\n    def enfiler(self: 'File', elt: int) -&gt; None:\n        a = Cellule(elt, None)  # on cr\u00e9e la nouvelle cellule que l'on ajoutera en queue de la liste cha\u00een\u00e9e\n        if self.est_vide():\n            # Si la liste cha\u00een\u00e9e est vide, la nouvelle cellule ajout\u00e9e\n            # sera alors \u00e0 la fois la cellule t\u00eate et la cellule queue.\n            self.tete = a\n        else:\n            # Sinon, on lie l'ancienne cellule queue de la liste cha\u00een\u00e9e \u00e0 notre nouvelle cellule.\n            self.queue.suivante = a\n        self.queue = a  # quoiqu'il en soit, la nouvelle cellule cr\u00e9\u00e9e devient la queue de la liste cha\u00een\u00e9e\n\n    def defiler(self: 'File') -&gt; int:\n        if self.est_vide():\n            # On ne peut pas d\u00e9filer sur une file vide, donc on l\u00e8ve une erreur.\n            raise IndexError(\"Impossible de d\u00e9filer sur une file vide !\")\n        j = self.tete.valeur  # on stocke la valeur de la cellule t\u00eate actuelle de la liste cha\u00een\u00e9e\n        self.tete = self.tete.suivante  # la nouvelle cellule t\u00eate est la cellule qui suit l'ancienne\n        if self.tete is None:  # si la nouvelle cellule t\u00eate est vide :\n            self.queue = None  # cela signifie que la liste cha\u00een\u00e9e est vide, donc la queue vaut aussi None\n        return j  # on renvoie la valeur de l'ancienne cellule t\u00eate que l'on avait stock\u00e9 dans j\n</code></pre>"},{"location":"terminale/pilesfiles/cours_corr/#exercices","title":"Exercices","text":"<p>Exercice 1</p> <p>On souhaite utiliser une pile pour v\u00e9rifier si une expression arithm\u00e9tique est bien parenth\u00e9s\u00e9e. \u00c9crire une fonction <code>est_bien_parenthesee(chaine)</code> qui renvoie <code>True</code> si l'expression est bien parenth\u00e9s\u00e9e, <code>False</code> sinon.</p> <p>Par exemple : <code>est_bien_parenthesee('(1 + 3) * (6 + 7)')</code> renverra <code>True</code>. <code>est_bien_parenthesee('(6 + (4 * 5) - (2 + 1)')</code> renverra <code>False</code>.</p> Correction exercice 1 <pre><code>def est_bien_parenthesee(chaine):\n    pile = Pile()\n    for c in chaine:\n        if c == \"(\":\n            pile.empiler(c)\n        elif c == \")\":\n            if pile.est_vide():\n                return False\n    return pile.est_vide()\n</code></pre> <p>Exercice 2</p> <p>L'\u00e9criture polonaise inverse des expressions arithm\u00e9tiques place l'op\u00e9rateur apr\u00e8s ses op\u00e9randes. Cette notation ne n\u00e9cessite aucune parenth\u00e8se ni aucune r\u00e8gle de priorit\u00e9. Ainsi, l'expression polonaise inverse d\u00e9crite par la cha\u00eene de caract\u00e8res <code>1 2 3 * + 4 *</code> d\u00e9signe l'expression traditionnellement not\u00e9e \\((1 + 2 \\times 3) \\times 4\\). </p> <p>La valeur d'une telle expression peut \u00eatre calcul\u00e9e facilement en utilisant une pile pour stocker les r\u00e9sultats interm\u00e9diaires. Pour cela, on observe un \u00e0 un les \u00e9l\u00e9ments de l'expression et on effectue les actions suivantes:</p> <ul> <li>si on voit un nombre, on le place sur la pile;</li> <li>si on voit un op\u00e9rateur binaire, on r\u00e9cup\u00e8re les deux nombres au sommet de la pile, on leur applique l'op\u00e9rateur, et on replace le r\u00e9sultat sur la pile.</li> </ul> <p>Si l'expression \u00e9tait bien \u00e9crite, il y a bien toujours deux nombres sur la pile lorsque l'on voit un op\u00e9rateur, et \u00e0 la fin du processus il reste exactement un nombre sur la pile, qui est le r\u00e9sultat.</p> <p>\u00c9crire une fonction prenant en param\u00e8tre une cha\u00eene de caract\u00e8res repr\u00e9sentant une expression en notation polonaise inverse compos\u00e9e d'additions et de multiplications de nombres entiers et renvoyant la valeur de cette expression. On supposera que les \u00e9l\u00e9ments de l'expression sont s\u00e9par\u00e9s par des espaces.</p> <p>Attention : cette fonction ne doit pas renvoyer de r\u00e9sultat si l'expression est mal \u00e9crite. </p> Correction exercice 2 <p>On it\u00e8re sur les \u00e9l\u00e9ments obtenus en d\u00e9coupant la cha\u00eene au niveau des espaces.  On isole d'abord les cas des op\u00e9rateurs, qui sont les plus faciles \u00e0 identifier, et on suppose que tout ce qui n'est pas <code>+</code> ou <code>*</code> est un entier (cette branche \u00e9chouera si on trouve encore autre chose dans l'expression).</p> <p>\u00c0 la fin, on d\u00e9pile le dernier \u00e9l\u00e9ment et on v\u00e9rifie que la pile est bien vide avant de renvoyer ce r\u00e9sultat. Si \u00e0 un moment donn\u00e9, il \u00e9tait impossible de d\u00e9piler, alors le programme aura de toute fa\u00e7on \u00e9chou\u00e9.</p> <pre><code>def eval_polonaise_inverse(s):\n    pile = Pile()\n    for e in s.split(\" \"):\n        if e == \"+\" or e == \"*\":\n            x = pile.depiler()\n            y = pile.depiler()\n            z = x + y if e == \"+\" else x * y\n            pile.empiler(z)\n        else:\n            pile.empiler(int(e))\n    res = pile.depiler()\n    assert pile.est_vide()\n    return res\n</code></pre>"},{"location":"terminale/poo/","title":"Programmation orient\u00e9e objet","text":""},{"location":"terminale/poo/#programmation-orientee-objet","title":"Programmation orient\u00e9e objet","text":"Liste des contenus Description Activit\u00e9 pr\u00e9liminaire D\u00e9couverte des classes \u00e0 travers une petite activit\u00e9. Cours POO Le cours sur la programmation orient\u00e9e objet. TP - Un jeu pok\u00e9mon TP - R\u00e9alisation d'un jeu de combats de pok\u00e9mons. Exercices Exercices sur la POO."},{"location":"terminale/poo/cours/","title":"Cours","text":"Sources <ul> <li>courspython</li> </ul>"},{"location":"terminale/poo/cours/#programmation-orientee-objet","title":"Programmation orient\u00e9e objet","text":""},{"location":"terminale/poo/cours/#introduction","title":"Introduction","text":"<p>Vous avez vu en premi\u00e8re diff\u00e9rentes mani\u00e8res du structurer des donn\u00e9es : avec des listes, des tuples, des dictionnaires... Tous ces types de donn\u00e9es de base sont des types natifs de Python. Il s'agit de classes (<code>int</code>, <code>float</code>, <code>str</code>, <code>NoneType</code>...) d\u00e9j\u00e0 d\u00e9finies dans la biblioth\u00e8que standard distribu\u00e9e avec Python.</p> <p>Lorsque vous d\u00e9finissez par un exemple un entier <code>42</code> :</p> <pre><code>nombre = 42\n</code></pre> <p>Vous cr\u00e9ez ici ce que l'on appelle une instance de la classe <code>int</code>, que l'on appelle \u00e9galement un objet. Un objet est une instance d'une classe.</p> <p>De m\u00eame, lorsque vous d\u00e9finissez une liste :</p> <pre><code>lst = [1,3,5]\n</code></pre> <p>Vous cr\u00e9ez ici une instance de la classe <code>list</code> de Python.</p> <p>La programmation orient\u00e9e objet (ou POO) est le paradigme de programmation le plus utilis\u00e9 du monde moderne. Des smartphones aux superordinateurs, des applications de toutes tailles utilisent ce paradigme de programmation. \u00c0 l'issu de ce cours, vous serez capable d'aller beaucoup plus loin dans la conception de vos programmes !</p>"},{"location":"terminale/poo/cours/#creer-une-classe","title":"Cr\u00e9er une classe","text":"<p>Imaginons que l'on souhaite cr\u00e9er une application num\u00e9rique demandant l\u2019utilisation de points rep\u00e9r\u00e9s par des coordonn\u00e9es dans un rep\u00e8re g\u00e9om\u00e9trique \u00e0 deux dimensions. Nous avons pour cela besoin d'au minimum 2 informations : les coordonn\u00e9es <code>x</code> et <code>y</code> de ce point.</p> <p>En utilisant les types de base inclus avec le langage Python, on pourrait repr\u00e9senter ce point par un tuple <code>(x, y)</code>, une liste <code>[x, y]</code>, ou enocre un dictionnaire <code>{'x': x , 'y': y}</code>.'</p> <p>Gr\u00e2ce \u00e0 la programmation orient\u00e9e objet (POO), nous allons cr\u00e9er une nouvelle structure de donn\u00e9es \u00e0 l'aide d'une nouvelle classe que l'on appellera <code>Point</code> :</p> <pre><code>class Point:\n    ''' D\u00e9finition d'un point g\u00e9om\u00e9trique. '''\n    pass\n</code></pre> <p>Convention en Python</p> <p>Par convention, le nom identifiant une classe (qu\u2019on appelle aussi son identifiant) d\u00e9bute par une majuscule. Ici <code>Point</code> d\u00e9bute par un P majuscule.</p> <p>Une classe d\u00e9finit des attributs et des m\u00e9thodes :</p> <ul> <li>Les attributs sont les propri\u00e9t\u00e9s qui caract\u00e9riseront nos objets de type <code>Point</code>. Ici par exemple, on pourra cr\u00e9er deux attributs :</li> <li>Un attribut <code>x</code> : La coordonn\u00e9e en abscisse du point.</li> <li>Un attribut <code>y</code> : La coordonn\u00e9e en ordonn\u00e9e du point.</li> <li>Les m\u00e9thodes sont des fonctions d\u00e9finies \u00e0 l'int\u00e9rieur de notre classe et qui permettront d'effectuer des actions sur nos objets de type <code>Point</code>.</li> </ul>"},{"location":"terminale/poo/cours/#affectation-a-une-variable-de-la-reference-a-un-objet","title":"Affectation \u00e0 une variable de la r\u00e9f\u00e9rence \u00e0 un objet","text":"<p>Nous avons d\u00e9fini notre classe <code>Point</code>. Pour cr\u00e9er une instance de cette classe, c'est-\u00e0-dire un objet de type <code>Point</code>, il suffit de saisir :</p> <pre><code>Point()\n</code></pre> <p>Nous pouvons d\u00e8s maintenant utiliser la classe <code>Point</code> pour cr\u00e9er des objets de ce type, par instanciation. Pour cr\u00e9er un nouvel objet et stocker la r\u00e9f\u00e9rence \u00e0 cet objet dans la variable <code>p</code> :</p> <pre><code>p = Point()\n</code></pre> <p>On peut v\u00e9rifier \u00e0 quelle adresse m\u00e9moire est stock\u00e9 notre objet :</p> <pre><code>&gt;&gt;&gt; print(p)\n&lt;__main__.Point object at 0x7ff9c2f838d0&gt;\n</code></pre> <p>Le message renvoy\u00e9 par Python indique que <code>p</code> contient une r\u00e9f\u00e9rence \u00e0 une instance de la classe <code>Point</code>, qui est d\u00e9finie elle-m\u00eame au niveau principal du programme. Elle est situ\u00e9e dans un emplacement bien d\u00e9fini de la m\u00e9moire vive, dont l\u2019adresse appara\u00eet ici en notation hexad\u00e9cimale.</p> <p>On peut cr\u00e9er plusieurs points (c'est-\u00e0-dire plusieurs instances de la classe <code>Point</code>) :</p> <pre><code>p1 = Point()\np2 = Point()\n</code></pre> <p>Nous avons ici 2 instances de la classe <code>Point</code> (soit 2 objets) :</p> <ul> <li>la premi\u00e8re \u00e0 laquelle on fait r\u00e9f\u00e9rence au moyen de la variable <code>p1</code>,</li> <li>la seconde \u00e0 laquelle on fait r\u00e9f\u00e9rence au moyen de la variable <code>p2</code>.</li> </ul> <pre><code>&gt;&gt;&gt; print(p1)\n&lt;__main__.Point object at 0x7ff9c2f83950&gt;\n&gt;&gt;&gt; print(p2)\n&lt;__main__.Point object at 0x7ff9c2f839d0&gt;\n</code></pre>"},{"location":"terminale/poo/cours/#definir-les-attributs","title":"D\u00e9finir les attributs","text":"<p>On peut d\u00e9finir nos attributs de la mani\u00e8re suivante :</p> <pre><code>class Point:\n    \"Definition d'un point geometrique\"\n    pass\n\np = Point()\np.x = 1\np.y = 2\n</code></pre> <p>On peut afficher les valeurs de ces attributs :</p> <pre><code>&gt;&gt;&gt; print(\"p : x =\", p.x, \"y =\", p.y)\np : x = 1 y = 2\n</code></pre> <p>Il faut bien faire la distinction entre variable et objet :</p> <pre><code>class Point:\n    \"Definition d'un point geometrique\"\n\na = Point()\na.x = 1\na.y = 2\nb = a\nprint(\"a : x =\", a.x, \"y =\", a.y)\nprint(\"b : x =\", b.x, \"y =\", b.y)\na.x = 3\na.y = 4\nprint(\"a : x =\", a.x, \"y =\", a.y)\nprint(\"b : x =\", b.x, \"y =\", b.y)\n</code></pre> <p>Visualiser sur Python Tutor</p> <p>Les variables <code>a</code> et <code>b</code> font ici r\u00e9f\u00e9rence au m\u00eame objet. En effet, lors de l\u2019affectation <code>b = a</code>, on met dans la variable <code>b</code> la r\u00e9f\u00e9rence contenue dans la variable <code>a</code>. Donc, toute modification des valeurs des attributs de l\u2019objet dont la r\u00e9f\u00e9rence est contenue dans <code>a</code> provoque une modification pour <code>b</code>.</p> <p>Attributs sp\u00e9ciaux</p> <p>Il existe des attributs sp\u00e9ciaux qui sont pr\u00e9d\u00e9finis, on les reconna\u00eet car ils sont pr\u00e9c\u00e9d\u00e9s et suivis par deux underscores <code>__</code>. un attribut pr\u00e9d\u00e9fini <code>__doc__</code> permet de r\u00e9cup\u00e9rer la documentation associ\u00e9e \u00e0 notre classe :</p> <pre><code>&gt;&gt;&gt; print(p.__doc__)\nDefinition d'un point geometrique\n</code></pre>"},{"location":"terminale/poo/cours/#definir-les-methodes","title":"D\u00e9finir les m\u00e9thodes","text":"<p>Une m\u00e9thode est une fonction d\u00e9finie \u00e0 l'int\u00e9rieur d'une classe.</p> <p>Par exemple, si l'on reprend notre classe <code>Point</code>, on peut par exemple cr\u00e9er une m\u00e9thode permettant de modifier les attributs <code>x</code> et <code>y</code> en y ajoutant respectivement une valeur <code>dx</code> et <code>dy</code> donn\u00e9es.</p> <pre><code>class Point:\n    \"Definition d'un point geometrique\"\n\n    def deplacer(self, dx, dy):\n        self.x = self.x + dx\n        self.y = self.y + dy\n</code></pre> <p>Si l'on veut appeler cette m\u00e9thode, on proc\u00e9dera comme suit :</p> <pre><code>a = Point()\na.x = 1  # initialiser l'attribut x \u00e0 1\na.y = 2  # initialiser l'attribut y \u00e0 2\nprint(\"a : x =\", a.x, \"y =\", a.y)\na.deplacer(4, 6)  # Appel de la m\u00e9thode deplacer de la classe Point\nprint(\"a : x =\", a.x, \"y =\", a.y)\n</code></pre> <p>Visualiser sur Python Tutor</p> <p>Pour d\u00e9finir une m\u00e9thode, il faut :</p> <ul> <li>indiquer son nom (ici <code>deplace()</code>).</li> <li>indiquer les arguments entre des parenth\u00e8ses. Le premier argument d\u2019une m\u00e9thode doit \u00eatre <code>self</code>.</li> </ul> <p>Pour acc\u00e9der aux m\u00e9thodes d\u2019un objet, on indique :</p> <ul> <li>le nom de la variable qui fait r\u00e9f\u00e9rence \u00e0 cet objet</li> <li>un point</li> <li>le nom de la m\u00e9thode</li> </ul> <p>Le param\u00e8tre <code>self</code></p> <p>Lors d'un appel \u00e0 une m\u00e9thode, on ne passe pas d'argument pour le param\u00e8tre <code>self</code>, car la valeur qu'il prend est la r\u00e9f\u00e9rence \u00e0 l\u2019objet. Lors de l'appel, il y a donc toujours un param\u00e8tre de moins que lors de la d\u00e9finition de la m\u00e9thode.</p>"},{"location":"terminale/poo/cours/#le-constructeur","title":"Le constructeur","text":"<p>Jusqu'ici, nous avons d\u00e9fini manuellement les attributs des instances de notre classe <code>Point</code>. Si l'on cr\u00e9e plusieurs objets, nous sommes contraints de d\u00e9finir ces attributs pour chaque objet, ce qui peut \u00eatre un petit peu r\u00e9barbatif.</p> <p>Il existe une solution bien plus pratique pour automatiquement d\u00e9finir des attributs \u00e0 chaque cr\u00e9ation d'un nouvel objet : Le constructeur.</p> <p>Il s'agit d'une m\u00e9thode sp\u00e9ciale, nomm\u00e9e <code>__init__</code>, appel\u00e9e \u00e0 chaque cr\u00e9ation d'un objet.</p> <p>Les m\u00e9thodes sp\u00e9ciales</p> <p>Les m\u00e9thodes sp\u00e9ciales, ou m\u00e9thodes magiques, comme <code>__init__</code>, poss\u00e8dent toutes un nom commen\u00e7ant par deux underscores et finissant par deux underscores. Comme autres m\u00e9thodes sp\u00e9ciales, on peut citer :</p> <ul> <li><code>__len__</code> : La valeur renvoy\u00e9e par cette m\u00e9thode peut \u00eatre obtenue en appelant <code>len(objet)</code>, o\u00f9 <code>objet</code> est une instance d'une classe contenant la m\u00e9thode <code>__len__</code>. G\u00e9n\u00e9ralement, <code>len</code> fait r\u00e9f\u00e9rence \u00e0 une longueur (si l'on a une classe <code>Liste</code> par exemple, cela pourrait permettre d'obtenir la longueur d'une liste.)</li> <li><code>__str__</code> : La valeur renvoy\u00e9e par cette m\u00e9thode, g\u00e9n\u00e9ralement une cha\u00eene de caract\u00e8res, sera affich\u00e9e lors d'un appel \u00e0 <code>print(objet)</code>, o\u00f9 <code>objet</code> est une instance d'une classe contenant la m\u00e9thode <code>__str__</code>. C'est une m\u00e9thode permettant de g\u00e9rer un affichage textuel d'un objet.</li> <li><code>__eq__</code> : Cette m\u00e9thode sp\u00e9ciale est appel\u00e9e lorsque l'on compare deux objets avec un op\u00e9rateur de comparaison <code>==</code>. Il existe \u00e9galement <code>__ne__</code> pour l'op\u00e9rateur <code>!=</code>, <code>__le__</code> pour <code>&lt;=</code>, <code>__ge__</code> pour <code>&gt;=</code>, etc.</li> <li>Il existe \u00e9norm\u00e9ment d'autres m\u00e9thodes sp\u00e9ciales, comme <code>__hash__</code>, <code>__bool__</code>, <code>__contains__</code>...</li> </ul> <p>Voici une nouvelle d\u00e9finition de notre classe <code>Point</code> avec notre constructeur :</p> <pre><code>class Point:\n    def __init__(self):\n        self.x = 0  # initialiser la position en x \u00e0 0\n        self.y = 0  # initialiser la position en y \u00e0 0\n</code></pre> <p>Ici, le constructeur ne prend aucun param\u00e8tre en dehors du param\u00e8tre <code>self</code> (qui est obligatoire pour toutes les m\u00e9thodes). Lors de la cr\u00e9ation d'un objet, deux attributs <code>x</code> et <code>y</code> sont initialis\u00e9s :</p> <pre><code>&gt;&gt;&gt; p = Point()\n&gt;&gt;&gt; p.x\n0\n&gt;&gt;&gt; p.y\n0\n</code></pre> <p>On peut ajouter d'autres param\u00e8tres \u00e0 notre constructeur :</p> <pre><code>class Point:\n    def __init__(self, x, y):\n        self.x = x  # initialiser la position en x \u00e0 0\n        self.y = y  # initialiser la position en y \u00e0 0\n</code></pre> <p>On peut sans probl\u00e8me avoir des param\u00e8tres qui portent les m\u00eames noms que les attributs, car les deux ne sont pas dans le m\u00eame espace de nom. Les param\u00e8tres sont des variables locales \u00e0 la fonction, tandis que les attributs de l'objet appartiennent \u00e0 l'espace de nom de l'instance.</p> <p>Il est \u00e9galement possible de faire en sorte que des param\u00e8tres soient optionnels, en leur attribuant une valeur par d\u00e9faut :</p> <pre><code>class Point:\n    def __init__(self, x = 0, y = 0):\n        self.x = x  # initialiser la position en x \u00e0 0\n        self.y = y  # initialiser la position en y \u00e0 0\n</code></pre> <p>Param\u00e8tres optionnels</p> <p>Les param\u00e8tres optionnels d'une fonction ou d'une m\u00e9thode doivent toujours \u00eatre plac\u00e9s en dernier. Par ailleurs, lors de l'appel d'une fonction, on peut nommer les param\u00e8tres pour lesquels on souhaite entrer une valeur.</p> <p>Par exemple :</p> <pre><code>def generer_liste(max, min = 0, pas = 1):\n    return list(range(min, max + 1, pas))\n</code></pre> <p>On pourrait appeler cette fonction de plusieurs mani\u00e8res, par exemple :</p> <pre><code>&gt;&gt;&gt; generer_liste(10)\n&gt;&gt;&gt; generer_liste(15, 5, 3)\n&gt;&gt;&gt; generer_liste(10, pas = 2)\n&gt;&gt;&gt; generer_liste(10, pas = 2, min = 5)\n</code></pre> <p>Voici une nouvelle version de notre classe <code>Point</code> incluant le constructeur et la m\u00e9thode <code>deplacer</code>, n'h\u00e9sitez pas \u00e0 ex\u00e9cuter ce code et \u00e0 le modifier \u00e0 votre guise :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>class Point:bksl-nl    def py-undpy-undinitpy-undpy-und(self, x = 0, y = 0):bksl-nl        self.x = x  # initialiser la position en x \u00e0 0bksl-nl        self.y = y  # initialiser la position en y \u00e0 0bksl-nlbksl-nl    def deplacer(self, dx, dy):bksl-nl        self.x = self.x + dxbksl-nl        self.y = self.y + dybksl-nlbksl-nlp1 = Point(5, 3)  # cr\u00e9ation d'une instance de la classe avec argumentsbksl-nlp2 = Point()  # cr\u00e9ation d'une autre instance sans argumentsbksl-nlprint(f'p1.x = {p1.x} - p1.y = {p1.y}')bksl-nlprint(f'p2.x = {p2.x} - p1.y = {p2.y}')bksl-nlp2.deplacer(3, 2)bksl-nlprint('Apr\u00e8s d\u00e9placement :')bksl-nlprint(f'p1.x = {p1.x} - p1.y = {p1.y}')bksl-nlprint(f'p2.x = {p2.x} - p1.y = {p2.y}')bksl-nl</p> <p>Il faut bien faire la distinction entre la d\u00e9finition d'une classe, et les instances de cette classe. Lors de la cr\u00e9ation d'un objet (c'est-\u00e0-dire d'une instance d'une classe), on passe des arguments (un peu comme lorsque l'on appelle une fonction), qui sont automatiquement pass\u00e9s en entr\u00e9es du constructeur de la classe. Le constructeur va ensuite d\u00e9finir les attributs en utilisant ces valeurs.</p>"},{"location":"terminale/poo/cours/#accesseurs-et-mutateurs","title":"Accesseurs et mutateurs","text":"<ul> <li>les accesseurs (ou getters) fournissent des informations relatives \u00e0 l\u2019\u00e9tat d\u2019un objet, c\u2019est-\u00e0-dire aux valeurs de certains de ses attributs sans les modifier ;</li> <li>les mutateurs (ou setters) modifient l\u2019\u00e9tat d\u2019un objet, donc les valeurs de certains de ses attributs.</li> </ul> <p>La notion d'encapsulation</p> <p>L'encapsulation consiste \u00e0 masquer des donn\u00e9es de l'\u00e9tat interne pour prot\u00e9ger l'int\u00e9grit\u00e9 de l'objet.</p> <p>L'id\u00e9e est de faire en sorte qu'un objet laisse les autres objets lire ses donn\u00e9es, mais qu'il soit le seul \u00e0 pouvoir les modifier.</p> <p>Concr\u00e8tement, on fait utilise des accesseurs et des mutateurs pour manipuler les attributs, plut\u00f4t que de les modifier directement.</p> <p>En reprenant notre classe <code>Point</code> et en lui ajoutant des accesseurs permettant d'acc\u00e9der aux attributs <code>x</code> et <code>y</code> et des mutateurs permettant de modifier les attributs <code>x</code> et <code>y</code>, cela pourrait donner :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>class Point:bksl-nl    def py-undpy-undinitpy-undpy-und(self, x = 0, y = 0):bksl-nl        self.x = x  # initialiser la position en x \u00e0 0bksl-nl        self.y = y  # initialiser la position en y \u00e0 0bksl-nlbksl-nl    # Accesseursbksl-nl    def getpy-undx(self):bksl-nl        return self.xbksl-nl    bksl-nl    def getpy-undy(self):bksl-nl        return self.ybksl-nl    bksl-nl    # Mutateursbksl-nl    def setpy-undx(self, nx):bksl-nl        self.x = nxbksl-nlbksl-nl    def setpy-undy(self, ny):bksl-nl        self.y = nybksl-nlbksl-nl    def deplacer(self, dx, dy):bksl-nl        self.setpy-undx(self.getpy-undx() + dx)bksl-nl        self.setpy-undy(self.getpy-undy() + dy)bksl-nlbksl-nlp = Point()bksl-nlp.deplacer(5,7)bksl-nlprint(f'p.x = {p.getpy-undx()} - p.y = {p.getpy-undy()}')bksl-nl</p> <p>Dans notre <code>print</code>, nous n'acc\u00e9dons plus directement aux attributs de notre objet, mais l'on appelle cette fois les accesseurs qui se chargent de renvoyer la valeur de ces attributs.</p> <p>Membres publiques, prot\u00e9g\u00e9s et priv\u00e9s</p> <p>En Python, contrairement \u00e0 d'autres langages comme le Java ou le C++, il n'est pas possible de restreindre techniquement l'acc\u00e8s \u00e0 des m\u00e9thodes ou des attributs d'une classe.</p> <p>Toutefois, il existe des conventions qui permettent d'indiquer des attributs ou des m\u00e9thodes comme \u00e9tant publiques (public), prot\u00e9g\u00e9s (protected) ou priv\u00e9s (private).</p> <p>Public : Les attributs et m\u00e9thodes publiques sont accessibles m\u00eame en dehors de la classe.</p> <p>Protected : Les attributs et m\u00e9thodes prot\u00e9g\u00e9s commencent par un underscore et sont accessibles par une classe et ses sous-classes (les classes-filles, qui h\u00e9ritent de celle-ci).</p> <p>Private : Les attributs et m\u00e9thodes priv\u00e9s commencent par deux underscores et sont uniquement accessibles dans la classe o\u00f9 ils sont d\u00e9finis. Si l'on essaie d'acc\u00e9der \u00e0 un attribut priv\u00e9 ou une m\u00e9thode priv\u00e9e, une <code>AttributeError</code> sera lev\u00e9e. Mais il est facile de contourner cela, raison pour laquelle il ne s'agit pas d'une v\u00e9ritable restriction comme c'est le cas dans d'autres langages.</p>"},{"location":"terminale/poo/cours/#manipulation-des-objets","title":"Manipulation des objets","text":"<p>Voici quelques caract\u00e9ristiques suppl\u00e9mentaires sur les classes :</p> <ul> <li>les noms des classes et des attributs permettent de mieux d\u00e9crire la nature des objets, d'o\u00f9 l'int\u00e9r\u00eat de leur utilisation : <code>p = Point()</code> est plus explicite que <code>p = [0,0]</code> ou <code>p = (0,0)</code> par exemple, et <code>p.y</code> est plus clair que <code>p[1]</code> ;</li> <li>les attributs des objets peuvent \u00eatre d\u2019autres objets, ce qui permet de cr\u00e9er des structures complexes ;</li> <li>des op\u00e9rations similaires peuvent \u00eatre impl\u00e9ment\u00e9es par des m\u00e9thodes de m\u00eame nom dans plusieurs classes.</li> <li>les m\u00e9thodes \u00e9tant li\u00e9es \u00e0 la classe de l\u2019objet lui-m\u00eame (contrairement \u00e0 une fonction), cela permert une meilleure lisibilit\u00e9 du programme et \u00e9vite ainsi certaubes erreurs de programmation.</li> </ul> <p>\u00c0 vous de jouer</p> <p>\u00c9crire une nouvelle classe <code>Segment</code> qui r\u00e9utilise la classe <code>Point</code> et qui contient :</p> <ul> <li>Un constructeur qui initialise deux attributs, <code>p1</code> et <code>p2</code>, deux objets de type <code>Point</code> fournis en arguments lors de la cr\u00e9ation de l'objet,</li> <li>Une m\u00e9thode <code>deplacer</code> qui prend deux param\u00e8tres <code>dx</code> et <code>dy</code> (ne pas oublier \u00e9galement <code>self</code>) et qui d\u00e9place le segment (en ajoutant <code>dx</code> \u00e0 la position en <code>x</code> et <code>dy</code> \u00e0 la position en <code>y</code> des deux points),</li> <li>une m\u00e9thode <code>milieu</code> qui ne prend pas de param\u00e8tres (en dehors de <code>self</code> bien s\u00fbr) et qui renvoie un nouveau point situ\u00e9 au milieu du segment.</li> <li>une m\u00e9thode sp\u00e9ciale <code>__len__</code> qui renvoie la longueur du segment, on rappelle la formule : si l'on a deux points \\(P1(X1, Y1)\\) et \\(P2(X2, Y2)\\), la longueur est \\(\\sqrt{(X2-X1)\u00b2 + (Y2-Y1)\u00b2}\\)</li> </ul> <p>En dessous de la d\u00e9finition des classes, des instructions qui permettent de cr\u00e9er un nouveau segment (c'est-\u00e0-dire une instance de la classe <code>Segment</code>) doivent \u00eatre pr\u00e9sentes. Apr\u00e8s avoir ex\u00e9cut\u00e9 le programme, vous pouvez faire des tests de manipulation de votre objet stock\u00e9 dans <code>s</code> dans l'interpr\u00e9teur Python. Par exemple, pour appeler une m\u00e9thode de la classe <code>Segment</code> sur votre objet dont la r\u00e9f\u00e9rence est stock\u00e9e dans une variable <code>s</code>, vous devrez donc saisir <code>s.nom_de_la_methode(ARGUMENTS \u00c9VENTUELS)</code>.</p> <p>Vous pouvez, au choix :</p> <ul> <li>cliquer ici pour t\u00e9l\u00e9charger un fichier <code>point.py</code> (contenant la classe <code>Point</code> ainsi qu'une base pour r\u00e9aliser votre classe <code>Segment</code>) et l'ouvrir sur Thonny,</li> <li>reprendre la classe <code>Point</code> que nous avons r\u00e9alis\u00e9e ensemble en classe.</li> </ul>"},{"location":"terminale/poo/cours/#attributs-et-methodes-de-classes","title":"Attributs et m\u00e9thodes de classes","text":"<p>En programmation orient\u00e9e objet, les attributs de classe, les m\u00e9thodes de classe ou encore les m\u00e9thodes statiques jouent un r\u00f4le important en offrant diff\u00e9rentes fa\u00e7ons de g\u00e9rer le comportement et les donn\u00e9es d\u2019une classe.</p>"},{"location":"terminale/poo/cours/#attributs-de-classes","title":"Attributs de classes","text":"<p>Un attribut de classe est une variable qui appartient \u00e0 la classe elle-m\u00eame, et non aux instances de cette classe.</p> <p>Il est partag\u00e9 entre toutes les instances, ce qui signifie que si l\u2019on modifie cet attribut \u00e0 partir d\u2019une instance, la modification affecte toutes les autres instances.</p> <p>Voici un exemple :</p> <pre><code>class A:\n    nb = 0  # cr\u00e9ation d'un attribut de classe nb\n\n    def __init__(self, x):\n        ''' Constructeur de la classe A. Cr\u00e9ation d'un objet de type A. '''\n\n        self.x = x  # cr\u00e9ation d'un attribut d'instance x\n        A.nb = A.nb + 1  # incr\u00e9menter l'attribut de classe nb\n\nprint(\"A : nb = \", A.nb)  # afficher l'attribut de classe\n\na = A(3)  # cr\u00e9ation d'une nouvelle instance de A\nprint(\"A : nb = \", A.nb)  # afficher l'attribut de classe\nprint(\"a : x = \", a.x, \" nb = \", a.nb)  # afficher les attributs de a\n\nb = A(6)  # cr\u00e9ation d'une nouvelle instance de A\nprint(\"A : nb = \", A.nb)  # afficher l'attribut de classe\nprint(\"a : x = \", a.x, \" nb = \", a.nb)  # afficher les attributs de a\nprint(\"b : x = \", b.x, \" nb = \", b.nb)  # afficher les attributs de b\n\nc = A(8)  # cr\u00e9ation d'une nouvelle instance de A\nprint(\"A : nb = \", A.nb)  # afficher l'attribut de classe\nprint(\"a : x = \", a.x, \" nb = \", a.nb)  # afficher les attributs de a\nprint(\"b : x = \", b.x, \" nb = \", b.nb)  # afficher les attributs de b\nprint(\"c : x = \", c.x, \" nb = \", c.nb)  # afficher les attributs de c\n</code></pre> Tester ce programme <p></p>### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder class A:bksl-nl    nb = 0  # cr\u00e9ation d'un attribut de classe nbbksl-nlbksl-nl    def py-undpy-undinitpy-undpy-und(self, x):bksl-nl        ''' Constructeur de la classe A. Cr\u00e9ation d'un objet de type A. '''bksl-nlbksl-nl        self.x = x  # cr\u00e9ation d'un attribut d'instance xbksl-nl        A.nb = A.nb + 1  # incr\u00e9menter l'attribut de classe nbbksl-nlbksl-nlprint(\"A : nb = \", A.nb)  # afficher l'attribut de classebksl-nlbksl-nla = A(3)  # cr\u00e9ation d'une nouvelle instance de Abksl-nlprint(\"A : nb = \", A.nb)  # afficher l'attribut de classebksl-nlprint(\"a : x = \", a.x, \" nb = \", a.nb)  # afficher les attributs de abksl-nlbksl-nlb = A(6)  # cr\u00e9ation d'une nouvelle instance de Abksl-nlprint(\"A : nb = \", A.nb)  # afficher l'attribut de classebksl-nlprint(\"a : x = \", a.x, \" nb = \", a.nb)  # afficher les attributs de abksl-nlprint(\"b : x = \", b.x, \" nb = \", b.nb)  # afficher les attributs de bbksl-nlbksl-nlc = A(8)  # cr\u00e9ation d'une nouvelle instance de Abksl-nlprint(\"A : nb = \", A.nb)  # afficher l'attribut de classebksl-nlprint(\"a : x = \", a.x, \" nb = \", a.nb)  # afficher les attributs de abksl-nlprint(\"b : x = \", b.x, \" nb = \", b.nb)  # afficher les attributs de bbksl-nlprint(\"c : x = \", c.x, \" nb = \", c.nb)  # afficher les attributs de cbksl-nl <p>Comme on le voit, on peut acc\u00e9der ou modifier un attribut de classe :</p> <ul> <li>directement \u00e0 partir de la r\u00e9f\u00e9rence de la classe : <code>&lt;CLASSE&gt;.&lt;ATTRIBUT_CLASSE&gt;</code></li> <li>depuis la r\u00e9f\u00e9rence d'une instance de la classe : <code>&lt;INSTANCE&gt;.&lt;ATTRIBUT_CLASSE&gt;</code>.</li> </ul>"},{"location":"terminale/poo/cours/#methodes-de-classes","title":"M\u00e9thodes de classes","text":"<p>Une m\u00e9thode de classe est une m\u00e9thode qui appartient \u00e0 la classe plut\u00f4t qu\u2019aux instances.</p> <p>Elle est d\u00e9finie \u00e0 l\u2019aide du d\u00e9corateur <code>@classmethod</code> et prend la r\u00e9f\u00e9rence de la classe comme premier param\u00e8tre, g\u00e9n\u00e9ralement appel\u00e9 <code>cls</code>. Cela permet de manipuler ou interagir avec les attributs de la classe.</p> <p>Par exemple :</p> <pre><code>class A:\n    nb = 0  # cr\u00e9ation d'un attribut de classe nb\n\n    def __init__(self, x):\n        ''' Constructeur de la classe A. Cr\u00e9ation d'un objet de type A. '''\n\n        A.nb = A.nb + 1  # incr\u00e9menter l'attribut de classe nb\n        self.x = x  # cr\u00e9ation d'un attribut d'instance x\n\n    @classmethod\n    def get_nb(cls):\n        ''' M\u00e9thode de classe qui renvoie l'attribut de classe nb. '''\n\n        return A.nb\n\n    @classmethod\n    def nouveau(cls):\n        ''' M\u00e9thode de classe qui renvoie l'attribut de classe nb. '''\n\n        return cls(10)\n\nprint(f\"objets = {A.get_nb()}\")\n\na = A(8)\nprint(f\"a.x = {a.x} - objets = {A.get_nb()}\")\n\nb = A.nouveau()\nprint(f\"b.x = {b.x} - objets = {A.get_nb()}\")\n</code></pre> Tester ce programme <p></p>### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder class A:bksl-nl    nb = 0  # cr\u00e9ation d'un attribut de classe nbbksl-nlbksl-nl    def py-undpy-undinitpy-undpy-und(self, x):bksl-nl        ''' Constructeur de la classe A. Cr\u00e9ation d'un objet de type A. '''bksl-nl        bksl-nl        A.nb = A.nb + 1  # incr\u00e9menter l'attribut de classe nbbksl-nl        self.x = x  # cr\u00e9ation d'un attribut d'instance xbksl-nlbksl-nl    @classmethodbksl-nl    def getpy-undnb(cls):bksl-nl        ''' M\u00e9thode de classe qui renvoie l'attribut de classe nb. '''bksl-nlbksl-nl        return A.nbbksl-nlbksl-nl    @classmethodbksl-nl    def nouveau(cls):bksl-nl        ''' M\u00e9thode de classe qui renvoie l'attribut de classe nb. '''bksl-nl        bksl-nl        return cls(10)bksl-nlbksl-nlprint(f\"objets = {A.getpy-undnb()}\")bksl-nlbksl-nla = A(8)bksl-nlprint(f\"a.x = {a.x} - objets = {A.getpy-undnb()}\")bksl-nlbksl-nlb = A.nouveau()bksl-nlprint(f\"b.x = {b.x} - objets = {A.getpy-undnb()}\")bksl-nl"},{"location":"terminale/poo/cours/#methodes-statiques","title":"M\u00e9thodes statiques","text":"<p>Une m\u00e9thode statique est une m\u00e9thode qui n\u2019a pas acc\u00e8s \u00e0 l\u2019instance ni \u00e0 la classe elle-m\u00eame. Elle est d\u00e9finie \u00e0 l\u2019aide du d\u00e9corateur <code>@staticmethod</code>.</p> <p>On l\u2019utilise souvent lorsque la m\u00e9thode ne d\u00e9pend ni des attributs d\u2019instance ni des attributs de classe, mais est tout de m\u00eame li\u00e9e logiquement \u00e0 la classe.</p> <p>Voici un exemple :</p> <pre><code>import math\n\nclass Cercle:\n    ''' D\u00e9finition d'une classe Cercle. '''\n\n    @staticmethod\n    def aire(rayon):\n        ''' M\u00e9thode statique pour calculer l'aire d'un cercle \u00e0 partir du rayon. '''\n\n        return math.pi * rayon ** 2\n\nmon_cercle = Cercle()  # cr\u00e9ation d'une instance de la classe Cercle\n\n# Utilisation de la m\u00e9thode statique pour calculer l'aire,\n# elle peut \u00eatre appel\u00e9e directement via la classe ou via l'instance.\naire_du_cercle = Cercle.aire(5)  # OU BIEN mon_cercle.aire(5)\n\nprint(f\"L'aire d'un cercle avec un rayon de 5 est {aire_du_cercle}\")\n</code></pre> Tester ce programme <p></p>### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder import mathbksl-nlbksl-nlclass Cercle:bksl-nl    ''' D\u00e9finition d'une classe Cercle. '''bksl-nlbksl-nl    @staticmethodbksl-nl    def aire(rayon):bksl-nl        ''' M\u00e9thode statique pour calculer l'aire d'un cercle \u00e0 partir du rayon. '''bksl-nlbksl-nl        return math.pi py-str rayon py-strpy-str 2bksl-nlbksl-nlmonpy-undcercle = Cercle(5)  # cr\u00e9ation d'une instance de la classe Cerclebksl-nlbksl-nl# Utilisation de la m\u00e9thode statique pour calculer l'aire,bksl-nl# elle peut \u00eatre appel\u00e9e directement via la classe ou via l'instance.bksl-nlairepy-unddupy-undcercle = Cercle.aire(5)  # OU BIEN monpy-undcercle.aire(5)bksl-nlbksl-nlprint(f\"L'aire d'un cercle avec un rayon de 5 est {airepy-unddupy-undcercle}\")bksl-nl <p>La m\u00e9thode statique est id\u00e9ale dans cet exemple car elle ne d\u00e9pend d\u2019aucune donn\u00e9e sp\u00e9cifique \u00e0 l\u2019instance ou \u00e0 la classe, seulement du param\u00e8tre qu\u2019on lui passe.</p>"},{"location":"terminale/poo/exercices/","title":"Exercices","text":""},{"location":"terminale/poo/exercices/#exercices-sur-la-poo","title":"Exercices sur la POO","text":"<p>Voici deux notebooks pour approfondir votre apprentissage de la POO. Les liens suivants redirigent vers la plateforme Capytale.</p> Notebooks Contenu TD1 sur la POO Premier TD sur la POO (exercices faciles). TD2 sur la POO Second TD sur la POO (exercices plus difficiles).  Correction TD1 sur la POO Correction du premier TD sur la POO.  Correction TD1 sur la POO Correction du premier TD sur la POO."},{"location":"terminale/poo/exercices/#sujets-pratiques-du-bac","title":"Sujets pratiques du bac","text":"<p>Voici quelques sujets pratiques issus d'\u00e9preuves de bac de ces derni\u00e8res ann\u00e9es :</p> Sujet Fichier <code>.py</code> Description 2022 - Sujet 5 T\u00e9l\u00e9charger Un jeu de cartes en POO 2023 - Sujet 32 T\u00e9l\u00e9charger Encore un jeu de cartes."},{"location":"terminale/poo/exercices/#extraits-depreuves-ecrites-du-baccalaureat","title":"Extraits d'\u00e9preuves \u00e9crites du baccalaur\u00e9at","text":"<p>Activit\u00e9 - Le codage de C\u00e9sar</p> <ul> <li>activite_codage_cesar.pdf - Activit\u00e9 qui reprend un sujet du bac de 2021 sur le codage de C\u00e9sar.</li> <li>cesar.py - Fichier Python \u00e0 utiliser pour l'activit\u00e9.</li> </ul> <p>Exercice - Antennes relais et maisons</p> <ul> <li>exercice1_NSIJ1JA1_2024.pdf - Exercice 1 sur la POO du sujet de bac NSI - Centres \u00e9trangers Groupe 2 - Journ\u00e9e 1 - Juin 2024.</li> <li>exercice1_NSIJ1JA1_2024_corr.pdf - Corrig\u00e9 de l'exercice 1 sur la POO du sujet de bac NSI - Centres \u00e9trangers Groupe 2 - Journ\u00e9e 1 - Juin 2024.</li> </ul>"},{"location":"terminale/poo/pokemon/","title":"TP - Un jeu Pok\u00e9mon","text":""},{"location":"terminale/poo/pokemon/#tp-un-jeu-pokemon","title":"TP - Un jeu pok\u00e9mon","text":"<p>Modalit\u00e9s de rendus</p> <p>Vous rendrez une archive ZIP contenant tous les fichiers de votre travail via \u00c9l\u00e9a. Pour rappel, pour cr\u00e9er une archive, s\u00e9lectionnez tous vos fichiers, puis faites un clic droit envoyer vers dossier compress\u00e9.</p>"},{"location":"terminale/poo/pokemon/#objectif-du-tp","title":"Objectif du TP","text":"<p>L'objectif de ce TP est de r\u00e9aliser, en Python, un jeu de combats de pok\u00e9mons. En particulier, on s'inspirera du jeu Pok\u00e9mon.</p> <p>\u00c0 t\u00e9l\u00e9charger</p> <ul> <li>tp_pokemons.zip - Fichiers Python \u00e0 compl\u00e9ter.</li> </ul> <p>Correction + Un petit d\u00e9fi</p> <p>Voici la correction de ce TP :</p> <ul> <li>tp_pokemons_correction.zip - Fichiers corrig\u00e9s du TP Pok\u00e9mon.</li> </ul> <p>D\u00e9fi pour 3 points bonus : Vous souhaitez obtenir JUSQU'\u00c0 TROIS POINTS BONUS \u00e0 votre note obtenue sur le TP Pok\u00e9mon ?</p> <p>Voici comment faire :</p> <ul> <li>Ajoutez 3 nouveaux pok\u00e9mons dans la base de donn\u00e9es des pok\u00e9mons (fichier <code>pokemons.txt</code>), en utilisant les donn\u00e9es du pok\u00e9dex.</li> <li>Cr\u00e9ez un nouveau type d'attaque, comme le sommeil par exemple (qui emp\u00eache un pok\u00e9mon d'attaquer pendant un certain nombre de tours), ou encore la confusion (qui fait qu'un pok\u00e9mon attaquant va subir des d\u00e9g\u00e2ts 50% du temps), vous pouvez consulter cette page pour voir la liste des statuts possibles.</li> <li>Ajouter la prise en compte des types des Pok\u00e9mons, en vous aidant de la table des types. Vous devrez faire en sorte que la puissance d'attaque soit adapt\u00e9e selon les types du Pok\u00e9mon attaquant et les types du Pok\u00e9mon cibles. Chaque Pok\u00e9mon peut avoir deux types, il faut donc bien tenir compte des deux types dans le calcul de la puissance des attaques.</li> </ul> <p>Autre am\u00e9lioration :</p> <ul> <li>Vous pouvez ajuster le calcul des points de d\u00e9g\u00e2ts inflig\u00e9s par une attaque. Actuellement, le calcul des points de d\u00e9g\u00e2ts en fonction de la puissance d'une attaque, de l'attaque du Pok\u00e9mon attaquant et de la d\u00e9fense du Pok\u00e9mon cible est imparfait. Pour mettre \u00e0 jour ce calcul, cela se passe dans la m\u00e9thode <code>attaquer</code> de la classe <code>Combat</code>, plus pr\u00e9cis\u00e9ment sur la ligne : <pre><code>degats_infliges = (puissance_attaque * attaquant.get_attaque()) / (cible.get_defense() * 2.4 + 1)\n</code></pre></li> </ul> <p>Ce projet est constitu\u00e9 des fichiers suivants :</p> <ul> <li><code>main.py</code> - Programme principal permettant l'ex\u00e9cution du jeu</li> <li><code>jeu.py</code> - Classe qui g\u00e8re l'ensemble du jeu et r\u00e9utilise les autres classes</li> <li><code>combat.py</code> - Classe permettant de repr\u00e9senter un combat du jeu</li> <li><code>pokemon.py</code> - Classe permettant de repr\u00e9senter les Pok\u00e9mons</li> <li><code>pokemons.txt</code> - Fichier texte contenant la base de donn\u00e9es des pok\u00e9mons du jeu (contenant leurs noms, caract\u00e9ristiques et attaques.)</li> </ul> <p>Voici une capture de ce que l'on souhaite obtenir :</p> <p> </p> Exemple d'ex\u00e9cution du jeuVoir l'image en taille r\u00e9elle"},{"location":"terminale/poo/pokemon/#modelisation","title":"Mod\u00e9lisation","text":"<p>Voici une mod\u00e9lisation sous forme de diagramme des diff\u00e9rentes classes constituant ce projet :</p> <p> </p> Mod\u00e9lisation des classes du jeuVoir l'image en taille r\u00e9elle <p>Notes :</p> <p>Base de donn\u00e9es des pok\u00e9mons</p> <p>Les donn\u00e9es sur les pok\u00e9mons sont stock\u00e9es dans un fichier <code>pokemons.txt</code>.</p> <p>L'inscription d'un pok\u00e9mon se fait de la mani\u00e8re suivante :</p> <pre><code>Bulbizarre  Plante,Poison   45  49  49\nCharge,50   Rugissement,attaque-e,5 Vampigraine,drainage,3\n</code></pre> <p>Chaque donn\u00e9e est s\u00e9par\u00e9e par une tabulation. La premi\u00e8re ligne renseigne les donn\u00e9es principales sur le Pok\u00e9mon : Son nom, ses types, son nombre de vies, son attaque et enfin sa d\u00e9fense. La deuxi\u00e8me ligne contient les attaques du pok\u00e9mon :</p> <ul> <li>S'il s'agit d'une attaque qui inflige simplement des d\u00e9g\u00e2ts, on l'\u00e9crit sous la forme : <code>Nom_de_lattaque,puissance</code> (donc seulement deux \u00e9l\u00e9ments).</li> <li>S'il s'agit d'une attaque qui n'inflige pas de d\u00e9g\u00e2ts mais effectue une autre action, ou inflige une alt\u00e9ration d'\u00e9tat, on l'\u00e9crira sous la forme suivante (3 \u00e9l\u00e9ments) :<ul> <li><code>Nom_attaque,poison,3</code> : empoisonnement pendant 3 tours,</li> <li><code>Nom_attaque,attaque+,10</code> : augmenter de 10 points l'attaque du pok\u00e9mon alli\u00e9,</li> <li><code>Nom_attaque,defense+,10</code> : augmenter de 10 points la d\u00e9fense du pok\u00e9mon alli\u00e9,</li> <li><code>Nom_attaque,attaque-e,10</code> : diminuer de 10 points l'attaque du pok\u00e9mon ennemi,</li> <li><code>Nom_attaque,defense-e,10</code> : diminuer de 10 points la d\u00e9fense du pok\u00e9mon ennemi.</li> </ul> </li> </ul> <p>Alt\u00e9rations d'\u00e9tat</p> <p>Pour l'instant, il existe :</p> <ul> <li><code>poison</code> : empoisonner l'ennemi,</li> <li><code>paralysie</code> : paralyser l'ennemi,</li> <li><code>drainage</code> : drainer la vie de l'ennemi (vole des PV au pok\u00e9mon adverse),</li> <li><code>attaque+</code>, <code>attaque-</code>, <code>defense+</code>, <code>defense-</code> : augmenter/diminuer l'attaque ou la d\u00e9fense alli\u00e9e,</li> <li><code>attaque+e</code>, <code>defense+e</code>, <code>attaque-e</code>, <code>defense-e</code> : augmenter/diminuer l'attaque ou la d\u00e9fense ennemie.</li> <li>Rien ne vous emp\u00eache de cr\u00e9er de nouveaux effets, si vous vous sentez capable de les rajouter dans le code !</li> </ul> <p>Attaques</p> <p>Apr\u00e8s lecture du fichier <code>pokemons.txt</code>, les attaques de chaque <code>Pokemon</code> sont enregistr\u00e9es dans l'attribut <code>_liste_attaques</code> sous la forme d'une liste de dictionnaires. Par exemple, s'il y a 2 attaques : <code>[{\"nom_attaque\": \"Charge\", \"degats_attaque\": 35}, {\"nom_attaque\": \"Rugissement\", \"nom_effet\": \"attaque-e\", \"valeur_effet\": 5}]</code></p> <ul> <li>La premi\u00e8re attaque \"Charge\" a une puissance de 35.</li> <li>La seconde attaque diminue l'attaque de l'ennemi de 5 points.</li> </ul> <p>\u00c9tat du pok\u00e9mon</p> <p>L'\u00e9tat du pok\u00e9mon est stock\u00e9e sous la forme d'un dictionnaire :</p> <ul> <li>Initialement, l'attribut <code>_etat</code> est \u00e9gal \u00e0 <code>{\"nom_etat\": \"normal\", \"duree_etat\": -1}</code>  Cela indique que le pok\u00e9mon est dans son \u00e9tat normal (le <code>-1</code> indique que l'\u00e9tat est permanent).</li> <li>S'il est empoisonn\u00e9 par exemple, <code>_etat</code> devient \u00e9gal \u00e0 <code>{\"nom_etat\": \"poison\", \"duree_etat\": 3}</code>  Empoisonnement pendant encore 3 tours. (M\u00eame principe pour la paralysie, ou le drainage).</li> </ul> <p>Vous pouvez ajouter de nouveaux pok\u00e9mons dans le fichier <code>pokemons.txt</code>, en respectant bien le format. Vous pouvez cr\u00e9er vos propres pok\u00e9mons ou vous inspirer du pok\u00e9dex.</p>"},{"location":"terminale/poo/pokemon/#realisation","title":"R\u00e9alisation","text":"<p>\u00c0 faire</p> <p>Les fichiers <code>pokemon.py</code>, <code>combat.py</code> et <code>jeu.py</code>, qui d\u00e9finissent les classes <code>Pokemon</code>, <code>Combat</code> et <code>Jeu</code> n\u00e9cessaires au bon fonctionnement du jeu sont pr\u00e9-remplis, mais vous devez les compl\u00e9ter.</p> <p>Les zones \u00e0 compl\u00e9ter sont marqu\u00e9es par des pointill\u00e9s <code>.........</code>.</p> <p>Les m\u00e9thodes (fonctions inclues dans des classes) contiennent la mention \"\u00c0 COMPL\u00c9TER\" ou \"COMPL\u00c9TER\" dans la docstring lorsqu'il y a des zones \u00e0 compl\u00e9ter, certaines m\u00e9thodes sont d\u00e9j\u00e0 compl\u00e8tement \u00e9crites.</p> <p>Lisez bien les documentations et les commentaires pour vous assurer de bien comprendre le fonctionnement du programme !</p>"},{"location":"terminale/poo/pokemon/#deroulement-du-jeu","title":"D\u00e9roulement du jeu","text":"<p>Le jeu, d\u00e9fini dans la classe <code>Jeu</code>, se d\u00e9roule ind\u00e9finiment et ne s'arr\u00eate que si :</p> <ul> <li>le nombre de victoires correspond \u00e0 la valeur de la variable globale <code>NB_VICTOIRES</code>,</li> <li>le nombre de d\u00e9faites correspond \u00e0 la valeur de la variable globale <code>NB_DEFAITES</code>,</li> <li>il reste moins de 2 pok\u00e9mons en jeu.</li> </ul> <p>Si aucune de ces conditions n'est remplie :</p> <ul> <li>on demande au joueur de choisir un pok\u00e9mon parmi les pok\u00e9mons encore vivants du jeu,</li> <li>l'adversaire choisit un pok\u00e9mon de mani\u00e8re al\u00e9atoire,</li> <li>on lance un combat,</li> <li>\u00e0 la fin du combat : en cas de victoire, on incr\u00e9mente la valeur du nombre de victoires, en cas de d\u00e9faite, on incr\u00e9mente la valeur du nombre de d\u00e9faites,</li> <li>on recommence le m\u00eame d\u00e9roulement tant qu'aucune des 3 conditions d\u00e9finies pr\u00e9c\u00e9demment n'est remplie.</li> </ul>"},{"location":"terminale/poo/pokemon/#deroulement-dun-combat","title":"D\u00e9roulement d'un combat","text":"<p>Pour vous aider \u00e0 comprendre, voici une explication du d\u00e9roulement d'un combat (m\u00e9thode <code>jouer</code> de la classe <code>Combat</code>) :</p> <ul> <li>on v\u00e9rifie si le pok\u00e9mon du joueur est mort. Si oui, fin du combat, avec un message de d\u00e9faite.</li> <li>sinon, on v\u00e9rifie si le pok\u00e9mon de l'ennemi est mort. Si oui, fin du combat, avec message de victoire.</li> <li>si aucun pok\u00e9mon n'est mort :</li> <li>on affiche les infos sur les pok\u00e9mons du combat (points de vies, \u00e9tat, attaque, d\u00e9fense...),</li> <li>on active les effets relatifs aux alt\u00e9rations d'\u00e9tat,</li> <li>si c'est au tour du joueur, le joueur choisit une attaque,</li> <li>si c'est au tour du joueur adversaire, l'attaque est choisie al\u00e9atoirement,</li> <li>\u00e0 la fin, on incr\u00e9mente le nombre de tours.</li> </ul>"},{"location":"terminale/poo/preliminaire/","title":"Activit\u00e9 d'introduction","text":""},{"location":"terminale/poo/preliminaire/#activite-dintroduction","title":"Activit\u00e9 d'introduction","text":"<p>Source</p> <p>Inspir\u00e9 d'une activit\u00e9 du Hachette NSI Terminale.</p> <p>Pour simuler la trajectoire d\u2019un projectile que l\u2019on lance en l\u2019air avec une certaine vitesse et qui est soumis \u00e0 la gravit\u00e9, on a besoin de conna\u00eetre sa position \\(x\\) et \\(y\\) et sa vitesse \\(vx\\) et \\(vy\\). Apr\u00e8s un intervalle de temps \\(dt\\), la position et la vitesse du projectile sont modifi\u00e9es ainsi :</p> <ul> <li>\\(x = x + dt \\times vx ; y = y + dt \\times vy\\) ;</li> <li>\\(vy = vy \u2212 g \\times dt\\) o\u00f9 \\(g\\) est l\u2019intensit\u00e9 de la pesanteur (\\(9,81 m/s^2\\) sur Terre).</li> </ul> <p>Pour repr\u00e9senter le projectile, nous allons utiliser un nouveau type de donn\u00e9es : un objet.</p> <p>Pour cr\u00e9er un objet repr\u00e9sentant un projectile, il faut d\u2019abord d\u00e9finir une classe, que l\u2019on appellera ici <code>Projectile</code>.</p> <p>La fonction <code>Projectile()</code> renverra alors un nouvel objet de type <code>Projectile</code>, qui est comme une coquille vide. On peut ensuite \u00ab remplir \u00bb cette coquille avec des attributs qui repr\u00e9sentent l\u2019\u00e9tat du projectile, ici <code>x</code>, <code>y</code>, <code>vx</code> et <code>vy</code>, auxquels on acc\u00e8de par la notation point\u00e9e :</p> <pre><code>class Projectile:  # d\u00e9clarer une classe\n    pass\n\nballe = Projectile()  # cr\u00e9er un objet\nballe.x = 0  # affecter son attribut x,\nballe.y = 0  # son attribut y,\nballe.vx = 10  # son attribut vx,\nballe.vy = 20  # et son attribut vy\n</code></pre> <p> </p> Repr\u00e9sentation de l'objet `balle` <p>\u00c0 faire</p> <p>T\u00e9l\u00e9charger et ouvrir dans Thonny le script Python suivant :</p> <ul> <li>projectile.py : script Python \u00e0 compl\u00e9ter (en suivant les exercices suivants)</li> </ul> <p>Exercice 1</p> <p>\u00c9crire la fonction <code>pas(balle, dt)</code> (en dehors de la classe) qui prend une balle en param\u00e8tre et modifie son \u00e9tat apr\u00e8s l\u2019intervalle de temps <code>dt</code> (vous devez donc red\u00e9finir les attributs <code>x</code>, <code>y</code> et <code>vy</code>).</p> <p>Exercice 2</p> <p>\u00c9crire un programme qui cr\u00e9e une balle et appelle 50 fois la fonction <code>pas</code> avec le param\u00e8tre <code>dt = 0.1</code> en affichant \u00e0 chaque fois la position de la balle.</p> <p>Exercice 3</p> <p>Modifier la fonction <code>pas</code> pour qu\u2019elle affiche la trajectoire de la balle en dessinant un trait depuis sa derni\u00e8re position. On utilisera la biblioth\u00e8que <code>turtle</code> et notamment la fonction <code>goto(x,y)</code> qui d\u00e9place la tortue \u00e0 la position <code>x</code>, <code>y</code> en tra\u00e7ant un trait.</p> <p>La fonction <code>pas</code> n\u2019a de sens que si on lui passe un projectile comme premier param\u00e8tre. Pour rendre cela explicite, on peut la d\u00e9finir \u00e0 l\u2019int\u00e9rieur de la classe <code>Projectile</code>. On dit que l\u2019on d\u00e9finit la m\u00e9thode <code>pas</code> de la classe <code>Projectile</code>.</p> <p>Au lieu d\u2019appeler la fonction <code>pas(balle, dt)</code>, on utilisera alors la notation point\u00e9e pour appeler cette m\u00e9thode, comme ceci : <code>balle.pas(dt)</code>.</p> <pre><code>class Projectile:\n    def pas(self , dt):  # d\u00e9finir la m\u00e9thode `pas` dans la classe `Projectile`\n        ...              # `self` est l'objet sur lequel on a appel\u00e9 la m\u00e9thode\n...\nballe.pas(dt)            # appeler la m\u00e9thode `pas` pour l'objet `balle`\n</code></pre> <p>Exercice 4</p> <p>Modifier le programme pr\u00e9c\u00e9dent pour d\u00e9finir la fonction <code>pas</code> sous forme d\u2019une m\u00e9thode de la classe <code>Projectile</code>.</p> <p>Exercice 5</p> <p>Modifier la m\u00e9thode <code>pas</code> pour programmer le rebond sur le sol : si la coordonn\u00e9e \\(y\\) du projectile devient n\u00e9gative, on inverse la vitesse verticale \\(vy\\).</p> <p>Note : Tel que programm\u00e9 ici, le rebond n\u2019a pas lieu au moment o\u00f9 la balle touche le sol \u00e0 proprement parler, mais apr\u00e8s qu\u2019elle l\u2019ait d\u00e9j\u00e0 travers\u00e9. Il en r\u00e9sulte que la vitesse verticale risque d\u2019\u00eatre plus \u00e9lev\u00e9e que dans la r\u00e9alit\u00e9, et la balle risque de rebondir plus haut que son rebond pr\u00e9c\u00e9dent. Une simulation correcte devrait estimer le moment pr\u00e9cis o\u00f9 la balle.</p> <p>Exercice 6</p> <p>Modifier le programme pour cr\u00e9er plusieurs balles avec des positions et des vitesses initiales diff\u00e9rentes, et lancer une simulation en appelant r\u00e9p\u00e9titivement la m\u00e9thode <code>pas</code> de chaque balle \u00e0 tour de r\u00f4le.</p> <p>On pourra utiliser les fonctions <code>penup()</code> et <code>pendown()</code> du module <code>Turtle</code> pour relever et rabaisser le crayon pour passer d'une balle \u00e0 une autre.</p>"},{"location":"terminale/pyxel/","title":"Le module Pyxel","text":""},{"location":"terminale/pyxel/#le-module-pyxel","title":"Le module Pyxel","text":"Logo de Pyxel Liste des contenus Description  Un jeu de Snake R\u00e9alisation d'un petit jeu de Snake pour introduire le module Pyxel.  Projet - R\u00e9aliser un petit jeu vid\u00e9o Projet en groupes de cr\u00e9ation d'un jeu vid\u00e9o 2D avec Pyxel.  R\u00e9alisations des \u00e9l\u00e8ves Jeux r\u00e9alis\u00e9s par les \u00e9l\u00e8ves."},{"location":"terminale/pyxel/projetjv/","title":"Projet - R\u00e9aliser un jeu vid\u00e9o 2D","text":""},{"location":"terminale/pyxel/projetjv/#projet-realiser-un-jeu-video-2d","title":"Projet - R\u00e9aliser un jeu vid\u00e9o 2D","text":"<p>Voici le contenu li\u00e9 \u00e0 ce projet (\u00e0 consulter dans l'ordre) :</p> <ol> <li>Feuille de projet : feuille contenant toutes les informations sur l'activit\u00e9 (objectif, bar\u00e8me, etc.)</li> <li>Pad \"Cr\u00e9ation d'un jeu vid\u00e9o\" : quelques ressources pour vous aider dans la r\u00e9alisation de votre jeu.</li> </ol>"},{"location":"terminale/pyxel/realisations/","title":"R\u00e9alisations des \u00e9l\u00e8ves","text":""},{"location":"terminale/pyxel/realisations/#realisations-des-eleves","title":"R\u00e9alisations des \u00e9l\u00e8ves","text":"<p>Voici les jeux r\u00e9alis\u00e9s par les \u00e9l\u00e8ves de terminale \u00e0 l'aide du module Pyxel.</p> <p>Cliquez sur le bouton Jouer pour lancer un jeu sur votre navigateur. Note : au moment o\u00f9 le texte <code>\"CLICK TO START\"</code> appara\u00eet, il faut parfois patienter quelques secondes apr\u00e8s avoir cliqu\u00e9 pour que le jeu d\u00e9marre.</p> <p></p> Shooter <p></p> <p>Jouer  </p> <p></p> Booooiing <p></p> <p>Jouer  </p> <p></p> Don't touch the sun <p></p> <p>Jouer  </p> <p></p> Tower Thralls <p></p> <p>Jouer  </p> <p></p> Tank Le Mil <p></p> <p>Jouer  </p> <p></p> Pyxart <p></p> <p>Jouer  </p>"},{"location":"terminale/pyxel/snake/","title":"Jeu de snake","text":""},{"location":"terminale/pyxel/snake/#un-jeu-de-snake-avec-pyxel","title":"Un jeu de snake avec Pyxel","text":"Screen de la fen\u00eatre de jeu <p>\u00c9nonc\u00e9 et programme de base</p> <p>Voici une version PDF de l'\u00e9nonc\u00e9 de l'exercice (comportant des trous \u00e0 compl\u00e9ter), ainsi qu'une structure de base pour votre programme Python.</p> <ul> <li>Snake - \u00c9nonc\u00e9 \u00e0 trous</li> <li>Programme Python de base</li> </ul> <p>N'h\u00e9sitez pas \u00e0 consulter la documentation de Pyxel si vous recherchez une fonctionnalit\u00e9 particuli\u00e8re de Pyxel qui n'est pas pr\u00e9sent\u00e9e dans l'\u00e9nonc\u00e9.</p>"},{"location":"terminale/pyxel/snake/#quelques-explications-utiles","title":"Quelques explications utiles","text":"<p>Pour r\u00e9aliser ce jeu de snake, vous utilisez la POO (programmation orient\u00e9e objet).</p> <p>Voici une structure de base pour votre programme (vous pouvez t\u00e9l\u00e9charger le fichier ou copier / coller le code ci-dessous):</p> <pre><code>import pyxel\nfrom random import randint\n\nclass SnakeGame:\n    def __init__(self):\n\n        # AJOUTEZ ICI VOS INSTRUCTIONS\n\n        # ex\u00e9cuter le jeu\n        pyxel.run(self.update, self.draw)\n\n    def update(self):\n\n        pass\n\n    def draw(self):\n\n        # on ajoute une instruction permettant d'effacer l'\u00e9cran\n        # et de le remplir avec la couleur 0 (= couleur noire) :\n        pyxel.cls(0)\n\n        pass\n\nif __name__ == \"__main__\":\n    SnakeGame()  # Instanciation de la classe SnakeGame\n</code></pre> <p>Explication</p> <p>Voici une petite explication de ce bout de code :</p> <ul> <li>les deux premi\u00e8res lignes permettent d'importer le module Pyxel et la fonction randint du module random (qui sera utile pour g\u00e9n\u00e9rer la position de la nourriture),</li> <li>on a cr\u00e9\u00e9 une classe nomm\u00e9e <code>SnakeGame</code> (vous pouvez l'appeler comme vous voulez), qui contient un constructeur <code>__init__</code>, une m\u00e9thode <code>update</code> et une m\u00e9thode <code>draw</code>.<ul> <li>la m\u00e9thode <code>__init__</code> permet :<ul> <li>de d\u00e9finir tous les attributs dont vous aurez besoin pour travailler (par exemple un attribut pour repr\u00e9senter le <code>snake</code> lui-m\u00eame, la <code>direction</code> de d\u00e9placement du snake, le <code>score</code> du joueur, etc.),</li> <li>d'initialiser la fen\u00eatre de jeu avec la fonction <code>init</code> du module <code>pyxel</code>,</li> <li>d'ex\u00e9cuter le jeu avec la fonction <code>run</code> du module <code>pyxel</code>. C'est ce que l'on fait avec l'instruction : <code>pyxel.run(self.update, self.draw)</code> Cette fonction <code>run</code> prend comme entr\u00e9es votre m\u00e9thode <code>update</code> et votre m\u00e9thode <code>draw</code>. Ces deux m\u00e9thodes seront ex\u00e9cut\u00e9es 20 fois par seconde.</li> </ul> </li> <li>la m\u00e9thode <code>draw</code> contiendra toutes les instructions permettant de dessiner ce que vous verrez \u00e0 l'\u00e9cran dans la fen\u00eatre de jeu,</li> <li>la m\u00e9thode <code>update</code> contiendra toutes les instructions permettant de mettre \u00e0 jour l'\u00e9tat du jeu*.</li> </ul> </li> <li>Au d\u00e9but de la m\u00e9thode <code>draw</code>, vous pouvez voir l'instruction suivante : <code>pyxel.cls(0)</code> On a ici appel\u00e9 la fonction <code>cls</code> de <code>pyxel</code>, qui permet d'effacer l'\u00e9cran et de le remplir avec la couleur noire (valeur <code>0</code>). Il y a au total 16 couleurs possibles, de valeurs allant de <code>0</code> (pour le noir) \u00e0 <code>15</code> :  L'instruction <code>pyxel.cls(0)</code> est n\u00e9cessaire pour pouvoir modifier notre affichage \u00e0 chaque appel de <code>draw</code> sans conserver les affichages pr\u00e9c\u00e9dents.</li> <li>Enfin, le bloc d'instructions <code>if __name__ == \"__main__\":</code> en fin de script permet de d\u00e9finir des instructions qui seront ex\u00e9cut\u00e9es uniquement si l'on ex\u00e9cute directement ce script. Elles ne seront donc pas ex\u00e9cut\u00e9es si le script est import\u00e9 dans un autre. Ici, on se contente d'instancier la classe<code>SnakeGame</code>, ce qui entra\u00eene automatiquement l'ex\u00e9cution du jeu (puisque l'instruction <code>pyxel.run</code> est dans le constructeur de la classe). Vous remarquerez que l'on ne stocke pas notre nouvel objet dans une variable, puisqu'on n'a pas besoin de le modifier.</li> </ul> <p>Information - D\u00e9placement du snake</p> <p>En bas de la page 3 de l'\u00e9nonc\u00e9, on vous donne une partie du code permettant de r\u00e9agir aux touches du clavier en modifiant la direction de d\u00e9placement du snake :</p> <p></p> <ul> <li>Bien \u00e9videmment, vous devez compl\u00e9ter ce bout de code en ajoutant les instructions pour prendre en compte l'appui sur la touche Up et sur la touche Down.</li> <li>Vous pouvez, si vous le souhaitez, remplacer les touches de fl\u00e8ches par les touches Z, Q, S et D.</li> </ul>"},{"location":"terminale/pyxel/snake/#une-version-amelioree","title":"Une version am\u00e9lior\u00e9e","text":"<p>Maintenant que vous avez une premi\u00e8re version de votre jeu, vous pouvez y apporter des am\u00e9liorations, comme par exemple :</p> <ul> <li>agrandir la fen\u00eatre de jeu,</li> <li>faire en sorte qu'en sortant de l'\u00e9cran d'un c\u00f4t\u00e9, le snake r\u00e9apparaisse de l'autre c\u00f4t\u00e9,</li> <li>ajouter un \u00e9cran de \"Game Over\" en cas d'\u00e9chec,</li> <li>acc\u00e9l\u00e9rer la vitesse de d\u00e9placement du snake toutes les \\(x\\) nourritures mang\u00e9es,</li> <li>cr\u00e9er un syst\u00e8me de niveaux de plus en plus durs et en y ajoutant des obstacles,</li> <li>etc.</li> </ul>"},{"location":"terminale/recherche_textuelle/","title":"Recherche textuelle","text":""},{"location":"terminale/recherche_textuelle/#recherche-textuelle","title":"Recherche textuelle","text":"Liste des contenus Description TP d'introduction D\u00e9couverte des algorithmes de recherche textuelle. Cours Cours sur l'algorithme de Boyer-Moore."},{"location":"terminale/recherche_textuelle/cours/","title":"Cours","text":""},{"location":"terminale/recherche_textuelle/cours/#cours-algorithme-de-boyer-moore","title":"Cours - Algorithme de Boyer-Moore","text":"<p>L'algorithme de Boyer-Moore pr\u00e9sent dans le programme de terminale est en r\u00e9alit\u00e9 une version simplifi\u00e9e de l'algorithme, appel\u00e9e algorithme de Boyer-Moore-Horspool, qui consiste \u00e0 ne garder que la premi\u00e8re table de saut (r\u00e8gle du mauvais caract\u00e8re).</p> <p>La r\u00e8gle du bon suffixe sera \u00e9voqu\u00e9e pour votre culture, mais n'est pas au programme.</p>"},{"location":"terminale/recherche_textuelle/cours/#rappel-recherche-textuelle-naive","title":"Rappel - Recherche textuelle na\u00efve","text":"<p>Avant de voir l'algorithme de Boyer-Moore, rappelons la m\u00e9thode de recherche textuelle \"na\u00efve\", qui consiste \u00e0 rechercher un motif dans un texte en parcourant tout le texte et en comparant le motif \u00e0 chaque nouveau caract\u00e8re rencontr\u00e9.</p> <p>Algorithme de recherche d'un motif dans un texte</p> <p></p> ALGORITHME : recherche ENTR\u00c9ES : <code>texte</code> : texte dans lequel rechercher - cha\u00eene de caract\u00e8res <code>motif</code> : motif \u00e0 rechercher dans le texte - cha\u00eene de caract\u00e8res SORTIE : liste des positions (indices) de <code>motif</code> dans <code>texte</code> <p>D\u00c9BUT ALGORITHME \u2003\u2003res \u2190 LISTE VIDE POUR i ALLANT DE 0 \u00c0 longueur(texte) \\(-\\) longueur(motif) : \u2003\u2003\u2003\u2003j \u2190 0 TANT QUE j \\(&lt;\\) longueur(motif) ET QUE texte[i \\(+\\) j] \\(=\\) motif[j] :   \u2003\u2003\u2003\u2003\u2003\u2003j \u2190 j \\(+\\) 1 FIN TANT QUE SI j \\(=\\) longueur(motif), ALORS : Ajouter i \u00e0 res FIN SI FIN POUR Renvoyer res FIN ALGORITHME </p> <p>Note : On s'arr\u00eate \u00e0 <code>longueur(tableau) - longueur(motif)</code> de mani\u00e8re \u00e0 \u00e9viter de d\u00e9passer la taille du texte lors des comparaisons.</p> <p>En langage Python, cet algorithme pourrait s'\u00e9crire ainsi :</p> <pre><code>def recherche(texte: str, motif: str) -&gt; 'list[int]':\n    ''' Renvoie une liste des positions d'un motif dans un texte. '''\n\n    res = []\n    for i in range(len(texte) - len(motif) + 1):\n        j = 0\n        while j &lt; len(motif) and texte[i + j] == motif[j]:\n            j += 1\n        if j == len(motif):\n            res.append(i)\n    return res\n</code></pre>"},{"location":"terminale/recherche_textuelle/cours/#boyer-moore-horspool-video-explicative","title":"Boyer-Moore-Horspool - Vid\u00e9o explicative","text":"<p>Voici une petite vid\u00e9o r\u00e9capitulant le principe de fonctionnement de l'algorithme de Boyer-Moore-Horspool (version simplifi\u00e9e de l'algorithme de Boyer-Moore). Source de la vid\u00e9o : https://www.youtube.com/watch?v=9OYJ8L9R1F0.</p> <p></p>"},{"location":"terminale/recherche_textuelle/cours/#animation","title":"Animation","text":"<p>Voici une animation montrant le fonctionnement de l'algorithme de Boyer-Moore-Horspool. Vous pouvez changer le texte, le motif (pattern), ainsi que la vitesse d'animation (Animation Speed).</p> <p> </p>"},{"location":"terminale/recherche_textuelle/cours/#lalgorithme","title":"L'algorithme","text":"<p>La table des sauts (ou table de d\u00e9calage) peut \u00eatre cr\u00e9\u00e9e avec l'algorithme suivant, ici \u00e9crit en Python :</p> <pre><code>def decalage(motif):\n    Dec = {}\n    for i in range(len(motif) - 1):\n        Dec[motif[i]] = len(motif) - 1 - i\n    return Dec\n</code></pre> <p>\u00c0 pr\u00e9sent, on peut \u00e9crire l'algorithme de Boyer-Moore-Horspool de la mani\u00e8re suivante :</p> <pre><code>def BMH(texte, motif):\n    D = decalage(motif)  # cr\u00e9ation de la table des d\u00e9calages\n    i = len(motif) - 1  # stocker indice du dernier caract\u00e8re du motif\n    while i &lt; len(texte):  # parcourir le texte\n        b = True  # initialiser b \u00e0 True\n        for j in range(len(motif)):  # parcourir le motif\n            if texte[i - j] != motif[len(motif) - j - 1]:  # Comparer un caract\u00e8re du motif avec un caract\u00e8re du texte\n                b = False  # si un caract\u00e8re ne correspond pas, b passe \u00e0 False\n        if b:  # si b est rest\u00e9 \u00e0 True, alors on a trouv\u00e9 le motif\n            return True  # on renvoie True\n        # sinon :\n        if texte[i] in D.keys():  # si le caract\u00e8re i est dans le motif\n            i = i + D[texte[i]]  # on d\u00e9cale le motif de la valeur (de la table de sauts D) associ\u00e9e au caract\u00e8re pr\u00e9sent \u00e0 l'indice i du texte\n        else:  # sinon\n            i = i + len(motif)  # on d\u00e9cale le motif de la longueur du texte\n    return False  # motif non trouv\u00e9 : on renvoie False\n</code></pre>"},{"location":"terminale/recherche_textuelle/cours/#aller-plus-loin","title":"Aller plus loin","text":"<p>Pour aller plus loin, vous pouvez consulter le notebook <code>Boyer_Moore_BS_Eleve.ipynb</code> ci-dessous pr\u00e9sentant la r\u00e8gle du bon suffixe, ainsi que le notebook <code>Boyer_Moore_complet.ipynb</code> impl\u00e9mentant l'algorithme de Boyer-Moore complet, utilisant \u00e0 la fois la r\u00e8gle du mauvais caract\u00e8re et la r\u00e8gle du bon suffixe.</p> <p>Notebooks</p> <ul> <li>Boyer Moore avec la r\u00e8gle du bon suffixe - d\u00e9couverte de la r\u00e8gle du bon suffixe</li> <li>Boyer Moore complet - algorithme de Boyer-Moore avec la r\u00e8gle du mauvais caract\u00e8re et la r\u00e8gle du bon suffixe</li> </ul>"},{"location":"terminale/recherche_textuelle/tp_intro/","title":"TP d'introduction","text":""},{"location":"terminale/recherche_textuelle/tp_intro/#tp-introduction-a-la-recherche-textuelle","title":"TP - Introduction \u00e0 la recherche textuelle","text":"<p>Notebook d'introduction</p> <ul> <li>TP recherche textuelle</li> <li>TP recherche textuelle CORRIG\u00c9</li> </ul>"},{"location":"terminale/recursivite/","title":"R\u00e9cursivit\u00e9","text":""},{"location":"terminale/recursivite/#recursivite","title":"R\u00e9cursivit\u00e9","text":"Liste des contenus Description Introduction Une introduction \u00e0 la r\u00e9cursivit\u00e9. Cours Cours sur la r\u00e9cursivit\u00e9. Exercices Exercices et notebooks sur la r\u00e9cursivit\u00e9."},{"location":"terminale/recursivite/cours/","title":"Cours","text":""},{"location":"terminale/recursivite/cours/#cours-la-recursivite","title":"Cours - La r\u00e9cursivit\u00e9","text":""},{"location":"terminale/recursivite/cours/#introduction","title":"Introduction","text":"<p>La r\u00e9cursivit\u00e9 est une d\u00e9marche largement utilis\u00e9e dans de nombreux domaines, y compris en informatique. Elle repose sur le principe de r\u00e9soudre un probl\u00e8me en le divisant en sous-probl\u00e8mes plus petits, souvent de mani\u00e8re r\u00e9p\u00e9titive, jusqu'\u00e0 ce que les sous-probl\u00e8mes deviennent suffisamment simples pour \u00eatre r\u00e9solus directement. En programmation, cela se traduit par une fonction qui s'appelle elle-m\u00eame pour r\u00e9soudre un probl\u00e8me plus vaste.</p> <p>La r\u00e9cursivit\u00e9 n'est pas seulement un outil de r\u00e9solution de probl\u00e8mes, mais aussi un concept profond\u00e9ment enracin\u00e9 dans l'histoire des math\u00e9matiques et de l'informatique. En fait, le math\u00e9maticien indien du 12e si\u00e8cle, Bhaskara II, est souvent cr\u00e9dit\u00e9 comme l'un des premiers \u00e0 avoir utilis\u00e9 la r\u00e9cursivit\u00e9 pour r\u00e9soudre des \u00e9quations math\u00e9matiques. Cependant, le concept de r\u00e9cursivit\u00e9 a vraiment pris de l'ampleur avec le math\u00e9maticien britannique George Boole au 19e si\u00e8cle et plus tard avec l'\u0153uvre d'Alan Turing et d'autres pionniers de l'informatique au 20e si\u00e8cle.</p>"},{"location":"terminale/recursivite/cours/#les-fonctions-recursives","title":"Les fonctions r\u00e9cursives","text":""},{"location":"terminale/recursivite/cours/#quest-ce-que-cest","title":"Qu'est-ce que c'est ?","text":"<p>Une fonction r\u00e9cursive est une fonction qui s'appelle elle-m\u00eame dans sa propre d\u00e9finition. Elle est compos\u00e9e de deux parties principales :</p> <ul> <li>Le cas de base : C'est le point d'arr\u00eat de la r\u00e9cursion. Il sp\u00e9cifie quand la fonction doit cesser de s'appeler elle-m\u00eame et renvoyer une valeur.</li> <li>Le cas r\u00e9cursif : C'est la partie o\u00f9 la fonction s'appelle elle-m\u00eame avec des arguments modifi\u00e9s, g\u00e9n\u00e9ralement plus petits, afin de progresser vers le cas de base.</li> </ul> <p>Voici un exemple simple en Python pour illustrer ce concept :</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>def comptepy-undapy-undrebours(n):bksl-nl    if n &lt;= 0:bksl-nl        print(\"Fin du compte \u00e0 rebours!\")bksl-nl    else:bksl-nl        print(n)bksl-nl        comptepy-undapy-undrebours(n - 1)bksl-nlbksl-nlcomptepy-undapy-undrebours(3)  # test avec n = 3bksl-nl</p> <p>Visualiser sur Python Tutor</p> <p>Dans cet exemple, <code>compte_a_rebours</code> est une fonction r\u00e9cursive qui affiche les nombres de n jusqu'\u00e0 1, puis affiche <code>\"Fin du compte \u00e0 rebours!\"</code>.</p> D\u00e9roulement d\u00e9taill\u00e9 de compte_a_rebours <p>N'h\u00e9sitez pas \u00e0 visualiser le d\u00e9roulement de <code>compte_a_rebours</code> sur Python Tutor.</p> <p>Supposons que nous appelions <code>compte_a_rebours(3)</code>. Voici comment cela se d\u00e9roule :</p> <ol> <li> <p>La fonction <code>compte_a_rebours(3)</code> est appel\u00e9e.</p> </li> <li> <p>La condition <code>if n &lt;= 0:</code> n'est pas satisfaite, donc la fonction affiche <code>3</code> et appelle <code>compte_a_rebours(2)</code>.</p> <ul> <li>La fonction <code>compte_a_rebours(2)</code> est appel\u00e9e.</li> <li>Elle affiche <code>2</code> et appelle <code>compte_a_rebours(1)</code>.<ul> <li>La fonction <code>compte_a_rebours(1)</code> est appel\u00e9e.</li> <li>Elle affiche <code>1</code> et appelle <code>compte_a_rebours(0)</code>.<ul> <li>La fonction <code>compte_a_rebours(0)</code> est appel\u00e9e.</li> <li>La condition <code>if n &lt;= 0:</code> est satisfaite, donc elle affiche <code>\"Fin du compte \u00e0 rebours!\"</code> et ne renvoie rien (<code>None</code>).</li> </ul> </li> <li>La fonction <code>compte_a_rebours(1)</code> revient \u00e0 son appelant (qui est <code>compte_a_rebours(2)</code>).</li> </ul> </li> <li>La fonction <code>compte_a_rebours(2)</code> revient \u00e0 son appelant (qui est <code>compte_a_rebours(3)</code>).</li> </ul> </li> <li> <p>La fonction <code>compte_a_rebours(3)</code> revient \u00e0 son appelant (qui peut \u00eatre l'appel initial).</p> </li> </ol>"},{"location":"terminale/recursivite/cours/#plusieurs-cas-de-base","title":"Plusieurs cas de base","text":"<p>Voici un autre exemple de fonction Python r\u00e9cursive qui pr\u00e9sente plusieurs cas de base. Cette fonction calcule le \\(n-i\u00e8me\\) terme de la suite de Fibonacci, une suite math\u00e9matique c\u00e9l\u00e8bre o\u00f9 chaque terme est la somme des deux termes pr\u00e9c\u00e9dents : \\(F(n) = F(n-1) + F(n-2)\\).</p> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>def fibonacci(n):bksl-nl    if n &lt;= 0:bksl-nl        return 0bksl-nl    elif n == 1:bksl-nl        return 1bksl-nl    else:bksl-nl        return fibonacci(n - 1) + fibonacci(n - 2)bksl-nlbksl-nlprint(f'fibonacci(8) = {fibonacci(8)}')  # test avec n = 8bksl-nl</p> <p>Visualiser sur Python Tutor</p> <p>Dans cette fonction <code>fibonacci</code>, nous avons trois cas principaux :</p> <ul> <li>Le cas de base 1 : Si <code>n</code> est inf\u00e9rieur ou \u00e9gal \u00e0 <code>0</code>, nous renvoyons <code>0</code>, car \\(F(0) = 0\\).</li> <li>Le cas de base 2 : Si <code>n</code> est \u00e9gal \u00e0 <code>1</code>, nous renvoyons <code>1</code>, car \\(F(1) = 1\\).</li> <li>Le cas r\u00e9cursif : Pour les valeurs de <code>n</code> sup\u00e9rieures \u00e0 <code>1</code>, nous appelons r\u00e9cursivement <code>fibonacci(n - 1)</code> et <code>fibonacci(n - 2)</code> pour calculer les deux termes pr\u00e9c\u00e9dents dans la suite, puis nous les additionnons pour obtenir le \\(n-i\u00e8me\\) terme.</li> </ul> <p>L'utilisation de deux appels r\u00e9cursifs avec des valeurs diff\u00e9rentes de <code>n</code> cr\u00e9e une structure de r\u00e9cursivit\u00e9 en arbre, o\u00f9 chaque n\u0153ud a deux enfants :</p> <pre><code>graph TD\n  5(fibonacci 5)\n  4(fibonacci 4)\n  3(fibonacci 3)\n  33(fibonacci 3)\n  2(fibonacci 2)\n  22(fibonacci 2)\n  222(fibonacci 2)\n  1(fibonacci 1)\n  11(fibonacci 1)\n  111(fibonacci 1)\n  1111(fibonacci 1)\n  11111(fibonacci 1)\n  0(fibonacci 0)\n  00(fibonacci 0)\n  000(fibonacci 0)\n\n  5 --&gt; 4\n  5 --&gt; 3\n  4 --&gt; 33\n  4 --&gt; 2\n  3 --&gt; 22\n  3 --&gt; 1\n  2 --&gt; 11\n  2 --&gt; 0\n  33 --&gt; 222\n  33 --&gt; 111\n  22 --&gt; 1111\n  22 --&gt; 00\n  222 --&gt; 11111\n  222 --&gt; 000</code></pre> <p>Co\u00fbt algorithmique exponentiel</p> <p>Le probl\u00e8me de la fonction telle que nous l'avons \u00e9crite est que son co\u00fbt algorithmique est exponentiel en raison de la duplication de calculs (voir arbre ci-dessus). Vous pouvez par exemple faire le test avec une valeur comme <code>n = 37</code> (sur un IDE externe comme Thonny, car l'IDE int\u00e9gr\u00e9 \u00e0 la page, bien que pratique, est peu performant et risque de planter m\u00eame pour des petites valeurs de <code>n</code>), vous verrez que le r\u00e9sultat prendra un certain temps \u00e0 s'afficher (plus ou moins 10 secondes selon la puissance de votre machine).</p> <p>Maintenant, si vous essayez avec <code>n = 100</code>, il faudra faire 1 146 295 688 027 634 168 201 appels r\u00e9cursifs ! Ce qui prendra environ... 13 197 652 000 000 000 secondes, soit 418 494 799 ann\u00e9es, 216 jours, 20 heures, 26 minutes et 40 secondes de temps de calcul.</p> <p>Ainsi, pour des valeurs de \\(n\\) plus \u00e9lev\u00e9es, cette approche devient inefficace, et il est pr\u00e9f\u00e9rable d'utiliser des techniques de programmation dynamique pour optimiser le calcul des termes de Fibonacci (on abordera cela plus tard dans l'ann\u00e9e).</p>"},{"location":"terminale/recursivite/cours/#plusieurs-cas-recursifs","title":"Plusieurs cas r\u00e9cursifs","text":"<p>Il est \u00e9galement possible de d\u00e9finir une fonction avec plusieurs cas r\u00e9cursifs. Par exemple, on souhaite proposer une fonction <code>puissance(x, n)</code>, renvoyant le r\u00e9sultat de \\(x^n\\), en distinguant deux cas en fonction de la parit\u00e9 de <code>n</code>.</p> <p>Math\u00e9matiquement, on peut d\u00e9finir \\(x^n\\) de la fa\u00e7on suivante :</p> <p></p> \\(x^n=\\left\\{ \\begin{array}{lll} 1 \\;si \\; n=0\\\\ {(x^\\frac{n}{2})}^2 \\;si \\; n \\geq 1 \\;et\\; n \\;pair\\\\ x \\times (x^{\\frac{(n-1)}{2}})^2 \\;si \\; n \\geq 1 \\;et\\; n \\;impair \\end{array} \\right.\\) <p>On a donc ici un cas de base (non r\u00e9cursif) et deux cas r\u00e9cursifs selon si <code>n</code> est pair ou impair.</p> <p>L'op\u00e9ration de division est ici suppos\u00e9e \u00eatre la division enti\u00e8re (on utilisera le symbole <code>//</code> en Python).</p> <p>On \u00e9crira pour impl\u00e9menter cela :</p> <ul> <li>une fonction <code>carre(x)</code> qui renvoie le carr\u00e9 d'un nombre <code>x</code> donn\u00e9,</li> <li>une fonction <code>puissance(x, n)</code> d\u00e9finie de la mani\u00e8re suivante :</li> </ul> <p></p> \\(puissance(x,n)=\\left\\{ \\begin{array}{lll} 1 \\;si \\; n=0\\\\ carre(puissance(x,\\frac{n}{2})) \\;si \\; n \\geq 1 \\;et\\; n \\;pair\\\\ x \\times carre(puissance(x,\\frac{n-1}{2}) \\;si \\; n \\geq 1 \\;et\\; n \\;impair \\end{array} \\right.\\) ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>def carre(x):bksl-nl    ''' Renvoie le carr\u00e9 d'un nombre x.bksl-nl    :param x: (int|float) nombre \u00e0 mettre au carr\u00e9bksl-nl    :return (int|float): le carr\u00e9 de x '''bksl-nl    bksl-nl    return xpy-strxbksl-nlbksl-nldef puissance(x,n):bksl-nl    ''' Calcule la puissance n-i\u00e8me de x.bksl-nl    :param x: (int|float) nombre \u00e0 mettre \u00e0 la puissance nbksl-nl    :param n: (int) la puissancebksl-nl    :return (int|float): la puissance n-i\u00e8me de x '''bksl-nlbksl-nl    if n==0:bksl-nl        return 1bksl-nl    elif n%2 == 0:bksl-nl        return carre(puissance(x,n/2))bksl-nl    else :bksl-nl        return xpy-strcarre(puissance(x,(n-1)/2))bksl-nl    bksl-nlassert(puissance(2,0)==1)bksl-nlassert(puissance(4,1)==4)bksl-nlassert(puissance(3,3)==27)bksl-nl</p> <p>On constate donc que les seules op\u00e9rations arithm\u00e9tiques sont effectu\u00e9es dans la fonction <code>carre(x)</code>, et dans le cas o\u00f9 <code>n</code> est impair dans la fonction <code>puissance(x,n)</code>. Les appels r\u00e9cursifs font que ces op\u00e9rations sont r\u00e9p\u00e9t\u00e9es autant de fois qu'il faut pour calculer \\(x^n\\).</p>"},{"location":"terminale/recursivite/cours/#a-vous-de-jouer","title":"\u00c0 vous de jouer !","text":"<p>La fonction factorielle</p> <p>\u00c9crire la fonction factorielle d'abord de fa\u00e7on it\u00e9rative, puis de fa\u00e7on r\u00e9cursive. On rappelle que <code>factorielle(n) = 1</code> si <code>n = 0</code>, <code>factorielle(n) = 1 x 2 x ... x (n-1) x n</code> si <code>n &gt;= 1</code>.</p> <p></p>### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder def factorielle(n):bksl-nl    ''' D\u00e9finition it\u00e9rative de la fonction factorielle. '''bksl-nl    passbksl-nlbksl-nldef factoriellepy-undrec(n):bksl-nl    ''' D\u00e9finition r\u00e9cursive de la fonction factorielle. '''bksl-nl    passbksl-nl"},{"location":"terminale/recursivite/cours/#les-piles-dexecution","title":"Les Piles d'ex\u00e9cution","text":"<p>Lorsque l'on appelle une fonction r\u00e9cursive, le syst\u00e8me doit garder une trace de chaque appel de fonction active et de ses param\u00e8tres pour pouvoir revenir \u00e0 ces appels une fois que les appels r\u00e9cursifs sont termin\u00e9s. Cela se fait \u00e0 l'aide d'une structure de donn\u00e9es appel\u00e9e pile d'ex\u00e9cution (ou call stack en anglais).</p> <p>Voici comment cela fonctionne, en prenant l'exemple de <code>fibonacci</code> :</p> <ul> <li>Appel Initial : Lorsque vous appelez une fonction r\u00e9cursive pour la premi\u00e8re fois (par exemple, <code>fibonacci(5)</code>), un nouvel appel de fonction est ajout\u00e9 au sommet de la pile d'appels. Les param\u00e8tres de cet appel (dans ce cas, <code>n=5</code>) sont stock\u00e9s sur la pile.</li> <li>Appels R\u00e9cursifs : Si la fonction r\u00e9cursive effectue des appels r\u00e9cursifs (comme <code>fibonacci(n-1)</code> et <code>fibonacci(n-2)</code> dans le cas de Fibonacci), chaque nouvel appel est ajout\u00e9 au sommet de la pile avec ses propres param\u00e8tres. La pile continue de s'accumuler avec ces appels tant que les conditions de base ne sont pas atteintes.</li> <li>Retours : Lorsque les cas de base sont atteints (par exemple, <code>fibonacci(0)</code> et <code>fibonacci(1)</code> dans le cas de Fibonacci), la fonction commence \u00e0 renvoyer des valeurs. Les appels de fonctions les plus r\u00e9cents sont retir\u00e9s de la pile et leurs r\u00e9sultats sont utilis\u00e9s pour calculer les valeurs des appels pr\u00e9c\u00e9dents.</li> <li>D\u00e9pilement : La pile d'appels est d\u00e9charg\u00e9e de haut en bas, ce qui signifie que le dernier appel est le premier \u00e0 \u00eatre retir\u00e9 (c'est pourquoi on parle de \"pile\"). Les valeurs de retour des appels de fonction sont utilis\u00e9es pour remonter dans la pile jusqu'\u00e0 ce que l'appel initial soit atteint.</li> <li>R\u00e9sultat Final : Une fois que l'appel initial a \u00e9t\u00e9 \u00e9valu\u00e9, la pile est compl\u00e8tement vid\u00e9e, et vous obtenez le r\u00e9sultat final de la fonction r\u00e9cursive.</li> </ul> <p>\u00c0 chaque \u00e9tape, la fonction est empil\u00e9e sur la pile d'appels jusqu'\u00e0 ce que le cas de base soit atteint (n &lt;= 0), puis les fonctions commencent \u00e0 se d\u00e9piler et \u00e0 revenir successivement \u00e0 leur appelant.</p>"},{"location":"terminale/recursivite/cours/#exemple-une-fonction-somme_recursive","title":"Exemple : une fonction <code>somme_recursive</code>","text":"<p>Nous allons utiliser une fonction r\u00e9cursive pour calculer la somme des nombres de <code>1</code> \u00e0 <code>n</code> (c'est-\u00e0-dire <code>1 + 2 + 3 + ... + n</code>).</p> <p>Voici la fonction Python pour calculer la somme r\u00e9cursivement :</p> <pre><code>def somme_recursive(n):\n    if n == 1:\n        return 1\n    else:\n        return n + somme_recursive(n - 1)\n</code></pre>"},{"location":"terminale/recursivite/cours/#etape-1-appel-initial","title":"\u00c9tape 1 : Appel initial","text":"<p>Au d\u00e9but, nous appelons <code>somme_recursive(5)</code>. La pile d'appels est vide.</p> <pre><code>graph TD\n  A[somme_recursive 5]</code></pre>"},{"location":"terminale/recursivite/cours/#etape-2-appels-recursifs","title":"\u00c9tape 2 : Appels R\u00e9cursifs","text":"<p>L'appel initial g\u00e9n\u00e8re des appels r\u00e9cursifs. Nous ajoutons (empilons) <code>somme_recursive(4)</code>, puis <code>somme_recursive(3)</code>, et ainsi de suite, jusqu'\u00e0 ce que <code>somme_recursive(1)</code> soit atteint.</p> <pre><code>graph TD\n  A[somme_recursive 5] --&gt; B[somme_recursive 4]\n  B --&gt; C[somme_recursive 3]\n  C --&gt; D[somme_recursive 2]\n  D --&gt; E[somme_recursive 1]</code></pre>"},{"location":"terminale/recursivite/cours/#etape-3-retours-et-calculs","title":"\u00c9tape 3 : Retours et Calculs","text":"<p>Maintenant, nous commen\u00e7ons \u00e0 retirer (d\u00e9piler) les appels de la pile et \u00e0 calculer les r\u00e9sultats \u00e0 chaque \u00e9tape. Les r\u00e9sultats sont ensuite renvoy\u00e9s \u00e0 l'appel pr\u00e9c\u00e9dent pour le calcul final.</p> <pre><code>graph TD\n  A[somme_recursive 5] --&gt; B[somme_recursive 4]\n  B --&gt; C[somme_recursive 3]\n  C --&gt; D[somme_recursive 2]\n  D --&gt; E[somme_recursive 1]\n\n  E --&gt;|Renvoie 1| D[somme_recursive 2]\n  D --&gt;|Renvoie 3| C[somme_recursive 3]\n  C --&gt;|Renvoie 6| B[somme_recursive 4]\n  B --&gt;|Renvoie 10| A[somme_recursive 5]</code></pre>"},{"location":"terminale/recursivite/cours/#etape-4-resultat-final","title":"\u00c9tape 4 : R\u00e9sultat Final","text":"<p>La pile est compl\u00e8tement vid\u00e9e, et nous obtenons le r\u00e9sultat final de <code>somme_recursive(5)</code>, qui est <code>15</code>.</p> <pre><code>graph TD\n  A[somme_recursive 5] --&gt; B[somme_recursive 4]\n  B --&gt; C[somme_recursive 3]\n  C --&gt; D[somme_recursive 2]\n  D --&gt; E[somme_recursive 1]\n\n  E --&gt;|Renvoie 1| D[somme_recursive 2]\n  D --&gt;|Renvoie 3| C[somme_recursive 3]\n  C --&gt;|Renvoie 6| B[somme_recursive 4]\n  B --&gt;|Renvoie 10| A[somme_recursive 5]\n\n  A --&gt;|Renvoie 15| R[R\u00e9sultat final : 15]</code></pre> <p>C'est ainsi que fonctionne la pile d'appels dans ce sc\u00e9nario r\u00e9cursif. Chaque appel est ajout\u00e9 \u00e0 la pile, les r\u00e9sultats sont renvoy\u00e9s et utilis\u00e9s pour calculer le r\u00e9sultat final une fois que tous les appels r\u00e9cursifs ont \u00e9t\u00e9 r\u00e9solus.</p>"},{"location":"terminale/recursivite/exercices/","title":"Exercices","text":""},{"location":"terminale/recursivite/exercices/#exercices-la-recursivite","title":"Exercices - La r\u00e9cursivit\u00e9","text":""},{"location":"terminale/recursivite/exercices/#notebook-dexercices","title":"Notebook d'exercices","text":"<p>Notebook sur Capytale</p> <p>Cliquez sur le lien ci-dessous pour acc\u00e9der au notebook d'exercices sur Capytale :</p> <p></p> Acc\u00e9der au notebook d'exercices"},{"location":"terminale/recursivite/exercices/#exercice-les-tours-de-hanoi","title":"Exercice : Les tours de Hano\u00ef","text":"<p>Source : https://www.codingame.com/playgrounds/56923/apprendre-les-bases-de-python-pour-reussir-en-n-s-i-/tours-de-hanoi.</p> <p>Les tours de Hano\u00ef est un casse-t\u00eate compos\u00e9 de trois tours et une pile de disques rang\u00e9s du plus grand au plus petit comme sur la photo ci-dessous :</p> <p></p> <p>Le but est de d\u00e9placer la pile de disques sur la tour de droite en ne d\u00e9pla\u00e7ant \u00e0 chaque fois qu'un seul disque et un disque ne peut pas \u00eatre pos\u00e9 sur un disque plus petit. Voici une animation de ce qu'il faut faire dans le cas o\u00f9 il y a 4 disques.</p> <p></p> <p>Vous pouvez consulter Wikip\u00e9dia par exemple pour plus d'informations.</p> <p>Nous allons voir qu'il est tr\u00e8s simple de cr\u00e9er un programme r\u00e9cursif qui nous dit quoi faire pour r\u00e9soudre le probl\u00e8me. Tout d'abord on appelle les tours <code>A</code>, <code>B</code> et <code>C</code>. On appelle <code>n</code> le nombre de disque pr\u00e9sents au d\u00e9part dans la tour <code>A</code>. Pour d\u00e9placer tous les disques de la tour <code>A</code> vers la tour <code>C</code>, on peut raisonner comme suit :</p> <ul> <li>On d\u00e9place <code>n-1</code> disques de <code>A</code> vers la tour <code>B</code></li> <li>On d\u00e9place le dernier disque de <code>A</code> vers <code>C</code></li> <li>On d\u00e9place les <code>n-1</code> disques de <code>B</code> vers <code>C</code></li> </ul> <p>L'astuce ici est de cr\u00e9er une fonction <code>hanoi</code> qui prend 4 param\u00e8tres : <code>hanoi(n,debut,inter,fin)</code> o\u00f9 <code>n</code> est le nombre de disques \u00e0 d\u00e9placer, <code>debut</code> est la tour de d\u00e9part de nos <code>n</code> disques, <code>inter</code> est la tour interm\u00e9diaire que l'on peut utiliser pour d\u00e9placer et <code>fin</code> est la tour ou doivent se trouver les <code>n</code> disques au final.</p> <p>Ainsi, on va initialement appeler <code>hanoi(n,\"A\",\"B\",\"C\")</code>, et lorsque l'on voudra d\u00e9placer les <code>n-1</code> disques de <code>A</code> vers <code>B</code>, on appelera <code>hanoi(n-1,\"A\",\"C\",\"B\")</code> .</p> <p>Exercice</p> <p>\u00c9crire cette fonction r\u00e9cursive <code>hanoi(n,debut,inter,fin)</code> de mani\u00e8re \u00e0 afficher (avec print) \u00e0 chaque \u00e9tape le d\u00e9placement \u00e0 effectuer sous la forme <code>\"A B\"</code> pour un d\u00e9placement de la tour \"A\" vers la tour \"B\" par exemple.</p> <p>On souhaite :</p> <ul> <li>donner en entr\u00e9e : <code>(n,\"A\",\"B\",\"C\")</code> o\u00f9 <code>n</code> est un entier.</li> <li>obtenir en sortie : Les instructions \u00e0 suivre pour d\u00e9placer les <code>n</code> disques de la tour <code>\"A\"</code> \u00e0 la tour <code>\"C\"</code> donn\u00e9e sous la forme <code>\"A B\"</code> pour signifier un d\u00e9placement de <code>A</code> vers <code>B</code> et affich\u00e9 avec <code>print</code>.</li> </ul>"},{"location":"terminale/recursivite/exercices/#sujets-de-bac","title":"Sujets de bac","text":"<p>\u00c0 t\u00e9l\u00e9charger</p> <p>Extrait du sujet z\u00e9ro B - 2023</p>"},{"location":"terminale/recursivite/introduction/","title":"Introduction","text":""},{"location":"terminale/recursivite/introduction/#introduction-a-la-recursivite","title":"Introduction \u00e0 la r\u00e9cursivit\u00e9","text":"<p>Pour pr\u00e9senter la notion de r\u00e9cursivit\u00e9, prenons un exemple. On souhaite \u00e9crire une fonction <code>somme(n)</code> qui prend en entr\u00e9e un nombre entier positif <code>n</code> et qui renvoie la somme des entiers de <code>1</code> \u00e0 <code>n</code>.</p> <p>Math\u00e9matiquement, on peut \u00e9crire cette somme ainsi :</p> \\[ \\sum{n} = 1 + 2 + \\cdots + (n - 1) + n \\] <p>Par exemple :</p> \\[ \\sum{5} = 1 + 2 + 3 + 4 + 5 = 15 \\] \\[ \\sum{10} = 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 = 55 \\]"},{"location":"terminale/recursivite/introduction/#une-premiere-approche","title":"Une premi\u00e8re approche","text":"<p>Avec nos connaissances actuelle, une mani\u00e8re d'\u00e9crire cette fonction serait de le faire \u00e0 l'aide d'une boucle <code>for</code>.</p> <pre><code>def somme(n):\n    ''' Renvoie la somme des entiers positifs de 1 \u00e0 n.\n    :param n: (int) un entier positif &gt;= 1\n    :return: (int) la somme des entiers de 1 \u00e0 n '''\n\n    somme = 0\n    for i in range(1, n+1):\n        somme += i\n    return somme\n</code></pre> <p>On a ici utilis\u00e9 la programmation dite imp\u00e9rative (ou it\u00e9rative). Il s'agit d'un paradigme de programmation qui repose sur une s\u00e9rie d'instructions ex\u00e9cut\u00e9es de fa\u00e7on s\u00e9quentielle par l'ordinateur. Ces instructions viennent modifier \u00e9tape par \u00e9tape les valeurs des variables pour finalement aboutir au r\u00e9sultat souhait\u00e9.</p>"},{"location":"terminale/recursivite/introduction/#approche-recursive","title":"Approche r\u00e9cursive","text":"<p>Dans cette nouvelle approche, raisonnons d'abord de mani\u00e8re math\u00e9matique.</p> <p>Comment peut-on r\u00e9-exprimer la fonction somme en fonction de cette m\u00eame fonction ?</p> <p>Une d\u00e9finition r\u00e9cursive</p> <p>Math\u00e9matiquement, on peut exprimer la somme de la mani\u00e8re suivante :</p> \\[ \\sum{n} =     \\begin{array}{ll}         1 &amp; \\mbox{si } n = 1\\\\         n+\\sum{(n-1)} &amp; \\mbox{si } n &gt; 1     \\end{array} \\] <p>Il s'agit d'une d\u00e9finition r\u00e9cursive. Pour calculer la somme de <code>n</code>, on a besoin de calculer la somme de <code>n - 1</code>. De m\u00eame, pour calculer la somme de <code>n - 1</code>, il faut calculer la somme de <code>n - 2</code>. Et ainsi de suite...</p> <p>Ainsi, si l'on retranscrit cette d\u00e9finition en Python, on obtient :</p> <pre><code>def somme(n):\n    ''' Renvoie la somme des entiers positifs de 1 \u00e0 n.\n    D\u00e9finition r\u00e9cursive.\n    :param n: (int) un entier positif &gt;= 1\n    :return: (int) la somme des entiers de 1 \u00e0 n '''\n\n    if n == 1:  # cas de base (non r\u00e9cursif)\n        return 1\n    else:  # cas g\u00e9n\u00e9ral (r\u00e9cursif)\n        return n + somme(n - 1)\n</code></pre> <p>On constate que l'on a utilis\u00e9 deux <code>return</code> dans notre nouvelle fonction. On distingue deux cas :</p> <ul> <li>le cas de base lorsque <code>n == 1</code>, dans ce cas il n'y a pas de r\u00e9cursivit\u00e9,</li> <li>le cas g\u00e9n\u00e9ral lorsque <code>n &gt; 1</code>, dans ce cas on effectue un appel r\u00e9cursif.</li> </ul>"},{"location":"terminale/recursivite/introduction/#aller-plus-loin","title":"Aller plus loin","text":"<p>Dans notre fonction r\u00e9cursive pr\u00e9c\u00e9dente, on ne distingue qu'un seul cas de base et un seul cas r\u00e9cursif. Mais on peut tr\u00e8s bien avoir plusieurs cas de base et/ou plusieurs cas r\u00e9cursifs.</p> <p>Voici un petit exercice :</p> <p>Exercice (\u00e0 faire sur feuille)</p> <p>On souhaite d\u00e9finir une fonction <code>pairs(n)</code> qui renvoie la somme de tous les nombres pairs compris entre <code>2</code> et <code>n</code>. On peut d\u00e9finir cette fonction math\u00e9matiquement de la mani\u00e8re suivante :</p> \\[ pairs{(n)} =     \\begin{array}{ll}         2 &amp; \\mbox{si } n = 2\\\\         n+pairs{(n-1)} &amp; \\mbox{si } n~pair\\\\         pairs{(n-1)} &amp; \\mbox{si } n~impair     \\end{array} \\] <p>Essayez d'\u00e9crire une fonction <code>pairs</code> r\u00e9cursive en suivant cette d\u00e9finition. Voici l'en-t\u00eate de cette fonction :</p> <pre><code>def pairs(n):\n    ''' Fonction r\u00e9cursive qui renvoie la somme des entiers pairs de 2 \u00e0 n.\n    :param n: (int) un entier positif &gt;= 2\n    :return: (int) un entier positif '''\n\n    ...\n</code></pre> <p>Voici un exemple d'utilisation :</p> <pre><code>&gt;&gt;&gt; pairs(10)\n30\n&gt;&gt;&gt; pairs(15)\n56\n</code></pre>"},{"location":"terminale/routage/","title":"Protocoles de routage","text":""},{"location":"terminale/routage/#protocoles-de-routage","title":"Protocoles de routage","text":"Liste des contenus Description Cours Cours sur les protocoles de routage. Exercices sur RIP et OSPF Exercices et extraits de sujets de bac sur les protocoles de routage.  TP Filius Des TP pour vous entra\u00eener sur le logiciel Filius."},{"location":"terminale/routage/cours/","title":"Cours","text":"Sources / Liens utiles <ul> <li>Balabonski Terminale</li> <li>https://www.lyceum.fr/tg/nsi/3-architectures-materielles-systemes-dexploitation-et-reseaux/3-protocoles-de-routage/</li> <li>http://nsi4noobs.fr/IMG/pdf/c3_tnsi_routage.pdf</li> <li>https://glassus.github.io/terminale_nsi/T5_Architecture_materielle/5.3_Protocoles_de_routage/cours/</li> <li>https://pixees.fr/informatiquelycee/n_site/nsi_term_archi_routage.html</li> <li>TP Filius : https://nsirennes.fr/os-archi/reseaux/</li> </ul>"},{"location":"terminale/routage/cours/#cours-protocoles-de-routage","title":"Cours - Protocoles de routage","text":""},{"location":"terminale/routage/cours/#rappels-sur-ladressage-ip","title":"Rappels sur l'adressage IP","text":"<p>Voici une petite activit\u00e9 (sous la forme d'un notebook) de rappel sur l'adressage IP et les masques de sous-r\u00e9seau :</p> <p></p>  T\u00e9l\u00e9charger l'activit\u00e9 d'introduction <p>Adresses broadcast et multicast</p> <ul> <li>Broadcast : Cette adresse vous permet d'appeler tous les h\u00f4tes (interfaces) \u00e0 l'int\u00e9rieur d'un sous-r\u00e9seau. Une adresse IP broadcast est par exemple <code>192.168.100.255</code> et un broadcast MAC est <code>FF:FF:FF:FF:FF:FF</code>.</li> <li>Multicast : Ce type d'adresse permet d'appeler un groupe sp\u00e9cifique d'h\u00f4tes (interfaces) dans un sous-r\u00e9seau.</li> </ul>"},{"location":"terminale/routage/cours/#rappels-quest-ce-quun-reseau","title":"Rappels - Qu'est-ce qu'un r\u00e9seau ?","text":"<p>Vous pouvez dans un premier temps essayer de faire l'exercice 1 pour tester vos connaissances sur les composants d'un r\u00e9seau.</p> <p>Voici une petite vid\u00e9o r\u00e9sumant la constitution d'un r\u00e9seau (et plus g\u00e9n\u00e9ralement du r\u00e9seau mondial) :</p>"},{"location":"terminale/routage/cours/#rappels-modeles-osi-et-tcpip","title":"Rappels mod\u00e8les OSI et TCP/IP","text":"<p>Voici un rappel des mod\u00e8les en couches (en 7 couches avec le mod\u00e8le OSI et en 4 couches avec le mod\u00e8le TCP/IP,\u00e9galement appel\u00e9 \"mod\u00e8le internet\".)</p> <p></p> <p></p> Sch\u00e9ma plus d\u00e9taill\u00e9 - Encapsulation des donn\u00e9es (mod\u00e8le TCP/IP) <p></p> Protocoles IP et TCP <p>Les deux protocoles qui nous int\u00e9ressent particuli\u00e8rement sont :</p> <ul> <li>Le protocole IP (COUCHE R\u00c9SEAU) qui consiste \u00e0 attribuer \u00e0 chaque machine une adresse IP unique pour l\u2019identifier sur le r\u00e9seau, et ainsi transmettre l'information sous la forme de paquets comportant l'indication de l'adresse IP source et de l'adresse IP de destination.</li> <li>Le protocole TCP (COUCHE TRANSPORT) qui permet d\u2019assurer la communication de l\u2019information en la d\u00e9coupant en segments, comportant l'indication du port source et du port de destination, et en s\u2019assurant que tous les paquets soient bien re\u00e7us et conformes \u00e0 l\u2019information envoy\u00e9e. (Il existe un protocole plus rapide mais qui, contraiement \u00e0 TCP, n'assure pas que toutes les donn\u00e9es soient re\u00e7ues : le protocole UDP.)</li> </ul> <p>Voici un rappel de la mani\u00e8re dont s'effectue l'\u00e9tablissement d'une connexion ainsi que la transmission des donn\u00e9es avec le protocole TCP (source de l'image):</p> <p></p> <p>Lorsqu'un paquet n'est pas correctement transmis, il est de nouveau envoy\u00e9 (source de l'image):</p> <p></p> <p></p>  Voir plus d'informations sur le protocole TCP"},{"location":"terminale/routage/cours/#introduction","title":"Introduction","text":"<p>Un r\u00e9seau informatique permet la connexion entre diff\u00e9rentes machines afin de faciliter la communication entre elles. Le mod\u00e8le de communication g\u00e9n\u00e9ralement utilis\u00e9 est le mod\u00e8le client-serveur, qui permet aux clients d'\u00e9changer des paquets d'informations avec les serveurs. La notion de \"client\" est large, pouvant d\u00e9signer aussi bien une application qu'une machine ex\u00e9cutant cette application. De m\u00eame, le terme \"serveur\" peut faire r\u00e9f\u00e9rence \u00e0 l'ordinateur h\u00e9bergeant un service ou au logiciel fournissant ce service.</p> <p>Les paquets de bits \u00e9chang\u00e9s sont les unit\u00e9s de base transitant sur le r\u00e9seau physique. Ils r\u00e9sultent de la fragmentation des donn\u00e9es \u00e0 transmettre, telles que des pages web, des courriels ou des vid\u00e9os. Ces paquets sont envoy\u00e9s s\u00e9par\u00e9ment sur le r\u00e9seau, et l'information initiale est reconstitu\u00e9e une fois qu'ils atteignent leur destination, que ce soit du c\u00f4t\u00e9 client ou serveur.</p> <p>En plus des clients et des serveurs, un r\u00e9seau informatique est compos\u00e9 de routeurs, pouvant \u00eatre de deux types : des routeurs d'acc\u00e8s (en bordure de r\u00e9seau) ou des routeurs internes. Ces machines ont pour r\u00f4le de relayer les paquets dans le r\u00e9seau pour les acheminer vers leur destination finale. Un routeur fait le lien entre deux r\u00e9seaux. Les clients et les serveurs sont connect\u00e9s aux routeurs d'acc\u00e8s via des r\u00e9seaux locaux (en utilisant par exemple le Wi-Fi ou l'Ethernet). Les routeurs internes sont reli\u00e9s entre eux sur de plus longues distances \u00e0 l'aide de fibres optiques, de c\u00e2bles t\u00e9l\u00e9phoniques, de liaisons par satellite, etc. L'interconnexion de ces routeurs via ces liens forme la topologie du r\u00e9seau.</p> <p>Par exemple, la figure ci-dessous repr\u00e9sente la topologie d'un r\u00e9seau avec six routeurs.</p> <p> </p> Figure 1 : Topologie d'un r\u00e9seau <p>Les routeurs R1 et R6 sont des routeurs d'acc\u00e8s permettant aux machines Client et Serveur d'acc\u00e9der au r\u00e9seau. Les autres routeurs (R2 \u00e0 R5) sont des routeurs internes. Les adresses IP des machines sont indiqu\u00e9es par une paire sous-r\u00e9seau/masque. Par exemple, les routeurs R1 et R3 sont connect\u00e9s \u00e0 un sous-r\u00e9seau avec l'adresse 10.1.1.0 et un masque de 30, signifiant que seuls les deux bits de poids faible de l'adresse peuvent \u00eatre utilis\u00e9s pour associer des adresses IP aux machines.</p> <p>Lorsqu'un routeur re\u00e7oit un paquet, il analyse l'adresse de destination et choisit vers quel routeur voisin transmettre le paquet pour le faire progresser vers sa destination. Cette d\u00e9cision est prise en se basant sur la table de routage du routeur, qui associe les adresses de destination \u00e0 des adresses de routeurs voisins. Ainsi, le paquet progresse de routeur en routeur jusqu'\u00e0 atteindre le client ou le serveur auquel il est destin\u00e9. </p> <p>Par exemple, si un client souhaite envoyer un message au serveur, il le transmet \u00e0 son routeur d'acc\u00e8s (R1), qui le renvoie au routeur R3. R3 choisit ensuite le prochain routeur \u00e0 utiliser (R2, R4 ou R5) en se basant sur sa table de routage. Ce processus se r\u00e9p\u00e8te \u00e0 chaque routeur jusqu'\u00e0 ce que le paquet parvienne au routeur R6, qui le d\u00e9livre ensuite au serveur.</p>"},{"location":"terminale/routage/cours/#principe-du-routage","title":"Principe du routage","text":"<p>Si l'h\u00f4te de destination et l'h\u00f4te source sont sur le m\u00eame r\u00e9seau, les paquets de donn\u00e9es circulent directement entre eux sur le support local de niveau 2 (deuxi\u00e8me couche du mod\u00e8le OSI) via des commutateurs (switchs), sans n\u00e9cessiter l'intervention d'un routeur. Les commutateurs construisent une table d'adresses MAC des machines IP connect\u00e9es \u00e0 eux, utilisant ces adresses pour commuter les trames.</p> <p>En revanche, si l'h\u00f4te source et l'h\u00f4te de destination ne sont pas sur le m\u00eame r\u00e9seau, le r\u00e9seau local dirige le paquet de la source vers son routeur de passerelle de niveau 3 (troisi\u00e8me couche du mod\u00e8le OSI). Le routeur analyse la partie r\u00e9seau de l'adresse de destination du paquet et le dirige vers l'interface appropri\u00e9e. Si le r\u00e9seau de destination est directement connect\u00e9 \u00e0 ce routeur, le paquet est transmis directement \u00e0 l'h\u00f4te de destination. Dans le cas contraire, le paquet est envoy\u00e9 \u00e0 un second routeur, qui agit comme le routeur de tron\u00e7on suivant. Le transfert du paquet devient alors la responsabilit\u00e9 de ce second routeur. De multiples routeurs ou sauts tout au long du chemin peuvent traiter le paquet avant qu'il n'atteigne sa destination. Contrairement aux commutateurs, les routeurs se basent sur les adresses IP pour le transfert des donn\u00e9es.</p> <p>Aucun paquet ne peut \u00eatre achemin\u00e9 sans route. Que le paquet provienne d'un h\u00f4te ou soit dirig\u00e9 par un routeur interm\u00e9diaire, le routeur a besoin d'une route pour d\u00e9terminer son itin\u00e9raire. Si aucune route n'existe vers le r\u00e9seau de destination, le paquet ne peut pas \u00eatre transf\u00e9r\u00e9.</p> <p>Les routeurs utilisent des tables de routage, qui peuvent \u00eatre \u00e9tablies de deux mani\u00e8res :</p> <ul> <li>par un routage statique : chaque ligne doit \u00eatre renseign\u00e9e \"\u00e0 la main\". Cette solution est seulement envisageable pour des tr\u00e8s petits r\u00e9seaux de r\u00e9seaux.</li> <li>par un routage dynamique : tout se fait \"automatiquement\", en utilisant des protocoles tels que RIP (Routing Information Protocol) ou OSPF (Open Shortest Path First)==, qui vont permettre de \"d\u00e9couvrir\" les diff\u00e9rentes routes automatiquement afin de pouvoir remplir la table de routage tout aussi automatiquement.</li> </ul> <p>Une tableau de routage</p> <p>Voici \u00e0 quoi ressemble une table de routage (source : Wikip\u00e9dia) :</p> R\u00e9seau destination (format CIDR) Masque Passerelle Interface M\u00e9trique 0.0.0.0/0 0.0.0.0 192.168.0.1 192.168.0.100 1 127.0.0.0/8 255.0.0.0 127.0.0.1 127.0.0.1 1 192.168.0.0/24 255.255.255.0 192.168.0.100 192.168.0.100 1 192.168.0.100/32 255.255.255.255 127.0.0.1 127.0.0.1 1 192.168.0.1/32 255.255.255.255 192.168.0.100 192.168.0.100 1 <p>La m\u00e9trique est une mesure de la \u00ab distance \u00bb qui s\u00e9pare un routeur d'un r\u00e9seau de destination. Dans le cadre du protocole RIP, on peut l'assimiler au nombre de sauts IP n\u00e9cessaires pour atteindre le r\u00e9seau destination (ce qui n'est pas le cas pour le protocole OSPF, o\u00f9 la m\u00e9trique sera li\u00e9e au co\u00fbt des liaisons). Ainsi, un r\u00e9seau directement li\u00e9 \u00e0 un routeur aura une m\u00e9trique de <code>0</code>.</p> <p>Sur votre ordinateur, vous pouvez afficher la table de routage utilis\u00e9e par votre syst\u00e8me en utilisant les commandes suivantes :</p> <ul> <li>Sous Windows : <code>route print</code> ou <code>netsh int ipv4/ipv6 sh route</code></li> <li>Sous Unix/OS X : `netstat -rn</li> <li>Sous Linux : <code>ip -4/-6 route</code></li> </ul> <p>Exemple de table de routage</p> <p>Voici un exemple de r\u00e9seau (source : pixees)</p> <p> Figure 2 : Diagramme d\u2019un r\u00e9seau </p> <p>Voici par exemple ce que donnerait la table de routage du routeur A, apr\u00e8s la mise \u00e0 jour effectu\u00e9e avec le protocole RIP :</p> R\u00e9seau Passerelle Interface M\u00e9trique 172.168.0.0/16 eth0 0 192.168.7.0/24 eth1 0 172.169.0.0/16 eth2 0 10.0.0.0/8 192.168.7.2/24 eth1 1 <p>\u00c0 votre tour, donnez la table de routage du routeur G.</p>"},{"location":"terminale/routage/cours/#principe-des-algorithmes-de-routage","title":"Principe des algorithmes de routage","text":"<p>Un ensemble de r\u00e9seaux interconnect\u00e9s par des routeurs peut \u00eatre repr\u00e9sent\u00e9 sous forme de graphe, o\u00f9 chaque routeur est un n\u0153ud et chaque connexion entre les routeurs ou entre un routeur et un commutateur constitue une ar\u00eate. Les algorithmes employ\u00e9s par les protocoles de routage sont ainsi d\u00e9riv\u00e9s de la th\u00e9orie des graphes. Une illustration de ce concept est pr\u00e9sent\u00e9e dans le sch\u00e9ma ci-dessous :</p> <p> </p> Figure 3 : Exemple de r\u00e9seau repr\u00e9sent\u00e9 sous la forme de graphe, avec les tables de routage qui correspondent. <p>L'objectif d'un algorithme de routage est de d\u00e9terminer un chemin dans ce graphe, \u00e9tablissant ainsi une liaison entre l'\u00e9metteur et le destinataire. Bien qu'il existe de nombreux algorithmes pour trouver le chemin le plus court entre deux points d'un graphe, ces derniers sont rarement utilis\u00e9s de mani\u00e8re directe par les algorithmes de routage.</p> <p>Les algorithmes de routage peuvent \u00e9galement prendre en consid\u00e9ration les performances des divers chemins entre deux routeurs. La mise \u00e0 jour des tables de routage permet alors d'identifier des chemins plus courts ou plus rapides pour acheminer des donn\u00e9es vers une adresse IP sp\u00e9cifique. Pour y parvenir, on peut attribuer un poids (pond\u00e9ration) \u00e0 chaque ar\u00eate, repr\u00e9sentant le co\u00fbt de transmission entre deux routeurs, en fonction du d\u00e9bit de la liaison (c'est ce que l'on verra avec le protocole OSPF).</p>"},{"location":"terminale/routage/cours/#protocole-a-vecteur-de-distances-rip","title":"Protocole \u00ab \u00e0 vecteur de distances \u00bb - RIP","text":"<p>Le nombre de routeurs dans un r\u00e9seau est souvent trop \u00e9lev\u00e9 pour envisager une configuration manuelle des tables de routage. En effet, \u00e0 chaque fois qu'un \u00e9l\u00e9ment du r\u00e9seau tombe en panne ou qu'une modification est apport\u00e9e \u00e0 sa topologie (comme l'ajout d'une nouvelle liaison ou d'un nouveau routeur), il devient n\u00e9cessaire de recalculer toutes les routes et de mettre \u00e0 jour les tables de routage de chaque routeur. Pour r\u00e9aliser cette t\u00e2che, il serait \u00e9galement n\u00e9cessaire d'envoyer toutes les donn\u00e9es relatives \u00e0 l'\u00e9tat des liaisons et des routeurs vers un op\u00e9rateur unique, charg\u00e9 de calculer les nouvelles routes. Outre les inconv\u00e9nients de centraliser cette t\u00e2che, il faut \u00e9galement garantir que les informations sur l'\u00e9tat du r\u00e9seau peuvent \u00eatre transmises sans probl\u00e8me \u00e0 cet op\u00e9rateur. Malheureusement, les moyens de communication utilis\u00e9s \u00e0 cette fin peuvent eux aussi tomber en panne.</p> <p>Pour toutes ces raisons, l'approche consiste \u00e0 automatiser ce processus en permettant aux routeurs de mettre \u00e0 jour leurs tables de routage sans intervention humaine. Ainsi, en plus de la transmission des paquets, les routeurs \u00e9changent des informations sur les routes du r\u00e9seau en fonction de l'\u00e9tat de leurs voisins et de leurs liens de communication. Les r\u00e8gles r\u00e9gissant ces \u00e9changes sont d\u00e9finies par un protocole de routage.</p> <p>Initialement, les informations dont dispose un routeur concernent ses voisins imm\u00e9diats ainsi que les sous-r\u00e9seaux auxquels il est connect\u00e9. En envoyant r\u00e9guli\u00e8rement des messages \u00e0 ses voisins et en mesurant les temps de r\u00e9ponse de ces machines, le routeur peut d\u00e9terminer si un autre routeur est en panne ou si la liaison entre eux est rompue. Il peut ensuite diffuser ces informations \u00e0 tous ses voisins, qui peuvent \u00e0 leur tour les transmettre \u00e0 leurs voisins, et ainsi de suite. De cette mani\u00e8re, progressivement, tous les routeurs finissent par partager les m\u00eames connaissances sur la topologie du r\u00e9seau. Cependant, pour que l'\u00e9change de ces informations soit bien coordonn\u00e9, les routeurs doivent suivre le m\u00eame protocole. Dans cette section, nous d\u00e9crivons le protocole RIP (Routing Information Protocol en anglais), un exemple de protocole utilis\u00e9 \u00e0 cette fin.</p> <p>Principe du protocole RIP</p> <p>Le protocole RIP s'appuie sur l'algorithme de Bellman-Ford (un algorithme utilisant le principe de programmation dynamique), permettant de calculer les plus courts chemins dans un graphe.</p> <p>L'algorithme du protocole RIP repose sur le partage d'informations entre routeurs pour d\u00e9terminer les meilleures routes vers diff\u00e9rents sous-r\u00e9seaux. Chaque routeur communique avec ses voisins en \u00e9changeant des vecteurs de distance, c'est-\u00e0-dire des couples <code>(adresse, distance)</code>, qui repr\u00e9sentent la distance en nombre de sauts vers une machine sp\u00e9cifique. Ces \u00e9changes permettent aux routeurs de construire et mettre \u00e0 jour leurs tables de routage.</p> <p>Dans la phase d'initialisation, chaque routeur transmet les adresses de ses voisins et les distances associ\u00e9es. Ces informations sont utilis\u00e9es pour former des vecteurs de distance. \u00c0 partir de l\u00e0, le protocole RIP continue par des \u00e9changes p\u00e9riodiques de demandes et de r\u00e9ponses entre les routeurs. Lorsqu'un routeur re\u00e7oit une r\u00e9ponse de son voisin, plusieurs sc\u00e9narios peuvent se produire :</p> <ol> <li>D\u00e9couverte d'une nouvelle route vers un sous-r\u00e9seau inconnu : le routeur l'ajoute \u00e0 sa table.</li> <li>D\u00e9couverte d'une route plus courte vers un sous-r\u00e9seau connu : le routeur met \u00e0 jour sa table en rempla\u00e7ant l'ancienne route par la nouvelle.</li> <li>R\u00e9ception d'une nouvelle route plus longue : le routeur ignore cette information.</li> <li>R\u00e9ception d'une route existante, mais plus longue, vers un routeur passant par le m\u00eame voisin : le routeur met \u00e0 jour sa table en tenant compte de cette nouvelle route.</li> </ol> <p>Les distances associ\u00e9es aux routes sont ajust\u00e9es en fonction du chemin parcouru, et la distance maximale est limit\u00e9e \u00e0 15 routeurs interm\u00e9diaires. Au-del\u00e0 de cette limite, la route est ignor\u00e9e ou supprim\u00e9e des tables de routage.</p> <p>En r\u00e9p\u00e9tant ces \u00e9changes et en mettant \u00e0 jour les tables de routage \u00e0 intervalle fixe (l'intervalle de mise \u00e0 jour par d\u00e9faut pour le RIP est de 30 secondes.), les routeurs convergent vers une vision commune du r\u00e9seau, d\u00e9terminant ainsi les meilleures routes pour acheminer les paquets vers leurs destinations.</p> Un exemple d'application <p>Si l'on reprend la figure 1 :</p> <p> Figure 1 : Topologie d'un r\u00e9seau </p> <p>Au d\u00e9but du protocole, les tables des routeurs R1 et R3 sont initialis\u00e9es avec les informations concernant leurs voisins imm\u00e9diats, \u00e0 savoir les adresses des sous-r\u00e9seaux sur lesquels ils sont directement connect\u00e9s :</p> <ul> <li>Pour le routeur R1 :</li> </ul> R\u00e9seau Passerelle Interface Distance 10.1.1.0/30 eth0 0 192.168.1.0/24 wlan0 0 <ul> <li>Pour le routeur R3 :</li> </ul> R\u00e9seau Passerelle Interface Distance 10.1.1.0/30 eth1 0 10.1.2.0/30 eth3 0 10.1.3.0/30 eth2 0 10.1.4.0/30 eth0 0 <p>Apr\u00e8s avoir \u00e9chang\u00e9 une demande RIP avec R3, la table du routeur R1 contient les informations suivantes :</p> R\u00e9seau Passerelle Interface Distance 10.1.1.0/30 eth0 0 192.168.1.0/24 wlan0 0 10.1.2.0/30 10.1.1.2 eth0 1 10.1.3.0/30 10.1.1.2 eth0 1 10.1.4.0/30 10.1.1.2 eth0 1 <p>\u00c0 votre tour, indiquez les informations contenues dans la table du routeur R3 apr\u00e8s son \u00e9change avec R1.</p> Solution R\u00e9seau Passerelle Interface Distance 10.1.1.0/30 eth1 0 10.1.2.0/30 eth3 0 10.1.3.0/30 eth2 0 10.1.4.0/30 eth0 0 192.168.1.0/24 10.1.1.1 eth1 1 <p>Si l'on r\u00e9p\u00e8te ces demandes RIP et en mettant \u00e0 jour les tables de routages selon l'algorithme d\u00e9crit pr\u00e9c\u00e9demment, les routeurs auront finalement la m\u00eame \u00ab vision \u00bb du r\u00e9seau avec les meilleures routes \u00e0 suivre pour acheminer un paquet.</p> <p>Par exemple, la table de routage finale du routeur R1 sera la suivante :</p> R\u00e9seau Passerelle Interface Distance 10.1.1.0/30 eth0 0 192.168.1.0/24 wlan0 0 10.1.2.0/30 10.1.1.2 eth0 1 10.1.3.0/30 10.1.1.2 eth0 1 10.1.4.0/30 10.1.1.2 eth0 1 10.1.7.0/30 10.1.1.2 eth0 2 192.168.6.0/24 10.1.1.2 eth0 3 <p>D\u00e9tection des pannes</p> <p>Le protocole RIP doit \u00e9galement inclure un m\u00e9canisme permettant de d\u00e9terminer si une liaison est d\u00e9faillante. \u00c0 cet effet, un routeur consid\u00e8re qu'un voisin est en panne s'il ne re\u00e7oit pas de r\u00e9ponse \u00e0 une requ\u00eate RIP dans un d\u00e9lai sp\u00e9cifique, par d\u00e9faut fix\u00e9 \u00e0 trois minutes. Lorsqu'un routeur d\u00e9tecte qu'un sous-r\u00e9seau devient inaccessible, il transmet cette information \u00e0 ses voisins en l'exprimant sous forme d'une route avec une distance infinie. Dans le contexte du RIP, cette distance infinie est repr\u00e9sent\u00e9e par une valeur de 16.</p> <p>D\u00e9lai de convergence</p> <p>\u00c9tant donn\u00e9 que les distances maximales ne peuvent d\u00e9passer 15 sauts (ou liaisons travers\u00e9es), les routeurs ne peuvent pas d\u00e9terminer les chemins les plus courts vers des sous-r\u00e9seaux n\u00e9cessitant des routes excessivement longues. Cette restriction limite effectivement l'applicabilit\u00e9 du protocole RIP aux r\u00e9seaux de petite taille. La fixation de cette limite vise \u00e0 r\u00e9duire le d\u00e9lai de convergence du protocole, c'est-\u00e0-dire le temps n\u00e9cessaire pour que tous les routeurs parviennent \u00e0 une vision uniforme de la topologie du r\u00e9seau. Une limite plus \u00e9lev\u00e9e entra\u00eenerait un temps de convergence plus long.</p> <p>Boucles de routage</p> <p>Une boucle de routage peut se produire lorsque les informations dans les tables de routage entra\u00eenent la circulation continue d'un paquet dans le r\u00e9seau, l'emp\u00eachant ainsi d'atteindre sa destination. Deux solutions sont envisageables pour pr\u00e9venir ce ph\u00e9nom\u00e8ne :</p> <ol> <li>garantir que les tables de routage sont toujours correctement configur\u00e9es pour \u00e9viter toute possibilit\u00e9 de boucle,</li> <li>permettre aux routeurs de d\u00e9tecter quand un paquet circule en boucle dans le r\u00e9seau, notamment gr\u00e2ce au TTL (Time-to-Live)).</li> </ol> <p>Le protocole RIP est con\u00e7u de mani\u00e8re \u00e0 pr\u00e9venir la cr\u00e9ation de boucles de routage lors de la mise \u00e0 jour des tables. La limitation impos\u00e9e sur les distances des routes constitue une premi\u00e8re technique. Cependant, cette mesure n'est pas suffisante, et il est n\u00e9cessaire d'\u00e9tablir d'autres r\u00e8gles pour emp\u00eacher ce sc\u00e9nario. Par exemple, la r\u00e8gle du \"split horizon\" stipule qu'un routeur ne doit pas renvoyer une information \u00e0 un autre routeur s'il a appris cette information du m\u00eame routeur. Une autre r\u00e8gle, appel\u00e9e le temporisateur de retenue (Hold down en anglais), oblige un routeur, qui constate l'indisponibilit\u00e9 d'une route vers un sous-r\u00e9seau, \u00e0 ignorer toute information concernant des routes vers ce sous-r\u00e9seau pendant une certaine p\u00e9riode (utilisant un temporisateur \u00e0 cet effet).</p>"},{"location":"terminale/routage/cours/#protocole-a-etat-de-liens-ospf","title":"Protocole \u00ab \u00e0 \u00e9tat de liens \u00bb - OSPF","text":""},{"location":"terminale/routage/cours/#presentation","title":"Pr\u00e9sentation","text":"<p>Dans la section pr\u00e9c\u00e9dente, nous avons examin\u00e9 le fonctionnement du protocole RIP, soulignant sa capacit\u00e9 \u00e0 configurer les tables de routage en privil\u00e9giant les routes les plus courtes en termes de nombre de routeurs travers\u00e9s (nombre de sauts). Malheureusement, cette approche bas\u00e9e sur la distance ne garantit pas l'optimisation des routes en termes de d\u00e9bit, car les caract\u00e9ristiques des liaisons (fibre optique, satellite, sans fil, etc.) ne sont pas prises en compte dans les \u00e9changes d'informations entre les dispositifs via ce protocole. De plus, nous avons not\u00e9 que le RIP n'\u00e9tait pas adapt\u00e9 aux r\u00e9seaux \u00e9tendus, limitant son exploration aux routes de moins de 15 sauts pour r\u00e9duire le d\u00e9lai de convergence et \u00e9viter les boucles de routage.</p> <p>C'est pour rem\u00e9dier \u00e0 ces lacunes que le protocole OSPF (Open Shortest Path First) a \u00e9t\u00e9 d\u00e9velopp\u00e9 dans les ann\u00e9es 90 par l'IETF (Internet Engineering Task Force), un organisme de normalisation international. La sp\u00e9cificit\u00e9 de l'OSPF r\u00e9side dans son utilisation de la bande passante des liaisons pour le calcul des meilleures routes. La bande passante, mesur\u00e9e en bits par seconde (bit/s) ou avec des pr\u00e9fixes tels que kilo (kbit/s) et Mega (Mbit/s), devient ainsi un crit\u00e8re essentiel. Contrairement au RIP, le nombre de routeurs travers\u00e9s n'influe plus sur le choix de la route dans OSPF, o\u00f9 la distance est uniquement li\u00e9e aux co\u00fbts des liaisons n\u00e9cessaires pour relier deux routeurs.</p> <p>Co\u00fbt des liaisons</p> <p>Le co\u00fbt est d\u00e9fini ainsi :</p> \\[ co\u00fbt = \\frac{10^8}{d} \\] <p>o\u00f9 \\(d\\) repr\u00e9sente la bande passante en bit/s de la liaison. La valeur de \\(10^8\\) a \u00e9t\u00e9 d\u00e9lib\u00e9r\u00e9ment choisie pour attribuer un co\u00fbt de 1 \u00e0 une liaison FastEthernet avec un d\u00e9bit de 100 Mbit/s. Ainsi, une liaison plus lente par satellite \u00e0 \\(50\\) Mbits/s aura un co\u00fbt de 2, tandis qu'un c\u00e2ble Ethernet \u00e0 \\(10\\) Mbit/s aura un co\u00fbt de 10.</p> <p>Principe du protocole OSPF</p> <p>Le fonctionnement d'OSPF se d\u00e9coupe en deux \u00e9tapes majeures.</p> <ol> <li>Dans la premi\u00e8re \u00e9tape, chaque routeur, apr\u00e8s initialisation, cherche \u00e0 identifier ses voisins pour \u00e9tablir une relation de voisinage. Le protocole OSPF organise les machines en diff\u00e9rentes zones (ensembles de machines), limitant ainsi la recherche de voisins des routeurs \u00e0 leur zone assign\u00e9e. La s\u00e9quence de cette phase pour un routeur R est d\u00e9taill\u00e9e comme suit :<ul> <li>R choisit un identificateur unique, tel que sa plus grande adresse IP parmi celles de ses sous-r\u00e9seaux.</li> <li>Le routeur R envoie des messages de type HELLO \u00e0 travers toutes ses interfaces r\u00e9seau, contenant son identificateur, le num\u00e9ro de sa zone, et la liste des identificateurs de ses voisins avec qui il a \u00e9tabli une relation de voisinage. </li> <li>Quand un routeur de la zone re\u00e7oit un paquet HELLO de R, il v\u00e9rifie si l'identificateur de R est d\u00e9j\u00e0 dans sa liste de voisins.<ul> <li>Si oui, il envoie un accus\u00e9 de r\u00e9ception \u00e0 R pour indiquer qu'il est toujours actif.</li> <li>Sinon, il r\u00e9pond en fournissant des informations sur la topologie du r\u00e9seau. </li> </ul> </li> <li>R r\u00e9pond de m\u00eame. Les messages qui contiennent les \u00e9tats des liens sont appel\u00e9s LSA (Link State Advertisement). Ces messages ne sortent jamais de la zone, et plusieurs \u00e9changes sont n\u00e9cessaires pour synchroniser les connaissances des routeurs dans une zone. Le processus de cette \u00e9tape initiale est une diffusion (flooding) de l'information de voisinage.</li> </ul> </li> <li>La deuxi\u00e8me \u00e9tape d'OSPF implique l'ex\u00e9cution d'un algorithme, au sein de chaque routeur, pour calculer les meilleures routes vers tout autre routeur de la zone. Le co\u00fbt d'une route, utilis\u00e9 dans cet algorithme, est la somme des co\u00fbts des liaisons entre les routeurs travers\u00e9s. La meilleure route est celle avec le co\u00fbt le plus bas, et une fois calcul\u00e9e, elle est enregistr\u00e9e dans la table de routage du routeur.</li> </ol> \u00c9tablissement d'une relation de voisinage entre deux routeurs <p>Avant d'\u00e9tablir une relation de voisinage, les routeurs OSPF traversent plusieurs \u00e9tapes de changement d'\u00e9tat. Voici quelles sont ces \u00e9tapes entre deux routeurs :</p> <ol> <li>\u00c9tat initial : Un routeur re\u00e7oit un message Hello de l'autre routeur OSPF.</li> <li>\u00c9tat 2-way : Le voisin a re\u00e7u le message Hello et a r\u00e9pondu avec un message Hello.</li> <li>\u00c9tat Exstart : Le d\u00e9but de l'\u00e9change de LSDB (Base de donn\u00e9es d'\u00e9tat de lien) entre les deux routeurs. Les routeurs commencent \u00e0 \u00e9changer des informations sur l'\u00e9tat des liens.</li> <li>\u00c9tat Exchange : Les paquets DBD (Database Descriptor) sont \u00e9chang\u00e9s. Les DBD contiennent des en-t\u00eates LSA (Annonces d'\u00e9tat de lien). Les routeurs utilisent ces informations pour d\u00e9terminer quels LSA doivent \u00eatre \u00e9chang\u00e9s.</li> <li>\u00c9tat Loading : Un voisin envoie des LSR (Link State Requests) pour chaque r\u00e9seau qu'il ne conna\u00eet pas. L'autre voisin r\u00e9pond avec les LSU (Link State Updates) contenant des informations sur les r\u00e9seaux demand\u00e9s. Apr\u00e8s avoir re\u00e7u toutes les informations demand\u00e9es, l'autre voisin passe par le m\u00eame processus.</li> <li>\u00c9tat Full : Les deux routeurs ont une base de donn\u00e9es synchronis\u00e9e et sont compl\u00e8tement adjacents l'un \u00e0 l'autre.</li> </ol> <p>En r\u00e9sum\u00e9, chaque routeur communique la liste des r\u00e9seaux auxquels il est connect\u00e9 au moyen de messages Link-State Advertisements (LSA) propag\u00e9s progressivement \u00e0 tous les routeurs du r\u00e9seau. L'ensemble des LSA forme une base de donn\u00e9es d'\u00e9tat des liens (Link-State Database - LSDB) pour chaque zone (area), identique pour tous les routeurs de cette zone. Ensuite, chaque routeur utilise l'algorithme de Dijkstra (Shortest Path First), pour d\u00e9terminer la route la plus rapide vers chacun des r\u00e9seaux r\u00e9pertori\u00e9s dans la LSDB.</p> Messages LSA, LSU et LSR <p>Les messages LSA (Link-State Advertisments) sont utilis\u00e9s par les routeurs OSPF pour \u00e9changer des informations topologiques. Chaque LSA contient des donn\u00e9es de routage et de topologie, d\u00e9crivant ainsi une partie du r\u00e9seau OSPF.</p> <ul> <li>Lorsqu'il est d\u00e9cid\u00e9 d'\u00e9changer des routes entre deux voisins, ceux-ci envoient r\u00e9ciproquement une liste de tous les LSA pr\u00e9sents dans leur base de donn\u00e9es topologique respective.  </li> <li>Chaque routeur examine ensuite sa base de donn\u00e9es topologique et envoie un message LSR (Link-State Request) demandant tous les LSA qui ne se trouvent pas dans sa table de topologie.</li> <li>L'autre routeur r\u00e9pond avec le LSU (Link-State Update) contenant tous les LSA demand\u00e9s par son voisin.</li> </ul> <p> Source : nsi4noobs </p> <p>Dans l'exemple ci-dessus, apr\u00e8s l'initialisation d'OSPF sur les deux routeurs, ces derniers \u00e9changent des LSA pour d\u00e9crire leur base de donn\u00e9es topologique respective :</p> <ul> <li>Le routeur R1 envoie un en-t\u00eate LSA pour son r\u00e9seau directement connect\u00e9, le <code>10.0.1.0/24</code>.</li> <li>Le routeur R2 v\u00e9rifie sa base de donn\u00e9es topologique et constate qu'il ne poss\u00e8de pas d'informations sur ce r\u00e9seau. Il envoie alors un message de demande d'\u00e9tat de liaison (LSR) pour obtenir des d\u00e9tails suppl\u00e9mentaires sur ce r\u00e9seau.</li> <li>Le routeur R1 r\u00e9pond avec une mise \u00e0 jour de l'\u00e9tat de liaison (LSU) contenant des informations sur le sous-r\u00e9seau <code>10.0.1.0/24</code> (adresse du prochain saut, co\u00fbt, etc.).</li> </ul> <p>Organisation en zones</p> <p>Pour faciliter l'utilisation d'OSPF dans de vastes r\u00e9seaux, les routeurs sont organis\u00e9s de mani\u00e8re logique en zones, limitant la recherche de voisins, l'\u00e9change d'\u00e9tats de liens, et la d\u00e9couverte de la topologie aux routeurs d'une m\u00eame zone. Cette organisation suit une structure hi\u00e9rarchique simple, chaque zone ayant un num\u00e9ro unique.</p> <p> Topologie d'un r\u00e9seau de routeurs OSPF r\u00e9partis dans trois zones et avec des liaisons de communication de 10 ou 100 Mbit/s (extrait du Balabonski Terminale). </p> <p>La zone 0, appel\u00e9e Backbone, est obligatoire pour OSPF, agissant comme une zone centrale \u00e0 laquelle toutes les autres zones sont connect\u00e9es. Les routeurs ABR (Area Border Router) sont sp\u00e9cifiques \u00e0 cette architecture, \u00e9tant les seuls \u00e0 \u00eatre rattach\u00e9s \u00e0 deux zones (leur zone et la Backbone). Les autres routeurs ne sont rattach\u00e9s qu'\u00e0 une seule zone, communiquant exclusivement avec les routeurs de cette zone. Il existe \u00e9galement des routeurs qui connectent un r\u00e9seau OSPF \u00e0 d\u2019autres domaines de routage (r\u00e9seau EIGRP par exemple), on les appelle routeurs ASBR (Autonomous System Border Routers).</p> <p>Cette structure hi\u00e9rarchique entra\u00eene une cons\u00e9quence notable : pour \u00e9changer des paquets entre zones (c'est-\u00e0-dire avec des adresses source et destination situ\u00e9es dans des zones diff\u00e9rentes), les routeurs doivent in\u00e9vitablement diriger ces paquets vers leur routeur ABR pour sortir de leur zone. Cependant, les messages LSA \u00e9tant restreints \u00e0 une zone, les routeurs n'ont pas connaissance de la topologie du reste du r\u00e9seau, rendant impossible la d\u00e9termination de la meilleure route pour les paquets inter-zone. Les routeurs ABR jouent un r\u00f4le crucial dans ce contexte, communiquant les meilleures routes de leur zone \u00e0 toutes les autres zones via la Backbone. Ces informations, transmises \u00e0 travers la Backbone, sont essentielles pour permettre \u00e0 chaque routeur de calculer les chemins les plus courts pour l'ensemble du r\u00e9seau sans avoir une connaissance compl\u00e8te de sa topologie.</p> <p>Multidiffusion (multicast)</p> <p>Pour une diffusion plus efficace, un routeur envoie ses messages HELLO en multidiffusion (ou multicast) vers tous les routeurs de sa zone toutes les 10 secondes. En \u00ab \u00e9coutant \u00bb l'adresse <code>224.0.0.5</code> (qui est utilis\u00e9e par d\u00e9faut par le protocole OSPF), un routeur de la zone voit passer ces messages et peut y r\u00e9pondre s'il le souhaite.</p> <p>Une minuterie morte (dead timer) correspond \u00e0 quatre fois la valeur de l\u2019intervalle HELLO. Si un routeur sur un r\u00e9seau Ethernet ne re\u00e7oit pas au moins un paquet HELLO d\u2019un voisin OSPF pendant 40 secondes, il est d\u00e9clar\u00e9 \u201cnon fonctionnel\u201d (down) par les autres routeurs.</p> <p>Gestion des pannes et des modifications de r\u00e9seau</p> <p>Pour avoir une image fid\u00e8le de la topologie du r\u00e9seau, qui peut \u00e9voluer en fonction des pannes ou de l'ajout de nouveaux routeurs ou liens de communications, les routeurs s'\u00e9changent r\u00e9guli\u00e8rement des messages HELLO et LSA. Lorsqu'un routeur n'a pas de r\u00e9ponse d'un voisin qu'il conna\u00eet d\u00e9j\u00e0 au bout de 4 messages HELLO, ce voisin est consid\u00e9r\u00e9 comme \u00e9tant en panne.</p> Tableau des bandes passantes <p>Voici un tableau de quelques bandes passantes (BP) des liaisons de communication les plus courantes. Certaines de ces technologies sont asym\u00e9triques, cela signifie que leur bande passante ascendante (de l'utilisateur vers le fournisseur) est plus faible que la bande passante descendante (du fournisseur vers l'utilisateur).</p> <p> </p> Technologie BP descendante BP montante Modem 56 kbit/s 48 kbit/s Bluetooth 3 Mbit/s Ethernet 10 Mbit/s Wi-Fi 11 Mbit/s \u00e0 10 Gbit/s ADSL 13 Mbit/s 1 Mbit/s 4G 100 Mbit/s 50 Mbit/s Satellite 50 Mbit/s 1 Mbit/s FastEthernet 100 Mbit/s FFTH (Fibre) 10 Gbit/s Vid\u00e9os r\u00e9sumant le principe d'OSPF <p>Voici deux vid\u00e9os permettant de comprendre le principe d'un protocole \u00e0 \u00e9tat de liens, puis le principe sp\u00e9cifique du protocole OSPF :</p> <p></p> <p></p> <p>Voici une autre vid\u00e9o (qui d\u00e9passe le cadre du programme) montrant le principe d'OSPF, ainsi que les commandes permettant de configurer un r\u00e9seau utilisant ce protocole :</p> <p></p> Un exemple d'application <p>Pour illustrer le fonctionnement du protocole OSPF, prenons comme exemple le r\u00e9seau suivant :</p> <p> Topologie d'un r\u00e9seau de routeurs OSPF r\u00e9partis dans trois zones et avec des liaisons de communication de 10 ou 100 Mbit/s (extrait du Balabonski Terminale). </p> <p>Il est compos\u00e9 de 7 routeurs (R1 \u00e0 R7) connect\u00e9s par des liaisons de communication ayant des bandes passantes de 10 ou 100 Mbit/s.</p> <p>Les routeurs R1, R2 et R3 sont regroup\u00e9s dans la zone logique appel\u00e9e Zone 1, tandis que les quatre autres routeurs, R4 \u00e0 R7, appartiennent \u00e0 la zone appel\u00e9e Zone 2.</p> <p>La Zone 0, constitu\u00e9e des routeurs R3 et R4, joue respectivement le r\u00f4le de routeur ABR pour les zones 1 et 2.</p> <p>Pendant la phase d'initialisation, les routeurs re\u00e7oivent leurs identificateurs, choisis comme \u00e9tant les plus grandes adresses IP de leurs interfaces r\u00e9seau. Par exemple, si le routeur R1 est sur les sous-r\u00e9seaux <code>10.1.1.0/30</code> et <code>10.1.2.0/30</code>, son identificateur serait l'adresse IP de son interface sur <code>10.1.2.0/30</code> : supposons qu'il s'agit de <code>10.1.2.1</code>.</p> <p>Le tableau ci-dessous r\u00e9pertorie les identificateurs associ\u00e9s aux routeurs.</p> identificateur routeur R1 10.1.2.1 R2 10.1.3.1 R3 10.3.1.1 R4 10.2.5.1 R5 10.2.5.2 R6 10.2.4.2 R7 10.2.2.2 <p>Pour simplifier notre explication, nous utilisons les noms R1 \u00e0 R7 des routeurs au lieu de leurs identificateurs. </p> <p>Examinons d'abord comment le routeur R5 interagit avec ses voisins et construit sa vision de la topologie du r\u00e9seau.  </p> <ul> <li>Au d\u00e9marrage du protocole, R5 envoie des messages HELLO sur tous les sous-r\u00e9seaux auxquels il est connect\u00e9. Initiant une relation de voisinage d\u00e8s qu'il re\u00e7oit des r\u00e9ponses \u00e0 ses messages, R5 identifie ainsi ses voisins R4, R6 et R7. Ayant des informations sur la bande passante des liens vers ces trois routeurs, sa vision de la topologie du r\u00e9seau est la suivante :</li> </ul> Lien sous-r\u00e9seau co\u00fbt zone R5-R4 10.2.5.0/28 10 2 R5-R6 10.2.3.0/28 1 2 R5-R7 10.2.1.0/28 1 2 <ul> <li>Apr\u00e8s cette phase d'initialisation, les routeurs \u00e9changent des paquets LSA contenant les informations dont ils disposent sur la topologie du r\u00e9seau.</li> <li>R5 re\u00e7oit des informations de R4 sur leur liaison de communication avec R6. De m\u00eame, il compl\u00e8te sa vision de la topologie avec le lien entre R6 et R7, dont la description est fournie par les deux routeurs. Une fois ces \u00e9changes termin\u00e9s, la topologie du r\u00e9seau vue par R5 est d\u00e9finie ainsi :</li> </ul> Lien sous-r\u00e9seau co\u00fbt zone R5-R4 10.2.5.0/28 10 2 R5-R6 10.2.3.0/28 1 2 R5-R7 10.2.1.0/28 1 2 R4-R6 10.2.4.0/28 1 2 R6-R7 10.2.2.0/28 10 2 <ul> <li>Poss\u00e9dant maintenant la topologie compl\u00e8te de sa zone, R5 passe \u00e0 la troisi\u00e8me \u00e9tape du protocole, ex\u00e9cutant l'algorithme de Dijkstra pour d\u00e9terminer les chemins les plus courts entre lui et tous les autres routeurs de la zone 2 :</li> </ul> <p></p> <p>On constate qu'il est plus efficace pour R5 de passer par R6 pour atteindre R4 plut\u00f4t que d'utiliser le sous-r\u00e9seau <code>10.2.5.0/28</code>. En effet, le co\u00fbt du chemin R5 - R6 - R4 est seulement de 2 (co\u00fbt de 1 pour la liaison <code>10.2.3.0/28</code> entre R5 et R6, auquel s'ajoute un co\u00fbt de 1 pour le sous-r\u00e9seau <code>10.2.4.0/28</code> entre R6 et R4), tandis qu'il est de 10 pour la liaison directe entre R5 et R4.</p> <p>Ces plus courts chemins sont sp\u00e9cifiques \u00e0 la zone 2.</p> <p>Pour construire une table de routage pour l'ensemble du r\u00e9seau, le routeur R5 doit d'abord conna\u00eetre quel routeur de sa zone est charg\u00e9 de communiquer avec les autres zones. C'est lors de la phase d'initialisation de voisinage que R4 informe tous les routeurs de la zone 2 qu'il jouera le r\u00f4le de routeur ABR. Ainsi, R4 communique \u00e0 toutes les autres zones (via la zone 0) les plus courts chemins entre lui et les autres routeurs de la zone 2. Inversement, il re\u00e7oit les plus courts chemins de la zone 1, qu'il communique \u00e0 R5. De cette mani\u00e8re, R5 apprend, par exemple, qu'il existe une route avec un co\u00fbt de 3 pour atteindre R1 en passant par R4.</p> <p>En int\u00e9grant ces informations sur les meilleures routes de la zone 1 \u00e0 sa table de routage, il obtient la table suivante :</p> destination interface liaison co\u00fbt 10.2.1.0/28 fasteth1 1 10.2.3.0/28 fasteth0 1 10.2.4.0/28 10.2.3.1 fasteth0 2 10.2.5.0/28 10.2.3.1 fasteth0 2 10.3.1.0/30 10.2.3.1 fasteth0 3 10.1.2.0/30 10.2.3.1 fasteth0 5 10.1.3.0/30 10.2.3.1 fasteth0 4"},{"location":"terminale/routage/cours/#lalgorithme-de-dijkstra","title":"L'algorithme de Dijkstra","text":"<p>Voici une petite vid\u00e9o expliquant le principe de cet algorithme :</p> <p></p> Une exemple d'application <p>Prenons comme exemple le graphe suivant :</p> <p> Un graphe </p> <p>On souhaite d\u00e9terminer le plus court chemin allant du point A au point E.</p> <p>Tout au long de l\u2019algorithme, on va garder en m\u00e9moire le chemin le plus court depuis A vers chacun des autres sommets du graphe.</p> <p>Les distances minimales entre A et chaque autre sommet est initialis\u00e9e \u00e0 l\u2019infini, \u00e0 l\u2019exception de la distance entre A et A qui est initialis\u00e9e \u00e0 0.</p> <p>On r\u00e9p\u00e8te toujours le processus suivant :</p> <ol> <li>On choisit le sommet accessible de distance minimale par rapport \u00e0 A comme sommet \u00e0 explorer parmi les sommets n\u2019ayant pas encore \u00e9t\u00e9 explor\u00e9s. Au d\u00e9but, on choisira le sommet A, car la distance minimale entre A est A est la plus petite (0)</li> <li>\u00c0 partir de ce sommet, on explore ses sommets voisins et on met \u00e0 jour les distances minimales pour chacun. On ne met \u00e0 jour la distance que si elle est inf\u00e9rieure \u00e0 celle que l\u2019on avait stock\u00e9 auparavant. Par exemple, \u00e0 partir de A, on peut se rendre sur les sommets B et C. La distance A-B est de 135, ce qui est inf\u00e9rieur \u00e0 l\u2019infini. La nouvelle distance minimale entre A et B devient donc 135. La distance A-C est de 4, ce qui est inf\u00e9rieur \u00e0 l\u2019infini. La nouvelle distance minimale entre A et C devient 4.</li> <li>On continue jusqu\u2019\u00e0 ce que l\u2019on arrive au point d\u2019arriv\u00e9e ou bien que tous les sommets aient \u00e9t\u00e9 explor\u00e9s. Puis on renvoie enfin la distance minimale entre A et E qui a \u00e9t\u00e9 stock\u00e9e.</li> </ol> <p>Pour voir le d\u00e9roulement complet de l'algorithme de Dijkstra sur ce graphe :</p> <p></p>  T\u00e9l\u00e9charger <code>deroulement_Dijkstra.pdf</code> <p>Entrainement</p> <p>\u00c0 votre tour, ex\u00e9cutez l'algorithme de Dijkstra pour d\u00e9terminer la distance minimale entre le noeud A et tous les noeuds du graphe suivant :</p> <p> Un graphe </p>"},{"location":"terminale/routage/cours/#le-champ-ttl","title":"Le champ TTL","text":"<p>\u00c9tant donn\u00e9 que tous les r\u00e9seaux ne sont pas administr\u00e9s par des protocoles dynamiques tels que RIP ou OSPF, il est envisageable que des boucles de routage existent. C'est particuli\u00e8rement le cas dans des r\u00e9seaux o\u00f9 les tables sont configur\u00e9es manuellement (routage statique). Pour \u00e9viter qu'un paquet ne circule ind\u00e9finiment dans de tels sc\u00e9narios, les protocoles de communication comme IP ont mis en place un m\u00e9canisme bas\u00e9 sur un compteur de dur\u00e9e de vie.</p> <p>Ainsi, chaque paquet contient un octet appel\u00e9 TTL (Time To Live en anglais) qui sp\u00e9cifie le nombre de routeurs que le paquet peut encore traverser (la dur\u00e9e de vie initiale du paquet est fix\u00e9e par le protocole). \u00c0 chaque passage par un routeur, ce compteur est d\u00e9cr\u00e9ment\u00e9. Lorsqu'un routeur re\u00e7oit un paquet avec un compteur TTL \u00e0 <code>0</code>, il le d\u00e9truit. Cette m\u00e9thode garantit qu'un paquet ne peut pas errer ind\u00e9finiment dans le r\u00e9seau.</p> <p>Lors de l'ex\u00e9cution d'un ping, on peut sp\u00e9cifier le TTL souhait\u00e9 : <code>ping -c 1 -t n erwandemerville.fr</code> : envoie 1 paquet avec un TTL de <code>n</code>.</p>"},{"location":"terminale/routage/exercices/","title":"Exercices","text":""},{"location":"terminale/routage/exercices/#exercices","title":"Exercices","text":""},{"location":"terminale/routage/exercices/#exercice-de-rappels","title":"Exercice de rappels","text":"<p>Exercice - Composants dans un r\u00e9seau</p> <p>Identifiez les diff\u00e9rents composants du r\u00e9seau suivant :</p> <p></p> <p>A = <code>..........</code> B = <code>..........</code> C = <code>..........</code> D = <code>..........</code></p>"},{"location":"terminale/routage/exercices/#exercices-sur-le-protocole-rip","title":"Exercices sur le protocole RIP","text":"<p>Pour les exercices 1 et 3 suivants, on utilisera la figure suivante :</p> <p></p> Un exemple de r\u00e9seau (extrait du Balabonski Terminale) Fiche d'exercices sur RIP <p>Voici une fiche d'exercices portant sur quelques rappels de premi\u00e8re (trouver l'adresse d'un r\u00e9seau \u00e0 partir d'un masque, calculer le nombre d'adresses IP disponibles sur un r\u00e9seau) et sur le protocole RIP.</p> <ul> <li>Fiche d'exercices - Fiche d'exercices au format PDF.</li> <li>Correction fiche d'exercices - Fiche d'exercices corrig\u00e9e.</li> </ul> <p>Exercice 1</p> <p>On consid\u00e8re le r\u00e9seau de la figure pr\u00e9c\u00e9dente.</p> <p>Dans ce r\u00e9seau, les n\u0153uds A \u00e0 F sont des routeurs dont on veut calculer les tables de routage. On suppose que l'on a ex\u00e9cut\u00e9 le protocole RIP sur ce r\u00e9seau. Compl\u00e9ter la table suivante, qui indique pour chaque machine la portion de la table de routage pour la destination G.</p> <p>Attention, ici, pour simplifier, on a pas indiqu\u00e9 les adresses des r\u00e9seaux comme destinations (chose que l'on est cens\u00e9 faire normalement), mais les noms des routeurs qui sont directement reli\u00e9s \u00e0 ces r\u00e9seaux. M\u00eame chose pour les passerelles, on a indiqu\u00e9 les noms des routeurs plut\u00f4t que les adresses IP de leurs interfaces.</p> machine destination passerelle interface distance A G B G C G D G E G F G G G Correction exercice 1 machine destination passerelle interface distance A G B eth0 3 B G F eth0 2 C G B eth2 3 D G E eth1 3 E G F eth1 2 F G G eth1 1 G G (non indiqu\u00e9) 0 <p>Exercice 2</p> <p>On consid\u00e8re le r\u00e9seau de la figure pr\u00e9c\u00e9dente ainsi que le tableau trouv\u00e9 en solution de l'exercice 2.</p> <p>On suppose maintenant que le lien B-F tombe en panne.</p> <ol> <li>Quel est le vecteur de distance envoy\u00e9 par B \u00e0 ses voisins pour atteindre G, une fois qu'il d\u00e9tecte la panne (on suppose que les autres n\u0153uds n'ont pas modifi\u00e9 leurs tables de routage) ?</li> <li>Pour chacun des \u00e9v\u00e9nements suivants, dire lequel des quatre cas (\u00e9voqu\u00e9s dans le bloc \"Principe du protocole RIP\") du protocole RIP est appliqu\u00e9. On supposera, pour simplifier, qu'aucun autre \u00e9v\u00e9nement ne se produit entre-temps et qu'ils sont tous ex\u00e9cut\u00e9s \u00ab en s\u00e9quence \u00bb.<ol> <li>Les routeurs A et C re\u00e7oivent de B le vecteur trouv\u00e9 \u00e0 la question 1.</li> <li>Le routeur C retransmet ce m\u00eame vecteur \u00e0 D.</li> <li>Le routeur D transmet le vecteur <code>(G,3)</code> \u00e0 C.</li> </ol> </li> <li>Apr\u00e8s le dernier cas ci-dessus, quel vecteur est transmis par C \u00e0 A et B ?</li> </ol> Correction exercice 2 <p>Ici encore, pour simplifier, on \u00e9crira les vecteurs de distances avec les noms des routeurs plut\u00f4t que les adresses IP des r\u00e9seaux.</p> <ol> <li>B envoie le vecteur <code>(G, 16)</code>, indiquant ainsi que la route qu'il connaissait pour atteindre G est de taille \u00ab infinie \u00bb.</li> <li> <ol> <li>A et C re\u00e7oivent de B le vecteur <code>(G, 16)</code>. Ils re\u00e7oivent donc une route plus longue pour G de la part de leur voisin cens\u00e9 transmettre les paquets vers G (B est la passerelle de A et C). Nous sommes dans le cas 4. Les routeurs A et C mettent \u00e0 jour leur route vers G, de mani\u00e8re \u00e0 propager l'information de la panne (ils changent donc la distance en la rempla\u00e7ant par 16).</li> <li>C envoie le vecteur <code>(G, 16)</code> \u00e0 D. D poss\u00e8de une d\u00e9j\u00e0 une route pour G passant par E de distance 3. Il ignore donc cette information car la nouvelle route a une plus grande distance. Il s'agit du cas 3.</li> <li>C re\u00e7oit le vecteur <code>(G, 3)</code> de D. Il poss\u00e8de actuellement dans sa table de routage un chemin vers G passant par B et de longueur 16 (suite au vecteur <code>(G, 16)</code> qu'il avait re\u00e7u de B). Il remplace donc son ancien chemin vers G : la passerelle devient D (c'est-\u00e0-dire le routeur qui lui a transmis l'information) et la distance devient 4 (on incr\u00e9mente la distance re\u00e7ue).</li> </ol> </li> <li>Le routeur C envoie <code>(G, 4)</code> \u00e0 A et B. Ces derniers mettent \u00e0 jour leur table pour inscire la nouvelle information de routage : la route vers G passe maintenant par C et est de distance 5.</li> </ol>"},{"location":"terminale/routage/exercices/#exercices-de-conversion-dunites","title":"Exercices de conversion d'unit\u00e9s","text":"<p>Ecritures des unit\u00e9s utilis\u00e9es</p> <p>\ud83d\udc49 L'unit\u00e9 utilis\u00e9e pour le d\u00e9bit est le bit par seconde.  </p> <p>Vous rencontrerez trois \u00e9critures diff\u00e9rentes qui signifient la m\u00eame chose :  </p><ul> <li>b/s </li> <li> \\(\\text{b}.\\text{s}^{-1}\\)</li> <li> bps</li> </ul> QCM puissances - 1 <p>\\(10^0=\\)</p> Cocher la ou les affirmations correctesSolution <ul> <li>[ ] 0</li> <li>[ ] 1</li> <li>[ ] 10</li> <li>[ ] Autre r\u00e9ponse</li> </ul> <ul> <li> </li> <li> A savoir : \\(a^0=1\\)</li> <li> </li> <li> </li> </ul> QCM puissances - 2 <p>\\(\\dfrac{10^8}{10^6}=\\)</p> Cocher la ou les affirmations correctesSolution <ul> <li>[ ] 2</li> <li>[ ] 100</li> <li>[ ] 0.01</li> <li>[ ] Autre r\u00e9ponse</li> </ul> <ul> <li> </li> <li> \\(\\dfrac{10^8}{10^6}=10^{8-6}=10^{2}=100\\)</li> <li> </li> <li> </li> </ul> QCM puissances - 3 <p>\\(\\dfrac{10^6}{10^8}=\\)</p> Cocher la ou les affirmations correctesSolution <ul> <li>[ ] 2</li> <li>[ ] 100</li> <li>[ ] 0.01</li> <li>[ ] Autre r\u00e9ponse</li> </ul> <ul> <li> </li> <li></li> <li> \\(\\dfrac{10^6}{10^8}=10^{6-8}=10^{-2}=\\dfrac{1}{10^2}=\\dfrac{1}{100}=0.01\\)</li> <li> </li> </ul> QCM puissances - 4 <p>\\(\\dfrac{10^8}{50 \\times 10^6}=\\)</p> Cocher la ou les affirmations correctesSolution <ul> <li>[ ] 2</li> <li>[ ] 0.2</li> <li>[ ] 20</li> <li>[ ] Autre r\u00e9ponse</li> </ul> <ul> <li> \\(\\dfrac{10^8}{50 \\times 10^6}=\\dfrac{10^2 \\times 10^{6}}{50 \\times 10^6}=\\dfrac{100 \\times 10^{6}}{50 \\times 10^6}= 2\\)</li> <li></li> <li></li> <li> </li> </ul> Unit\u00e9s <p>Donner en bps (\\(\\text{b.s}^{-1}\\))</p> <p>a) 2 kbps</p> <p>b) 50 kbps</p> <p>c) 3 Mbps</p> <p>d) 50 Mbps</p> <p>e) 100 Mbps</p> <p>f) 1 Gbps</p> <p>g) 10 Gbps</p> Solution <p>a) 2 kbps = \\(2 \\times 10^3\\) bps = 2000 bps = 2000 b/s = 2000 \\(\\text{b.s}^{-1}\\)</p> <p>b) 50 kbps = \\(50 \\times 10^3\\) bps = 50000 bps = \\(5 \\times 10^4\\) bps  = \\(5 \\times 10^4\\) \\(\\text{b.s}^{-1}\\)</p> <p>c) 3 Mbps =  \\(3 \\times 10^6\\) bps = \\(3 \\times 10^6\\) b/s = \\(3 \\times 10^6\\) \\(\\text{b.s}^{-1}\\)</p> <p>d) 50 Mbps = \\(50 \\times 10^6\\) bps = \\(50 \\times 10^6\\) b/s =  \\(5 \\times 10^7\\) b/s = \\(5 \\times 10^7\\) \\(\\text{b.s}^{-1}\\)</p> <p>e) 100 Mbps = \\(100 \\times 10^6\\) bps = \\(10^2 \\times 10^6\\) bps = \\(10^8\\) bps = \\(10^8\\) b/s = \\(10^8\\) \\(\\text{b.s}^{-1}\\)</p> <p>f) 1 Gbps = \\(10^9\\) bps = \\(10^9\\) b/s = \\(10^9\\) \\(\\text{b.s}^{-1}\\)</p> <p>g) 10 Gbps = \\(10 \\times 10^{9}\\) bps = \\(10^{10}\\) b/s = \\(10^{10}\\) \\(\\text{b.s}^{-1}\\)</p> Exercice 1 <p>a) Calculer la m\u00e9trique OSPF d'une liaison Fibre avec une valeur de r\u00e9f\u00e9rence de \\(10^8\\) bps </p> <p>b) M\u00eame question avec une valeur de r\u00e9f\u00e9rence de \\(10^{10}\\) bps</p> Solution <p>a) \\(\\dfrac{10^8}{10^{10}}=10^{8-10}=10^{-2}=0.01\\)</p> <p>b) \\(\\dfrac{10^{10}}{10^{10}}=1\\)</p> Exercice 2 <p>a) Calculer la m\u00e9trique OSPF d'une liaison FastEthernet avec une valeur de r\u00e9f\u00e9rence de \\(10^8\\) bps </p> <p>b) M\u00eame question avec une valeur de r\u00e9f\u00e9rence de \\(10^{10}\\) bps</p> Solution <p>100 Mbps = \\(100 \\times 10^6=10^2 \\times 10^6=10^8\\) bps</p> <p>a) \\(\\dfrac{10^8}{10^8}=10^{8-8}=10^0=1\\)</p> <p>b) \\(\\dfrac{10^{10}}{10^8}=10^{10-8}=10^{2}=100\\)</p> Exercice 3 <p>a) Calculer la m\u00e9trique OSPF d'une liaison Ethernet (d\u00e9bit 10 Mbps) avec une valeur de r\u00e9f\u00e9rence de \\(10^8\\) bps </p> <p>b) M\u00eame question avec une valeur de r\u00e9f\u00e9rence de \\(10^{10}\\) bps</p> Solution <p>10 Mbps = \\(10 \\times 10^6=10 \\times 10^6=10^7\\) bps</p> <p>a) \\(\\dfrac{10^8}{10^7}=10^{8-7}=10^1=10\\)</p> <p>b) \\(\\dfrac{10^{10}}{10^7}=10^{10-7}=10^{3}=1000\\)</p> Exercice 4 <p>Que vaut la bande passante d'une liaison dont le co\u00fbt OSPF est de 50 avec une valeur de r\u00e9f\u00e9rence de \\(10^8\\).</p> Solution <p>\\(50 = \\dfrac{10^8}{x} \\Leftrightarrow 50x=10^8 \\Leftrightarrow x= \\dfrac{10^8}{50} = \\dfrac{100 \\times 10^6}{50} = 2 \\times 10^6\\)</p> <p>La bande passante est de 2 Mbps</p>"},{"location":"terminale/routage/exercices/#exercices-sur-le-protocole-ospf","title":"Exercices sur le protocole OSPF","text":"<p>Exercice 1</p> <p>On consid\u00e8re les d\u00e9bits de quelques liaisons :</p> <ul> <li>Ethernet : \\(10~Mbit/s\\)</li> <li>Bluetooth : \\(3~Mbit/s\\)</li> <li>FastEthernet : \\(100~Mbit/s\\)</li> <li>Fibre : \\(10~Gbit/s\\)</li> </ul> <p>Calculez le co\u00fbt correspondant \u00e0 chacun de ces d\u00e9bits.</p> <p>Exercice 2 - Recherche de plus court chemin</p> <p>Donner le plus court chemin pour aller de E \u00e0 F dans le graphe ci-dessous :</p> <p></p> <p>Exercice 3</p> <p>Le client 01 veut communiquer avec le serveur 02.</p> <p></p> <p></p><ul> <li>Les liens en vert sont en FastEthernet (100 mbps)</li> <li>Les lien oranges en Ethernet (10 mbps)</li> <li>Les liens rouges sont en 1 mbps</li> </ul> <p></p><ol> <li>Faire un graphe de cette situation, avec les co\u00fbts sur les ar\u00eates</li> <li>Donner le chemin le plus court avec le protocole OSPF entre 01 et 02. Quelle est la longueur de ce chemin ? Y'a-t-il plusieurs chemins \u00e9quivalents ?</li> </ol> <p>Exercice 4</p> <p></p><p>On donne le r\u00e9seau suivant (source : David Roche)</p> <p></p> <ol> <li> <p>En vous basant sur le protocole OSPF (vous mettrez en derni\u00e8re colonne \"m\u00e9trique\", ce qui correspond au co\u00fbt total pour arriver \u00e0 destination), d\u00e9terminez la table de routage du routeur A. On donne les d\u00e9bits suivants : </p><ul> <li>liaison routeur A - routeur B : 1 Mbps</li> <li>liaison routeur A - routeur C : 10 Mbps</li> <li>liaison routeur C - routeur B : 10 Mbps</li> <li>liaisons dans le r\u00e9seau 172.16.0.0/16 : 1 Mbps</li> <li>liaisons dans le r\u00e9seau 172.18.0.0/16 : 1 Mbps</li> <li>liaisons dans le r\u00e9seau 172.17.0.0/16 : 1 Mbps</li> </ul> </li> <li> <p>Quels sont les chemins qui seraient emprunt\u00e9s par un paquet pour aller du switch R1 au switch R2 et du switch R1 au switch R3 ?</p> </li> </ol>"},{"location":"terminale/routage/exercices/#autres-exercices","title":"Autres exercices","text":"<p>Exercice 1</p> <p>On consid\u00e8re le r\u00e9seau suivant :</p> <p> Un exemple de r\u00e9seau (extrait du Balabonski Terminale) </p> <p>Pour chacun des liens du r\u00e9seau, proposer une technologie r\u00e9seau faisant que, pour les n\u0153uds A,B et C, la route pour atteindre G soit diff\u00e9rente selon que l'on utilise OSPF ou RIP.</p> <p>Exercice 2</p> <p>On consid\u00e8re un r\u00e9seau ayant les propri\u00e9t\u00e9s suivantes :</p> <ul> <li>la distance entre deux n\u0153uds est toujours inf\u00e9rieure \u00e0 15 ;</li> <li>pour chaque paire de n\u0153uds <code>(A, B)</code>, il n'existe pas plusieurs chemins de m\u00eame taille entre A et B.</li> </ul> <p>On consid\u00e8re ce r\u00e9seau comme une unique zone backbone OSPF. Donner une condition suffisante pour qu'OSPF et RIP calculent les m\u00eame routes.</p> <p>Exercice 3</p> <p>Si l'on essaie d'ex\u00e9cuter plusieurs fois de suite la commande <code>traceroute - I &lt;url d'un site&gt;</code>, obtiendra t-on toujours le m\u00eame r\u00e9sultat ? (Vous pouvez faire des tests sur les sites de votre choix.)</p> <p>Justifier.</p>"},{"location":"terminale/routage/exercices/#sujets-de-bac","title":"Sujets de bac","text":"<p>Voici quelques sujets de bac pour vous entra\u00eener :</p> <ul> <li>2022, M\u00e9tropole, J2, Exercice 3</li> <li>2021, Sujet 0 n\u00b01, Exercice 5</li> </ul>"},{"location":"terminale/routage/tp_filius/","title":"TP Filius","text":""},{"location":"terminale/routage/tp_filius/#tp-filius","title":"TP Filius","text":"<p>Vous trouverez ici quelques sujets de travaux pratiques \u00e0 r\u00e9aliser avec le logiciel Filius. Filius est un logiciel de simulation de r\u00e9seaux informatiques simple, que vous pouvez t\u00e9l\u00e9charger sur cette page.</p> <p>Cisco Packet Tracer</p> <p>Filius est un logiciel facile d'acc\u00e8s et adapt\u00e9 \u00e0 la NSI, mais pas forc\u00e9ment totalement repr\u00e9sentatif du fonctionnement r\u00e9el d'un r\u00e9seau informatique. Il existe d'autres logiciels comme Cisco Packet Tracer qui permettent de simuler des r\u00e9seaux informatiques de mani\u00e8re plus r\u00e9aliste.</p> <p>TP issus d'exomorphisme.fr</p> <p>Voici deux TP \u00e0 r\u00e9aliser avec Filius issus du site exomorphisme.fr :</p> <p></p>  TP n\u00b01 - Adressage IP masque de sous\u2010reseau <p></p>  TP n\u00b02 - Routage <p>Ressources pour le TP n\u00b02 :</p> <ul> <li>TP2a.fls : fichier pour la partie A.</li> <li>TP2b.fls : fichier pour la partie B.</li> </ul> <p>Un autre TP</p> <p>Voici un autre TP contenant 4 exercices \u00e0 r\u00e9aliser sur Filius :</p> <p></p>  T\u00e9l\u00e9charger le TP <p>Ressources pour le TP :</p> <ul> <li>reseau_routeurs_etoile.fls : fichier pour l'exercice 3.</li> </ul>"},{"location":"terminale/routage/nsi-clemenceau/","title":"Index","text":""},{"location":"terminale/routage/nsi-clemenceau/#index","title":"Index","text":"Liste des contenus Description Rappels Rappels de premi\u00e8re. RIP Cours et exos sur RIP. OSPF Cours et exos sur OSPF."},{"location":"terminale/routage/nsi-clemenceau/1_routage_wims/","title":"Introduction","text":""},{"location":"terminale/routage/nsi-clemenceau/1_routage_wims/#i-quelques-rappels","title":"I. Quelques rappels","text":""},{"location":"terminale/routage/nsi-clemenceau/1_routage_wims/#modele-client-serveur","title":"Mod\u00e8le client-serveur","text":"<p>Mod\u00e8le client-serveur</p> <p>Les clients \u00e9changent des informations avec les serveurs. La notion de client recouvre aussi bien une machine, qu'une application. </p> <p>De m\u00eame le serveur d\u00e9signe aussi bien l'ordinateur qui h\u00e9berge un service que le logiciel qui fournit ce service.</p>"},{"location":"terminale/routage/nsi-clemenceau/1_routage_wims/#protocole","title":"Protocole","text":"<p>Protocole</p> <p>Les protocoles sont l'ensemble des r\u00e8gles utilis\u00e9es par les clients et les serveurs pour communiquer.</p>"},{"location":"terminale/routage/nsi-clemenceau/1_routage_wims/#paquets","title":"Paquets","text":"<p>Paquets</p> <p>Les informations \u00e9chang\u00e9es sont d\u00e9coup\u00e9es en paquets de petites tailles. Ces paquets sont envoy\u00e9s s\u00e9par\u00e9ment et transitent sur le r\u00e9seaux ind\u00e9pendamment les uns des    autres. Ils peuvent parvenir \u00e0 destination dans le d\u00e9sordre, le protocole doit donc pr\u00e9voir des fonctions pour reconstituer l'information. </p>"},{"location":"terminale/routage/nsi-clemenceau/1_routage_wims/#ii-routeurs-et-topologie-dun-reseau","title":"II. Routeurs et topologie d'un r\u00e9seau","text":"<p>En plus des clients et des serveurs, le r\u00e9seau est constitu\u00e9 de switchs (commutateurs) et de routeurs. Ces machines re\u00e7oivent et transmettent l'information vers la destination.</p> <p>Les clients et les serveurs communiquent avec les routeurs (Ethernet, wifi...)</p> <p></p> <p>Regarder la vid\u00e9o suivante</p> <p>architecture des r\u00e9seaux</p>"},{"location":"terminale/routage/nsi-clemenceau/1_routage_wims/#adresse-ip","title":"Adresse IP","text":"<p>Adresse IP</p> <p>\ud83d\udc49 Chaque machine sur le r\u00e9seau est identifi\u00e9e par une adresse IP. La norme actuelle est IPv4, la migration est en cours vers IPv6.</p> <p>Dans la norme IPv4 l'adresse est cod\u00e9e sur 32 bits (4 octets), soit 4 entiers de 0 \u00e0 255 (car 255 en base 10 s'\u00e9crit 1111 1111 en base 2)</p> <p>Exemple d'adresse IP : 168.1.2.10</p>"},{"location":"terminale/routage/nsi-clemenceau/1_routage_wims/#1-masque-de-sous-reseau","title":"1. Masque de sous r\u00e9seau","text":"<p>Masque de sous r\u00e9seau</p> <p>L'adresse IP est en r\u00e9alit\u00e9 compos\u00e9e de 2 parties : l'adresse du r\u00e9seau, et l'adresse de la machine sur le r\u00e9seau. </p> <p>\ud83d\udc49 Le masque permet de connaitre la partie r\u00e9serv\u00e9e \u00e0 l'adresse du r\u00e9seau.</p> <p>Masque de sous r\u00e9seau : notations</p> <p>Il existe deux fa\u00e7ons de noter le masque. </p> Premi\u00e8re notation possible avec l'adresse du masque <p>\ud83d\udca1 Premi\u00e8re notation possible : IP = 168.1.2.5   mask = 255.255.255.0 </p> <p>Dans cet exemple tr\u00e8s simple, les valeurs 255 indiquent la partie r\u00e9seau, les 0 indiquent la partie identifiant la machine sur le r\u00e9seau. </p> <p></p> <p>Dans l'exemple ci-dessus 168.1.2.0 est l'adresse du r\u00e9seau, seul le dernier nombre identifie une machine.</p> <p>Dans ce cas-l\u00e0, toute adresse 168.1.2.x identifiera une machine sur le r\u00e9seau. x peut prendre 256 valeurs, ce sous r\u00e9seau peut donc  connecter 254 machines car il y a deux adresses r\u00e9serv\u00e9es :  </p> <ul> <li>\ud83d\udc49 adresses r\u00e9serv\u00e9es 168.1.2.0 celle du r\u00e9seau, obtenue avec uniquement des 0 sur la plage d'adressage machines</li> <li>\ud83d\udc49 168.1.2.255 celle du broadcast (adresse r\u00e9serv\u00e9e pour une diffusion sur toutes les machines du r\u00e9seau) obtenue avec uniquement des 1 sur la plage d'adressage  machines.  </li> </ul> Deuxi\u00e8me notation possible : notation CIDR <p>\ud83d\udc49 On peut aussi noter le masque de la fa\u00e7on suivante : 168.1.2.0/24</p> <p>/24 indique que 24 bits sont utilis\u00e9s pour l'adresse r\u00e9seau. Les 8 bits restant codent donc l'adresse machine.</p> <p>\ud83d\ude00 On peut avec cette notation plus simple, utiliser une tr\u00e8s faible quantit\u00e9 d'information pour l'adresse machine. Cela est pr\u00e9conis\u00e9 pour un routeur, qui ne g\u00e8re g\u00e9n\u00e9ralement pas un tr\u00e8s grand nombre de machines.</p> <p>10.1.2.5/30 indiquera par exemple que l'adresse r\u00e9seau est cod\u00e9e sur 30 bits, seulement 2 bits (4 valeurs possibles) sont utilisables pour des machines. C'est tr\u00e8s    peu !</p>"},{"location":"terminale/routage/nsi-clemenceau/1_routage_wims/#un-exemple-detaille","title":"Un exemple d\u00e9taill\u00e9 :","text":"<p> Un exemple d\u00e9taill\u00e9</p> <p>Consid\u00e9rons la machine dont la configuration r\u00e9seau est : IP : 172.128.10.5 ; Masque : 255.255.192.0 . On \u00e9crit de fa\u00e7on plus courante : 172.128.10.5/18 On obtient l'adresse du sous r\u00e9seau avec l'op\u00e9rateur AND.  </p> <p>\u00c9crivons en binaire l'adresse IP et le masque : \\(172.128.10.5\\) s'\u00e9crit en binaire :  \\(10101100.10000000.00001010.00000101\\) \\(255.255.192.0\\) s'\u00e9crit en binaire : \\(11111111.11111111.11000000.00000000\\) </p> <p>Posons l'op\u00e9ration du ET logique entre l'adresse IP de la machine et le masque :  </p> <p></p> <p>On met en d\u00e9cimal le r\u00e9sultat : \\(172.128.0.0\\)  est l'adresse du r\u00e9seau.  </p> <p>La seconde partie nous permet de savoir combien de machines peut contenir ce r\u00e9seau. On peut aller de \\(000000.00000000\\) \u00e0 \\(111111.11111111\\). En d\u00e9cimal : de 0 \u00e0 16383. C'est \u00e0 dire 16384 adresses possibles...  </p> <p>\ud83c\udf35 Enfin pas tout \u00e0 fait :</p> <ul> <li>Il faut retirer l'adresse du r\u00e9seau lui-m\u00eame : \\(172.128.0.0\\) </li> <li>Il faut \u00e9galement retirer (la derni\u00e8re ) l'adresse de broadcast :  \\(10101100.10000000.00111111.11111111\\) c'est \u00e0 dire l'adresse \\(172.128.63.255\\)</li> </ul> <p>Donc en tout : on peut connecter 16382 machines dans ce r\u00e9seau.</p> Exercice papier <p>On donne l'adresse IP d'un mat\u00e9riel suivante : Adresse IP : 192.168.1.100/20  </p> <p>D\u00e9terminer : </p> <ol> <li>le masque de sous-r\u00e9seau</li> <li>l'adresse du r\u00e9seau</li> <li>le nombre de machines que l'on peut connecter \u00e0 ce r\u00e9seau</li> <li>l'adresse broadcast</li> <li>l'adresse IP de la premi\u00e8re machine</li> <li>l'adresse IP de la derni\u00e8re machine</li> </ol> Solution <p>Adresse IP : 192.168.1.100/20 En binaire : 11000000.10101000.00000001.01100100</p> <ol> <li> <p>Le masque de sous-r\u00e9seau est : 11111111.11111111.11110000.00000000 c'est \u00e0 dire en d\u00e9cimal : 255.255.240.0  </p> </li> <li> <p>L'adresse du r\u00e9seau :   11000000.10101000.00000001.01100100    AND 11111111.11111111.11110000.00000000  \ud83d\udc49 L'adresse du r\u00e9seau est donc : 1100000.10101000.00000000.00000000 c'est \u00e0 dire en d\u00e9cimal : 192.168.0.0   </p> </li> <li> <p>Le nombre de machines que l'on peut connecter \u00e0 ce r\u00e9seau : La derni\u00e8re adresse possible pour la plage r\u00e9serv\u00e9e aux adresses machines est 1111  11111111 On peut donc connecter \\(2^{12} -2  = 4094\\) machines</p> </li> <li> <p>L'adresse broadcast est donc 11000000.10101000.00001111.11111111 C'est \u00e0 dire en d\u00e9cimal : 192.168.15.255  </p> </li> <li> <p>L'adresse IP de la premi\u00e8re machine est 11000000.10101000.00000000.00000001 C'est \u00e0 dire en d\u00e9cimal : 192.168.0.1  </p> </li> <li> <p>L'adresse IP de la derni\u00e8re machine est  11000000.10101000.00001111.11111110 C'est \u00e0 dire en d\u00e9cimal : 192.168.15.254  </p> </li> </ol>"},{"location":"terminale/routage/nsi-clemenceau/1_routage_wims/#deux-routeurs-lies-par-un-cable","title":"Deux routeurs li\u00e9s par un c\u00e2ble","text":"<p>Attention</p> <p>\ud83c\udf35 M\u00eame si entre deux routeurs, il n\u2019y a rien d\u2019autre qu\u2019un c\u00e2ble, ce c\u00e2ble constitue un r\u00e9seau. En pratique ce r\u00e9seau pourrait avoir pour masque 255.255.255.252 (en CIDR /30) . Sur un tel r\u00e9seau, il n\u2019y a donc que quatre adresses possibles. Etant donn\u00e9 que deux sont prises pour le r\u00e9seau et le broadcast, il n\u2019en reste que deux pour connecter des mat\u00e9riels. Ce seront donc les deux adresses IP des routeurs, qui se termineront donc forc\u00e9ment par .1 et .2 (l\u2019adresse se terminant par .0 \u00e9tant celle du r\u00e9seau, et celle se terminant par .3 celle du broadcast)  </p>"},{"location":"terminale/routage/nsi-clemenceau/1_routage_wims/#iii-tables-de-routages","title":"III. Tables de routages","text":"<p>Table de routage</p> <p>Lorsqu'un routeur re\u00e7oit un paquet, il doit l'analyser pour savoir o\u00f9 l'envoyer. Pour le savoir, il utilise une table de routage. Les tables de routage sont des informations stock\u00e9es dans le routeur permettant d'aiguiller intelligemment les donn\u00e9es qui lui sont transmises. Dans le r\u00e9seau ci-dessous, si l'ordinateur d'adresse \\(192.168.0.5\\) veut interroger le serveur \\(10.7.3.8\\) :  </p> <ul> <li>l'adresse \\(10.7.3.8\\) n'\u00e9tant pas dans le sous-r\u00e9seau F (d'adresse \\(192.168.0.0\\) / \\(24\\)), la requ\u00eate est confi\u00e9e au routeur via son adresse passerelle  dans le r\u00e9seau F (ici \\(192.168.0.254\\)).</li> <li>le routeur observe si l'IP recherch\u00e9e appartient \u00e0 un autre des sous-r\u00e9seaux auquel il est connect\u00e9. Ici, l'IP recherch\u00e9e \\(10.7.3.8\\) n'appartient ni au sous-r\u00e9seau A ou E. </li> <li>le routeur va donc regarder dans sa table de routage l'adresse passerelle d'un autre routeur vers qui il doit rediriger les donn\u00e9es. </li> <li>Si le sous-r\u00e9seau C fait partie de sa table de routage, le routeur R1 saura alors que le meilleur chemin est (par exemple) de confier les donn\u00e9es au routeur R3.</li> <li>Si le sous-r\u00e9seau C ne fait pas partie de la table de routage, le routeur R1 va alors le rediriger vers une route \u00abpar d\u00e9faut\u00bb (que l'on peut assimiler au panneau \u00abtoutes directions\u00bb sur les panneaux de signalisation).</li> </ul> Note <p>\ud83d\udc49A la place de \"passerelle\", vous trouverez souvent le mot anglais \"gateway\"</p> <p> Plusieurs r\u00e9seaux</p> <p></p> <p>Il y a plusieurs possibilit\u00e9s. Par exemple, regardons la table de routage  du routeur R1.  </p> <p>\ud83d\udc49 A priori, on ne met pas de passerelle pour les r\u00e9seaux auxquels le routeur R1 est directement connect\u00e9.</p> <p> Table de routage de R1 </p> Destination    Passerelle   Interface  192.168.0.0 /24 192.168.0.254 ou i1 172.17.1.0 /24 172.17.1.254 ou i2 10.0.5.0 /24 10.0.5.152 ou i3 10.5.2.0 /24 172.17.1.1 172.17.1.254 ou i2 10.7.3.0 /24 10.0.5.135 10.0.5.152 ou i3 <p>R\u00e9sum\u00e9</p> <p>L\u2019interface c\u2019est l\u2019adresse de la carte r\u00e9seau par o\u00f9 on sort, la passerelle (gateway) c\u2019est le prochain endroit (adresse de la carte r\u00e9seau du routeur) o\u00f9 on va. Les interfaces ne sont pas identifi\u00e9es par leur adresse IP mais par leur nom (qui peut \u00eatre de la forme eth0, wlo1, i1, etc.). Dans les sujets d'exercices, on peut     trouver les interfaces identifi\u00e9es par leur adresse IP.</p> <p>\ud83d\udca1 Comment sont construites les tables de routage ?</p> <ul> <li>Soit \u00e0 la main par l'administrateur r\u00e9seau, quand le r\u00e9seau est petit : on parle alors de table statique.</li> <li>Soit de mani\u00e8re dynamique : les r\u00e9seaux s'envoient eux-m\u00eames des informations permettant de mettre \u00e0 jour leurs tables de routages  respectives. Des algorithmes de d\u00e9termination de meilleur chemin sont alors utilis\u00e9s : nous allons en d\u00e9couvrir deux, le protocole RIP (peu utilis\u00e9)  et le protocole OSPF.</li> </ul> <p> Reprenons notre exemple :</p> <p></p><p> l'ordinateur d'adresse \\(192.168.0.5\\) veut interroger le serveur \\(10.7.3.8\\) : Le protocole RIP va permettre d'\u00e9tablir la route avec le plus faible nombre de sauts. Cela signifie que la route choisie sera celle qui passe par le plus faible nombre de routeurs. Dans notre exemple, le chemin choisi sera donc R1 - R3  </p> <p> Le protocole OSPF tient compte des vitesses de transmission, et permet de d\u00e9terminer la route la plus rapide en temps de transmission,  qui n'est donc pas n\u00e9cessairement celle avec le plus faible nombre de sauts. </p>  Source : Gilles LASSUS  <p>Pourquoi des protocoles ?</p> <p></p><p> Il pourrait sembler simple de configurer les routeurs \u00e0 la main. On indiquerait par exemple \u00e0 R3 ou envoyer les paquets selon les destinations. En cas de changement du r\u00e9seau (ajout d'un nouveau routeur, panne d'un routeur, etc...) il faudrait alors maintenir \u00e0 la main la table de routage. Cela serait sans doute faisable dans un tout petit r\u00e9seau, mais le nombre de routeurs d'un r\u00e9seau est g\u00e9n\u00e9ralement beaucoup trop grand pour qu'on puisse envisager cela, m\u00eame avec un nombre important d'humains passant leur temps \u00e0 communiquer entre eux les changements pour mettre \u00e0 jour les tables. </p> <p> Il est donc n\u00e9cessaire que les routeurs maintiennent leur tables \u00e0 jour de fa\u00e7on automatique. C'est ce \u00e0 quoi servent les protocoles de routage. </p> <p>Les approches possibles</p> <p></p><p>On pourrait imaginer plusieurs fa\u00e7ons d'aborder le probl\u00e8me :</p> <ul> <li>Le routage al\u00e9atoire : Les routeurs pourraient tr\u00e8s bien envoyer les paquets \u00e0 un de leurs voisins choisi de fa\u00e7on al\u00e9atoire, en esp\u00e9rant que, t\u00f4t ou tard, le paquet   arrivera \u00e0 destination. Cela peut sembler idiot, mais m\u00eame un tel protocole peut dans certaines situations critiques se r\u00e9v\u00e9ler la  meilleure option. C'est le cas si le r\u00e9seau contient peu de machines, et que les connections sont tr\u00e8s instables. Dans de telles conditions chercher \u00e0 conserver une carte du r\u00e9seau efficace serait illusoire.</li> <li>Le routage centralis\u00e9 : chaque routeur indique de fa\u00e7on p\u00e9riodique l'\u00e9tat de ses connexions avec ses voisins. Le routeur central dispose ainsi de toutes les informations et peut en retour indiquer aux routeurs les routes optimales. Ce syst\u00e8me serait le plus efficace mais il a un gros d\u00e9faut : il faut que tous les routeurs puissent communiquer avec le routeur central, et cela \u00e0 tout moment. Une panne de liaison d'un ou plusieurs routeurs aboutira \u00e0 une cartographie erron\u00e9e. Pire encore, le routeur central lui m\u00eame peut tomber en panne, paralysant alors le r\u00e9seau. </li> <li>Le routage par apprentissage de proche en proche : les routeurs ne communiquent qu'avec leurs voisins. Chacun donne \u00e0 tous ses voisins la liste de ses voisins, et re\u00e7oit en retour la m\u00eame liste. Il ajoute alors dans sa table la liste des voisins de ses voisins (en \u00e9liminant ceux qu'il a d\u00e9j\u00e0 en voisin lui m\u00eame). Pour chaque destination, il ajoute l'information sur la distance. Il pourra transmettre sa nouvelle table ainsi mise \u00e0 jour, et le processus continuera par \u00e9tape jusqu'\u00e0 ce que tous les routeurs puissent  calculer les routes vers tout les autres.  Chaque routeur testera p\u00e9riodiquement les connexions avec ses voisins. Si une nouvelle connexion apparait, ou si une connexion existante disparait, il mettra \u00e0 jour sa table, et il transmettra l'information \u00e0 ses voisins. De proche en proche, la modification du r\u00e9seau sera ainsi r\u00e9percut\u00e9e dans les tables de routages de tous les routeurs. </li></ul>"},{"location":"terminale/routage/nsi-clemenceau/1_routage_wims/#iv-la-route-par-defaut-00000","title":"IV. La route par d\u00e9faut : 0.0.0.0/0","text":"<p>0.0.0.0</p> <p>Dans le contexte de routage, 0.0.0.0 (ou 0.0.0.0/0 en notation CIDR) signifie g\u00e9n\u00e9ralement la route par d\u00e9faut.</p> <p>Wikipedia Table de routage : </p> <p>La route par d\u00e9faut indiquera comment acheminer le trafic qui ne correspond \u00e0 aucune entr\u00e9e dans la table de routage. En l\u2019absence de route par d\u00e9faut, le routeur \u00e9liminera un paquet dont la destination n\u2019est pas connue. \u00bb</p> <p>La destination 0.0.0.0/0 repr\u00e9sente donc souvent \"le reste d'internet\", plut\u00f4t qu'une adresse du r\u00e9seau local.</p> <p>Exemple</p> <p>Table de routage d'un ordinateur sous Windows 7 obtenue avec la commande route print</p> <p></p> <p></p><p>Cette table peut se d\u00e9composer de la mani\u00e8re suivante :</p> <ul> <li>Destination : Plage d'adresse de destination d\u00e9termin\u00e9e par le couple Destination r\u00e9seau / Masque r\u00e9seau</li> <li>Adresse passerelle : Adresse du routeur qui permet d'atteindre le r\u00e9seau de destination.</li> <li>Adresse interface : Carte r\u00e9seau \u00e0 utiliser pour contacter le routeur mentionn\u00e9 dans \"Adresse passerelle\".</li> <li>M\u00e9trique : Indique le co\u00fbt relatif de l'itin\u00e9raire pour atteindre la destination</li> </ul> <p>Si on exclu les informations de broadcast, loopback et multicast, la table pr\u00e9c\u00e9dente peut se r\u00e9sumer \u00e0 : </p> <p></p> <p>L'ordre de traitement de la table de routage va des masques les plus longs aux plus petits. C'est \u00e0 dire que le routeur va d'abord comparer les sous-r\u00e9seaux avec le masque 255.255.255.255 pour finir par comparer les sous-r\u00e9seaux avec le masque 0.0.0.0.</p> <p></p><p>La table de routage simplifi\u00e9e ci-dessus peut se traduire ainsi (dans l'ordre de traitement) :</p> <ol> <li>Route vers l'ordinateur lui-m\u00eame, \"Destination r\u00e9seau\" et \"Adresse interface\" ont la m\u00eame valeur. On remarquera le masque enti\u00e8rement \u00e0 255 (/32 en CIDR) qui permet de d\u00e9signer un r\u00e9seau (une plage) limit\u00e9e \u00e0 une seule adresse.</li> <li>Route vers le r\u00e9seau local sur lequel est connect\u00e9 l'ordinateur. \"On-link\" indique que l'ordinateur est directement connect\u00e9 au r\u00e9seau concern\u00e9, il n'y a donc pas besoin de routeur pou l'atteindre.</li> <li>Route par d\u00e9faut 0.0.0.0/0.0.0.0 : c'est la route utilis\u00e9e si aucune autre route possible n'a \u00e9t\u00e9 trouv\u00e9e dans la table de routage.  </li> </ol> <p>Source :  https://www.electro-info.ovh/index.php?id=137</p> \ud83d\udcbb A vous de jouer chez vous : <p></p><p>Sur votre ordinateur personnel, chez vous, dans la barre de recherche du bas, saisissez cmd, puis une fois l'invite de commande  apparue, saisissez  route print   Essayez de comprendre ce qui s'affiche.</p> <p></p><p>Remarque sous GNU/Linux, la commande route -n  renvoie le m\u00eame style de tableaux.</p>"},{"location":"terminale/routage/nsi-clemenceau/2_RIP/","title":"Protocole RIP","text":""},{"location":"terminale/routage/nsi-clemenceau/2_RIP/#i-protocole-rip-a-vecteur-de-distance","title":"I. Protocole RIP \u00e0 vecteur de distance","text":"RIP <p>RIP : Routing Information Protocol</p> Auteur <p>Le document qui suit sur le protocole RIP a \u00e9t\u00e9 r\u00e9alis\u00e9 d'apr\u00e8s le site r\u00e9alis\u00e9 par Olivier LECLUSE </p> <p>Vecteur de distance</p> <p>Le protocole RIP rentre dans la cat\u00e9gorie des protocoles \u00e0 vecteur de distance. Un vecteur de distance est un couple (adresse, distance).</p> <p>Le principe simplifi\u00e9 de ce protocole est de chercher \u00e0 minimiser le nombre de routeurs \u00e0 traverser pour atteindre la destination (on minimise le nombre de sauts)</p> <p>Principe g\u00e9n\u00e9ral de l'algorithme</p> <p>\ud83c\udfc3\u200d\u2640\ufe0f Chaque routeur re\u00e7oit en permanence (toutes les 30 secondes environ) de ses voisins les informations de routage qu'ils poss\u00e8dent. Il va    alors exploiter ces informations pour se construire lui-m\u00eame sa table de routage en ne retenant que les informations les plus pertinentes : une simple comparaison permet de ne garder que le chemin le plus avantageux. Il transmettra a son tour ces informations \u00e0 ses voisins et ainsi de suite.</p> <p>C'est l'algorithme de Belman-Ford : un des algorithmes de recherche de plus court chemin dans un graphe.</p> <p>\ud83c\udfc3\u200d\u2640\ufe0f A l'issue de quelques \u00e9tapes, les tables se stabilisent et le routage est pleinement op\u00e9rationnel. Le temps n\u00e9cessaire \u00e0 la stabilisation des tables est proportionnel au diam\u00e8tre du graphe mod\u00e9lisant le r\u00e9seau (c'est \u00e0 dire au nombre maximal d'\u00e9tapes n\u00e9cessaires pour relier deux points quelconques du r\u00e9seau).</p> <p>\ud83d\udc53 Regardez cette vid\u00e9o de Claude Chaudet (Institut Mines-T\u00e9l\u00e9com) qui expose le principe du routage \u00e0 vecteur de distance.</p> <p>Quand un routeur ne r\u00e9pond plus</p> <p>Quand un routeur ne r\u00e9pond plus, il n\u2019est pas supprim\u00e9 de la table, quelle qu\u2019en  soit la raison (routeur d\u00e9fectueux, c\u00e2ble coup\u00e9, carte ethernet HS, etc.). </p> <p>Avec le protocole RIP, le nombre de saut dans la table passe juste \u00e0 16.</p>"},{"location":"terminale/routage/nsi-clemenceau/2_RIP/#ii-exemple","title":"II. Exemple:","text":"<p>Consid\u00e9rons le r\u00e9seau suivant qui relie deux r\u00e9seaux d'une entreprise :</p> <ul> <li>le r\u00e9seau 1 contient des postes de travail dans un bureau.</li> <li>le r\u00e9seau 2 contient un serveur dans un centre de donn\u00e9es.</li> </ul> <p>Les routeurs R1 et R6 permettent d'acc\u00e9der au r\u00e9seau de l'entreprise, R2, R3, R4 et R5, des routeurs internes au r\u00e9seau. </p> <p></p> <p>Nous allons nous int\u00e9resser \u00e0 l'\u00e9volution des tables de routage des routeurs R1 et R3 sur lesquels on a activ\u00e9 le protocole RIP</p> <p>Vous pouvez t\u00e9l\u00e9charger l'image de ce r\u00e9seau ici : \"Clic droit\", puis \"Enregistrer la cible du lien sous\"</p>"},{"location":"terminale/routage/nsi-clemenceau/2_RIP/#etape-0","title":"\u00c9tape 0","text":"<p>Au d\u00e9marrage, les routeurs R1 et R3 ne connaissent que leurs voisins proches. Leurs tables peuvent donc ressembler \u00e0 ceci :</p> <p> Attention : La \"distance\" (ou nombre de sauts) peut \u00eatre consid\u00e9r\u00e9e comme le nombre d'arr\u00eates (c'est le cas ci-dessous)  ou comme le nombre de routeurs travers\u00e9s (dans ce cas, il faut retrancher 1 dans la colonne nombre de saut ci-dessous). Comme souvent, vous pourrez rencontrer les 2 conventions. La plus commune est de compter le nombre de routeur travers\u00e9s. </p> <p>Routeur R1</p> destination passerelle interface Nb sauts remarques 192.168.1.0 wifi0 1 ==&gt; vers les postes de travail 172.16.0.0 eth0 1 ==&gt; vers R3 <p>Au d\u00e9part, R1 ne peut atteindre que ses voisins imm\u00e9diats (nb Sauts vaut 1). Aucune passerelle n'est  n\u00e9cessaire puisque la communication est directe. Chaque sous r\u00e9seau utilise une interface sp\u00e9cifique.  Le r\u00e9seau local 1 contenant les postes de travail est accessible en wifi.</p> <p></p><p>Routeur R3</p> <p>En ce qui concerne le routeur 3, celui-ci poss\u00e8de 4 interfaces r\u00e9seau filaires, que nous nommerons eth0-3 qui  permettent d'atteindre les routeurs imm\u00e9diats (R1, R2, R4 et R5). Voici \u00e0 quoi peut ressembler sa table de routage au d\u00e9marrage :</p> destination passerelle interface Nb sauts remarques 172.16.0.0 eth0 1 ==&gt; vers R1 172.16.1.0 eth1 1 ==&gt; vers R2 172.16.6.0 eth2 1 ==&gt; vers R5 172.16.3.0 eth3 1 ==&gt; vers R4"},{"location":"terminale/routage/nsi-clemenceau/2_RIP/#etape-1","title":"\u00c9tape 1","text":"<p>Au bout de 30 secondes, un premier \u00e9change intervient avec les voisins imm\u00e9diats de chacun des routeurs.</p> <p>Le principe de l'algorithme</p> <p>Lorsqu'un routeur re\u00e7oit une nouvelle route de la part d'un voisin, 4 cas sont envisageables :</p> <ul> <li>Il d\u00e9couvre une route vers un nouveau r\u00e9seau inconnu \ud83d\udc49 Il l'ajoute \u00e0 sa table.  </li> <li>Il d\u00e9couvre une route vers un r\u00e9seau connu, plus courte que celle qu'il  poss\u00e8de dans sa table  \ud83d\udc49 Il actualise sa table.</li> <li>Il d\u00e9couvre une route vers un r\u00e9seau connu plus longue que celle qu'il  poss\u00e8de dans sa table  \ud83d\udc49 Il ignore cette route.</li> <li>Il re\u00e7oit une route vers un r\u00e9seau connu en provenance d'un routeur  d\u00e9j\u00e0 existant dans sa table \ud83d\udc49 Il met \u00e0 jour sa table car la topologie du r\u00e9seau a \u00e9t\u00e9 modifi\u00e9e.</li> </ul> <p>En appliquant ces r\u00e8gles, voici la table de routage de R1 apr\u00e8s une \u00e9tape :</p> <p> Routeur R1</p> destination passerelle interface Nb sauts remarques 192.168.1.0 wifi0 1 ==&gt; vers les postes de travail 172.16.0.0 eth0 1 ==&gt; vers R3 172.16.1.0 172.16.0.3 eth0 2 Ces 3 routes 172.16.6.0 172.16.0.3 eth0 2 proviennent 172.16.3.0 172.16.0.3 eth0 2 de R3 <p> 172.16.0.3 est l'adresse IP du routeur R3.  On ajoute \u00e0 la table pr\u00e9c\u00e9dente les r\u00e9seaux atteignables par R3. On pense cependant \u00e0 ajouter 1 au nombre de sauts ! Si R1 veut atteindre le r\u00e9seau 172.16.3.0, il s'adressera \u00e0 R3 et atteindra le r\u00e9seau cible en 2 sauts.</p> <p>Voici la table de R3 qui s'enrichit des informations envoy\u00e9es par R1 afin d'atteindre le r\u00e9seau local, mais aussi des informations en provenance de R2, R4 et R5. Il d\u00e9couvre ainsi 4 nouveaux r\u00e9seaux.</p> <p> Routeur R3</p> destination passerelle interface Nb sauts remarques 172.16.0.0 eth0 1 172.16.1.0 eth1 1 172.16.6.0 eth2 1 172.16.3.0 eth3 1 192.168.1.0 172.16.0.1 eth0 2 re\u00e7u de R1 172.16.2.0 172.16.1.2 eth1 2 re\u00e7u de R2 172.16.5.0 172.16.6.5 eth2 2 re\u00e7u de R5 172.16.4.0 172.16.3.4 eth3 2 re\u00e7u de R4"},{"location":"terminale/routage/nsi-clemenceau/2_RIP/#derniere-etape","title":"Derni\u00e8re \u00e9tape","text":"<p>Comme vous le voyez, les tables deviennent vite longues et \u00e9num\u00e9rer dans le d\u00e9tail chacune d'elle est trop long. \ud83d\udca8 On va donc passer directement \u00e0 l'\u00e9tape finale . Voici ce que contient la table de routage de R1 :</p> <p> Routeur R1</p> destination passerelle interface Nb sauts remarques 192.168.1.0 wifi0 1 ==&gt; vers les postes de travail 172.16.0.0 eth0 1 ==&gt; vers R3 172.16.1.0 172.16.0.3 eth0 2 172.16.6.0 172.16.0.3 eth0 2 172.16.3.0 172.16.0.3 eth0 2 172.16.2.0 172.16.0.3 eth0 3 172.16.4.0 172.16.0.3 eth0 3 172.16.5.0 172.16.0.3 eth0 3 obtenu \u00e0 l'\u00e9tape 2 192.168.2.0 172.16.0.3 eth0 4 obtenu \u00e0 l'\u00e9tape 3 <p>Comme vous le voyez, le routeur R1 est \u00e0 pr\u00e9sent en capacit\u00e9 d'acheminer un paquet du poste de travail du r\u00e9seau 1 vers le serveur se trouvant dans le r\u00e9seau 2.</p>"},{"location":"terminale/routage/nsi-clemenceau/2_RIP/#iii-fonctionnement","title":"III. Fonctionnement","text":""},{"location":"terminale/routage/nsi-clemenceau/2_RIP/#detection-des-pannes","title":"D\u00e9tection des pannes","text":"<p>D\u00e9tection des pannes</p> <p>Le protocole RIP est en mesure de d\u00e9tecter des pannes : Si un routeur ne re\u00e7oit pas d'information de la part d'un de ses voisins au bout d'un temps de l'ordre de 3 minutes (configurable) il va consid\u00e9rer que ce lien est mort et en informer ses voisins en indiquant un nombre de sauts \u00e9gal \u00e0 16. Puisque RIP ne g\u00e8re que 15 sauts au maximum, 16 peut \u00eatre consid\u00e9r\u00e9 comme une distance infinie.</p> <p>De cette mani\u00e8re, les voisins vont pouvoir recalculer leurs routes en cons\u00e9quence en \u00e9vitant le lien qui est tomb\u00e9.</p>"},{"location":"terminale/routage/nsi-clemenceau/2_RIP/#detection-des-boucles","title":"D\u00e9tection des boucles","text":"<p>D\u00e9tection des boucles</p> <p>RIP impl\u00e9mente d'autres m\u00e9canismes pour emp\u00eacher que se forment des boucles de routage **. Une boucle est par exemple une route du type : R2 -&gt; R3 -&gt; R5 -&gt; R2. Des exemples de tels m\u00e9canismes sont :</p> <ul> <li>une dur\u00e9e de vie limit\u00e9e sur les paquets (TTL) afin qu'un paquet qui tourne en rond soit d\u00e9truit</li> <li>ne pas renvoyer une information vers un routeur si celle-ci est d\u00e9j\u00e0 pass\u00e9e par ce routeur</li> </ul> <p>  - Olivier Lecluse</p>"},{"location":"terminale/routage/nsi-clemenceau/2_RIP/#distance-maximale","title":"Distance maximale","text":"<p>Distance maximale</p> <p>Il serait tr\u00e8s couteux de propager les tables de routages \u00e0 tous les voisins d'un tr\u00e8s grand r\u00e9seau. Dans le protocole RIP, chaque routeur ne tient compte que des routes dont la distance est inf\u00e9rieure \u00e0 16.</p>"},{"location":"terminale/routage/nsi-clemenceau/2_RIP/#delai-de-convergence","title":"D\u00e9lai de convergence","text":"<p>D\u00e9lai de convergence</p> <p>On appelle temps de convergence, le temps au bout duquel tous les routeurs disposent des informations de routage vers toutes les destinations.</p> <p>Il est difficile d'estimer le temps de convergence, qui d\u00e9pend de la taille du r\u00e9seau. La limitation \u00e0 15 sauts permet de maintenir ce temps raisonnable. Cette limitation rend le protocole RIP peu efficace pour les grands r\u00e9seaux.</p> <p>Les champs TTL</p> <p>Les champs TTL : malgr\u00e9 les pr\u00e9cautions \u00e9nonc\u00e9es ci-dessus, il peut arriver que des boucles de routage se forment. L'une des raisons est que tous les r\u00e9seaux n'utilisent pas des protocoles comme RIP ou OSPF qui emp\u00eachent la formation de telles boucles. C'est notamment le cas dans les r\u00e9seaux o\u00f9 les tables sont tenues \u00e0 jour manuellement (on parle de routage statique). Les  paquets qui tournent en rond risquent alors de saturer le r\u00e9seau.</p> <p>Pour d\u00e9tecter cela, les protocoles de communication, comme IP ont pr\u00e9vu un champ nomm\u00e9 TTL : Time to Live qui indique combien de routeurs un paquet peut encore traverser. Chaque routeur qui re\u00e7oit un paquet d\u00e9cr\u00e9mente la valeur de TTL, et si  cette valeur tombe \u00e0 0, le paquet est tout simplement d\u00e9truit.</p>"},{"location":"terminale/routage/nsi-clemenceau/2_RIP/#iv-exercice","title":"IV. Exercice","text":"\u270f\ufe0f Protocole RIP : \u00e0 vous de jouer  <p>On donne le sch\u00e9ma suivant : Source : J.L. Thirot</p> <p>Vous pouvez t\u00e9l\u00e9charger l'image de ce r\u00e9seau ici : \"Clic droit\", puis \"Enregistrer la cible du lien sous\" </p> <ol> <li>\ud83d\ude22Le routeur R4 est tomb\u00e9 en panne . Le r\u00e9seau 172.16.3.0/24 reste quand m\u00eame connect\u00e9 \u00e0 R3, et le r\u00e9seau 172.16.4.0/24 reste aussi connect\u00e9 \u00e0 R5. Gr\u00e2ce au protocole RIP, les tables de routages se mettent \u00e0 jour. Donner la table de routage du routeur R3, une fois que tout le processus est stabilis\u00e9.  </li> </ol> Solution : \u00e0 ne regarder qu'apr\u00e8s avoir r\u00e9ellement \u00e9crit votre table de routage ... <p>Routeur R3 : </p> destination passerelle interface Nb sauts 192.168.1.0/24 172.16.0.1 eth0 2 172.16.0.0/24 eth0 1 172.16.1.0/24 eth1 1 172.16.6.0/24 eth2 1 <p></p> 172.16.3.0/24 eth3 1 <p></p> 172.16.2.0/24 172.16.1.2 eth1 2 <p></p> 172.16.4.0/24 172.16.6.5 eth2 2 <p></p> 172.16.5.0/24 172.16.6.5 eth2 2 192.168.2.0/24 172.16.6.5 eth2 3 172.16.7.0/24 172.16.6.5 eth3 16 <p>Il y a une autre possibilit\u00e9 de r\u00e9ponse pour la destination 172.16.2.0/24 : </p> destination passerelle interface Nb sauts 172.16.2.0/24 172.16.6.5 eth2 2 <ol> <li>\ud83d\ude00\ud83d\ude22 Le routeur R4 est r\u00e9par\u00e9, mais maintenant c'est la liaison reliant R3 \u00e0 R4 qui a \u00e9t\u00e9 rompue : le c\u00e2ble eth3 sortant de R3 a \u00e9t\u00e9 coup\u00e9 pour une       raison inconnue. Que faut-il changer, une fois tout le processus du protocole RIP stabilis\u00e9, \u00e0 la table de routage de R3 ?</li> </ol> Solution <p>Il faut modifier les deux lignes pour les destinations 172.16.3.0/24 et 172.16.7.0/24</p> <p></p> destination passerelle interface Nb sauts 172.16.3.0/24 172.16.6.5  eth2 3 172.16.7.0/24 172.16.6.5  eth2 3"},{"location":"terminale/routage/nsi-clemenceau/2_RIP/#v-autre-representation-des-reseaux","title":"V. Autre repr\u00e9sentation des r\u00e9seaux","text":"<p>\ud83c\udf35\ud83c\udf35Dans la pratique, les r\u00e9seaux entre les routeurs ne sont pas repr\u00e9sent\u00e9s.</p> <p>On aurait pu tout simplement vous donner la repr\u00e9sentation ci-dessous, cela revenait au m\u00eame.</p> <p></p>"},{"location":"terminale/routage/nsi-clemenceau/3_OSPF/","title":"Protocole OSPF","text":""},{"location":"terminale/routage/nsi-clemenceau/3_OSPF/#i-protocole-ospf-a-etat-de-lien","title":"I. Protocole OSPF \u00e0 \u00e9tat de lien","text":"<p>OSPF</p> <p>OSPF :  Open Shortest Path First</p> <p>Justification</p> <p>Le protocole RIP est bas\u00e9 sur un nombre de sauts. Or, les connexions entre routeurs sont de nature vari\u00e9es : fibre, c\u00e2ble Ethernet, WiFi... avec des performances tout aussi vari\u00e9es. Le plus court chemin d'un routeur \u00e0 un autre n'est donc pas forc\u00e9ment celui qui pr\u00e9sente le plus petit nombre de sauts. De plus nous avons vu que RIP n'est pas adapt\u00e9 aux grands r\u00e9seaux (limitation \u00e0 15 sauts).</p> Note <p>Dans les ann\u00e9es 90, la taille des r\u00e9seaux augmentant, les ing\u00e9nieurs de l'organisme de normalisation international (IETF :  Internet Engineering Task Force) ont d\u00e9velopp\u00e9 un nouveau protocole : OSPF. Ce protocole prend en compte la bande passante des connexions dans le r\u00e9seau.</p> <p>protocoles \u00e0 \u00e9tat de lien</p> <p>Le protocole OSPF (Open Shortest Path First) rentre dans la cat\u00e9gorie des protocoles \u00e0 \u00e9tat de lien.</p> <p>Dans le protocole \u00e0 vecteur de distance que nous venons de voir, on cherche \u00e0 minimiser le nombre de sauts, mais sans aucune garantie que le chemin emprunt\u00e9 soit en r\u00e9alit\u00e9 le plus performant (en termes de d\u00e9bit par exemple). De plus avec RIP, chaque routeur ne conna\u00eet que ses voisins imm\u00e9diats, il n'a donc pas connaissance de l'ensemble de la topologie du r\u00e9seau. Enfin, le protocole RIP est limit\u00e9 aux petits r\u00e9seaux (15 sauts maximum) et est assez gourmand en terme de bande passante puisqu'il n\u00e9cessite l'\u00e9change d'un volume de donn\u00e9es assez important.</p>"},{"location":"terminale/routage/nsi-clemenceau/3_OSPF/#ii-principe-general-de-lalgorithme","title":"II. Principe g\u00e9n\u00e9ral de l'algorithme","text":"<p>Info</p> <p>Le protocole OSPF propose une approche tout \u00e0 fait diff\u00e9rente : au lieu de s'int\u00e9resser au nombre de sauts, on va chercher \u00e0 optimiser en fonction du d\u00e9bit des liaisons emprunt\u00e9es.</p> <p>Pour cela, chaque routeur va devoir conna\u00eetre l'int\u00e9gralit\u00e9 du r\u00e9seau avec le d\u00e9bit associ\u00e9 \u00e0 chaque lien afin d'appliquer un algorithme de recherche de chemin optimal.</p> <p>Info</p> <p>On peut faire un parall\u00e8le entre le fonctionnement d'OSPF et celui de nos logiciels de guidage par GPS. En effet, dans ce type de logiciels : </p><ul> <li>l'ensemble de la carte de France et de ses routes est connue du logiciel</li> <li>le type de chaque route est renseign\u00e9 ainsi que la vitesse autoris\u00e9e sur la route</li> <li>le calcul d'itin\u00e9raire va permettre le calcul d'un chemin permettant par exemple d'emprunter les routes sur lesquelles la vitesse est la plus importante (temps le plus court).</li> </ul> <p>Cette vid\u00e9o de Claude Chaudet (Institut Mines-T\u00e9l\u00e9com)  expose le principe du routage \u00e0 \u00e9tat de lien.</p> <p></p> <p>Cette autre vid\u00e9o de Claude Chaudet (Institut Mines-T\u00e9l\u00e9com)  expose le principe du protocole OSPF.</p> <p>\ud83c\udf10  Principe du protocole OSPF</p>"},{"location":"terminale/routage/nsi-clemenceau/3_OSPF/#iii-decouverte-de-la-topologie-du-reseau","title":"III. D\u00e9couverte de la topologie du r\u00e9seau","text":"<p>OSPF a besoin de conna\u00eetre la topologie du r\u00e9seau ainsi que la qualit\u00e9 de chaque lien en terme de bande passante. Pour cela, chaque routeur va fabriquer une table de voisinage : il s'agit d'un tableau permettant d'identifier tous les routeurs qui lui sont connect\u00e9s ainsi que le d\u00e9bit associ\u00e9 \u00e0 chaque lien. Pour obtenir ces informations, le routeur \u00e9change p\u00e9riodiquement des messages (appel\u00e9s messages hello) avec ses voisins. </p> Voisin  qualit\u00e9 du lien   B   1 Gb/s    C   10 Gb/s  <p>Une fois tous ses voisins directs identifi\u00e9s, le routeur va envoyer sa table de voisinage \u00e0 tous les autres routeurs du r\u00e9seau.  Il va recevoir des autres routeurs leurs tables de voisinages et ainsi pouvoir constituer une cartographie compl\u00e8te du r\u00e9seau.</p> <p>Co\u00fbt</p> <p>Le co\u00fbt est li\u00e9 au d\u00e9bit de la liaison entre les routeurs, il est inversement proportionnel au d\u00e9bit et souvent donn\u00e9 par la relation : \\(\\text{co\u00fbt}=\\dfrac{10^8}{\\text{d\u00e9bit}}\\) o\u00f9 \\(10^8\\) est la valeur de r\u00e9f\u00e9rence correspondant au d\u00e9bit maximum de 100 Mbps et o\u00f9 le d\u00e9bit est exprim\u00e9 en bits par secondes.</p> <p>\ud83d\udc49 Actuellement les liaisons FTTH ont un d\u00e9bit maximum de 10 Gbps. La valeur de r\u00e9f\u00e9rence peut donc \u00eatre \u00e9gale \u00e0 10 Gbps (\\(10^{10}\\) bps). Le co\u00fbt peut donc \u00eatre donn\u00e9 par : \\(\\text{co\u00fbt}=\\dfrac{10^{10}}{\\text{d\u00e9bit}}\\) o\u00f9 le d\u00e9bit est exprim\u00e9 en bits par secondes.</p> <p>Si la route poss\u00e8de plusieurs liaisons, le co\u00fbt total de la route est la somme des co\u00fbts des liaisons.</p> <p>\ud83d\udc49 Avec le protocole  OSPF les co\u00fbts inf\u00e9rieurs \u00e0 1 sont ramen\u00e9s \u00e0 1.</p> <p>\ud83d\udc49 Dans la pratique, se conformer \u00e0 l'\u00e9nonc\u00e9 du sujet ...</p> <p>Unit\u00e9s utilis\u00e9es</p> <p>1 Mb/s = \\(10^6\\) b/s  (1 m\u00e9ga)</p> <p>1 Gb/s = \\(10^9\\) b/s (1 giga)</p> <p>Exemples de d\u00e9bits  </p> Technologie Bande passante descendante Bande passante montante Modem 56 kbps 48 kbps Bluetooth 3 Mbps 3 Mbps Ethernet 10 Mbps 10 Mbps WiFi 11 Mbps 10 Mbps ADSL 13 Mbps 1 Mbps 4G 100 Mbps 50 Mbps Satellite 50 Mbps 1 Mbps Fast Ethernet 100 Mbps 100 Mbps 5G 1 Gbps 300 Mbps FTTH (fibre) 10 Gbps 10 Gbps <p>Ecritures des unit\u00e9s utilis\u00e9es</p> <p>\ud83d\udc49 L'unit\u00e9 utilis\u00e9e pour le d\u00e9bit est le bit par seconde.  </p> <p>Vous rencontrerez trois \u00e9critures diff\u00e9rentes qui signifient la m\u00eame chose :  </p><ul> <li>b/s </li> <li> \\(\\text{b}.\\text{s}^{-1}\\)</li> <li> bps</li> </ul> QCM puissances - 1 <p>\\(10^0=\\)</p> Cocher la ou les affirmations correctesSolution <ul> <li>[ ] 0</li> <li>[ ] 1</li> <li>[ ] 10</li> <li>[ ] Autre r\u00e9ponse</li> </ul> <ul> <li> </li> <li> A savoir : \\(a^0=1\\)</li> <li> </li> <li> </li> </ul> QCM puissances - 2 <p>\\(\\dfrac{10^8}{10^6}=\\)</p> Cocher la ou les affirmations correctesSolution <ul> <li>[ ] 2</li> <li>[ ] 100</li> <li>[ ] 0.01</li> <li>[ ] Autre r\u00e9ponse</li> </ul> <ul> <li> </li> <li> \\(\\dfrac{10^8}{10^6}=10^{8-6}=10^{2}=100\\)</li> <li> </li> <li> </li> </ul> QCM puissances - 3 <p>\\(\\dfrac{10^6}{10^8}=\\)</p> Cocher la ou les affirmations correctesSolution <ul> <li>[ ] 2</li> <li>[ ] 100</li> <li>[ ] 0.01</li> <li>[ ] Autre r\u00e9ponse</li> </ul> <ul> <li> </li> <li></li> <li> \\(\\dfrac{10^6}{10^8}=10^{6-8}=10^{-2}=\\dfrac{1}{10^2}=\\dfrac{1}{100}=0.01\\)</li> <li> </li> </ul> QCM puissances - 4 <p>\\(\\dfrac{10^8}{50 \\times 10^6}=\\)</p> Cocher la ou les affirmations correctesSolution <ul> <li>[ ] 2</li> <li>[ ] 0.2</li> <li>[ ] 20</li> <li>[ ] Autre r\u00e9ponse</li> </ul> <ul> <li> \\(\\dfrac{10^8}{50 \\times 10^6}=\\dfrac{10^2 \\times 10^{6}}{50 \\times 10^6}=\\dfrac{100 \\times 10^{6}}{50 \\times 10^6}= 2\\)</li> <li></li> <li></li> <li> </li> </ul> Unit\u00e9s <p>Donner en bps (\\(\\text{b.s}^{-1}\\))</p> <p>a) 2 kbps</p> <p>b) 50 kbps</p> <p>c) 3 Mbps</p> <p>d) 50 Mbps</p> <p>e) 100 Mbps</p> <p>f) 1 Gbps</p> <p>g) 10 Gbps</p> Solution <p>a) 2 kbps = \\(2 \\times 10^3\\) bps = 2000 bps = 2000 b/s = 2000 \\(\\text{b.s}^{-1}\\)</p> <p>b) 50 kbps = \\(50 \\times 10^3\\) bps = 50000 bps = \\(5 \\times 10^4\\) bps  = \\(5 \\times 10^4\\) \\(\\text{b.s}^{-1}\\)</p> <p>c) 3 Mbps =  \\(3 \\times 10^6\\) bps = \\(3 \\times 10^6\\) b/s = \\(3 \\times 10^6\\) \\(\\text{b.s}^{-1}\\)</p> <p>d) 50 Mbps = \\(50 \\times 10^6\\) bps = \\(50 \\times 10^6\\) b/s =  \\(5 \\times 10^7\\) b/s = \\(5 \\times 10^7\\) \\(\\text{b.s}^{-1}\\)</p> <p>e) 100 Mbps = \\(100 \\times 10^6\\) bps = \\(10^2 \\times 10^6\\) bps = \\(10^8\\) bps = \\(10^8\\) b/s = \\(10^8\\) \\(\\text{b.s}^{-1}\\)</p> <p>f) 1 Gbps = \\(10^9\\) bps = \\(10^9\\) b/s = \\(10^9\\) \\(\\text{b.s}^{-1}\\)</p> <p>g) 10 Gbps = \\(10 \\times 10^{9}\\) bps = \\(10^{10}\\) b/s = \\(10^{10}\\) \\(\\text{b.s}^{-1}\\)</p> Exercice 1 <p>a) Calculer la m\u00e9trique OSPF d'une liaison Fibre avec une valeur de r\u00e9f\u00e9rence de \\(10^8\\) bps </p> <p>b) M\u00eame question avec une valeur de r\u00e9f\u00e9rence de \\(10^{10}\\) bps</p> Solution <p>a) \\(\\dfrac{10^8}{10^{10}}=10^{8-10}=10^{-2}=0.01\\)</p> <p>b) \\(\\dfrac{10^{10}}{10^{10}}=1\\)</p> Exercice 2 <p>a) Calculer la m\u00e9trique OSPF d'une liaison FastEthernet avec une valeur de r\u00e9f\u00e9rence de \\(10^8\\) bps </p> <p>b) M\u00eame question avec une valeur de r\u00e9f\u00e9rence de \\(10^{10}\\) bps</p> Solution <p>100 Mbps = \\(100 \\times 10^6=10^2 \\times 10^6=10^8\\) bps</p> <p>a) \\(\\dfrac{10^8}{10^8}=10^{8-8}=10^0=1\\)</p> <p>b) \\(\\dfrac{10^{10}}{10^8}=10^{10-8}=10^{2}=100\\)</p> Exercice 3 <p>a) Calculer la m\u00e9trique OSPF d'une liaison Ethernet (d\u00e9bit 10 Mbps) avec une valeur de r\u00e9f\u00e9rence de \\(10^8\\) bps </p> <p>b) M\u00eame question avec une valeur de r\u00e9f\u00e9rence de \\(10^{10}\\) bps</p> Solution <p>10 Mbps = \\(10 \\times 10^6=10 \\times 10^6=10^7\\) bps</p> <p>a) \\(\\dfrac{10^8}{10^7}=10^{8-7}=10^1=10\\)</p> <p>b) \\(\\dfrac{10^{10}}{10^7}=10^{10-7}=10^{3}=1000\\)</p> Exercice 4 <p>Que vaut la bande passante d'une liaison dont le co\u00fbt OSPF est de 50 avec une valeur de r\u00e9f\u00e9rence de \\(10^8\\).</p> Solution <p>\\(50 = \\dfrac{10^8}{x} \\Leftrightarrow 50x=10^8 \\Leftrightarrow x= \\dfrac{10^8}{50} = \\dfrac{100 \\times 10^6}{50} = 2 \\times 10^6\\)</p> <p>La bande passante est de 2 Mbps</p>"},{"location":"terminale/routage/nsi-clemenceau/3_OSPF/#iv-exemple","title":"IV. Exemple","text":"<p>Consid\u00e9rons le r\u00e9seau suivant. Apr\u00e8s \u00e9changes de messages hello, la cartographie suivante du r\u00e9seau a \u00e9t\u00e9 constitu\u00e9e :</p> <p></p> <p>Source : Gilles LASSUS</p> <ul> <li>25 Mb/s a un co\u00fbt de \\(\\dfrac{10^8}{25 \\times 10^6} = 4\\). </li> <li>20 Mb/s a un co\u00fbt de \\(\\dfrac{10^8}{20 \\times 10^6} = 5\\).</li> <li>50 Mb/s a un co\u00fbt de \\(\\dfrac{10^8}{50 \\times 10^6 }=2\\). </li> <li>10 Mb/s a un co\u00fbt de \\(\\dfrac{10^8}{10 \\times 10^6 }=10\\). </li> </ul> <p>On obtient donc le r\u00e9seau suivant, o\u00f9 on a not\u00e9 les co\u00fbts sur les ar\u00eates : </p> <p></p> <p>Source : Gilles LASSUS</p> <p>\ud83c\udf35  Le chemin le plus rapide pour aller de l'ordinateur au serveur est donc R1-R2-R4, et non plus R1-R3 comme l'aurait indiqu\u00e9 le protocole RIP.</p>"},{"location":"terminale/routage/nsi-clemenceau/3_OSPF/#v-trouver-le-plus-court-chemin-dans-un-graphe-pondere","title":"V. Trouver le plus court chemin dans un graphe pond\u00e9r\u00e9","text":"<p>L'exemple pr\u00e9c\u00e9dent \u00e9tait tr\u00e8s simple et de solution intuitive. </p> <p>Pour les cas complexes, on peut utiliser l'algorithme de Dijkstra.</p> <p>La ma\u00eetrise de cet algorithme n'est pas au programme de NSI. Si n\u00e9anmoins cela vous int\u00e9resse, vous pouvez regarder cette vid\u00e9o :</p> <p></p> <p></p> <p>\ud83d\udca1 Une autre m\u00e9thode pour justifier du choix d'un chemin par l'algorithme de Dijkstra est de r\u00e9aliser un arbre sur lequel on barre les feuilles au fur et \u00e0 mesure.</p> <p></p> <p>\ud83c\udf35 Comment a-t-on r\u00e9alis\u00e9 cet arbre ? \ud83d\udc49 Un peu comme nous l'avons fait dans le parcours de labyrinthes, nous \u00e9laborons au fur et \u00e0 mesure un arbre avec les choix possibles.  \ud83d\ude02 Evidemment, on ne revient jamais en arri\u00e8re, car cela ne ferait qu'augmenter les co\u00fbts. </p><ul> <li>En partant de A, nous avons deux possibilit\u00e9s : E avec un co\u00fbt de 5 et B avec un co\u00fbt de 10</li> <li>En partant de E, nous avons deux possibilit\u00e9s : B avec un co\u00fbt de 7 et C avec un co\u00fbt de 9 7 &lt; 10 donc on barre le B avec un co\u00fbt de 10</li> <li>En partant de B, nous avons deux possibilit\u00e9s : C avec un co\u00fbt de 8 et D avec un co\u00fbt de 9 8 &lt; 9 donc on barre le C avec un co\u00fbt de 9</li> <li>En partant de C, nous avons deux possibilit\u00e9s : D avec un co\u00fbt de 10 et F avec un co\u00fbt de 11  9 &lt; 10 donc on barre le D avec un co\u00fbt de 10</li> <li>En partant de D, nous avons deux possibilit\u00e9s : F avec un co\u00fbt de 10 et C avec un co\u00fbt de 11 8 &lt; 11 donc on barre le C avec un co\u00fbt de 11 10 &lt; 11 donc on barre le F avec un co\u00fbt de 11</li> <li>En partant de F, nous avons une seule possibilit\u00e9 : C avec un co\u00fbt de 13  8 &lt; 11 donc on barre le C avec un co\u00fbt de 13</li> </ul> .\ud83d\ude0a Il n'y a plus qu'\u00e0 lire le chemin non barr\u00e9 dans l'arbre, qui part de A et arrive en F \ud83d\ude00 On obtient donc comme plus court chemin entre A et F : A - E - B - D - F avec un co\u00fbt total de 10"},{"location":"terminale/routage/nsi-clemenceau/3_OSPF/#vi-conclusion","title":"VI. Conclusion","text":"S'adapter ? <p>OSPF peut s'adapter \u00e0 la qualit\u00e9 des liens mais dans une certaine mesure uniquement : Si un lien \u00e0 10 Gb/s est satur\u00e9, il vaut mieux emprunter un lien \u00e0  1 Gb/s sous utilis\u00e9, mais OSPF n'en a pas connaissance.</p> Meilleur routage ? <p>Il n'y a pas dans l'absolu de meilleur algorithme de routage, tout d\u00e9pend du r\u00e9seau auquel on a affaire. Un protocole sera plus r\u00e9actif face aux changements de topologie mais au prix d'un plus gros volume \u00e9chang\u00e9. Un autre sera plus efficace si les liaisons au sein du r\u00e9seau sont tr\u00e8s h\u00e9t\u00e9rog\u00e8nes.</p> <p>Unix</p> <p>Sous Unix, les commandes <code>route</code> ou <code>iproute</code> permettent d\u2019afficher la table de routage d\u2019une machine. La commande <code>traceroute</code>  permet d\u2019obtenir la liste des machines reliant la machine locale \u00e0 une destination.</p>"},{"location":"terminale/routage/nsi-clemenceau/3_OSPF/#vii-exercices","title":"VII. Exercices","text":""},{"location":"terminale/routage/nsi-clemenceau/3_OSPF/#exercice-1","title":"Exercice 1","text":"Exercice de recherche de plus court chemin <p>Donner le plus court chemin pour aller de E \u00e0 F dans le graphe ci-dessous :</p> <p></p> Solution <p>Avec un arbre par exemple, on voit que le meilleur trajet est  E-D-A-C-B-F.</p>"},{"location":"terminale/routage/nsi-clemenceau/3_OSPF/#exercice-2","title":"Exercice 2","text":"<p>Le client 01 veut communiquer avec le serveur 02.</p> <p></p> <ul> <li>Les liens en vert sont en FastEthernet (100 mbps)</li> <li>Les lien oranges en Ethernet (10 mbps)</li> <li>Les liens rouges sont en 1 mbps</li> </ul> <ol> <li>Faire un graphe de cette situation, avec les co\u00fbts sur les ar\u00eates</li> <li>Donner le chemin le plus court avec le protocole OSPF entre 01 et 02. Quelle est la longueur de ce chemin ? Y'a-t-il plusieurs chemins \u00e9quivalents ?</li> </ol> Solution <p>\\(\\dfrac{10^8}{100 \\times 10^6}=1\\)</p> <p>\\(\\dfrac{10^8}{10 \\times 10^6}=10\\)</p> <p>\\(\\dfrac{10^8}{ 10^6}=100\\)</p> <p>On obtient donc :</p> <p></p> <p>En r\u00e9alisant un arbre, ou le tableau de l'algorithme de Dijkstra, on obtient deux chemins \u00e9quivalents de co\u00fbt total 16 : </p> <p></p> <ul> <li>O1 - R1 - R3 - R7 - R6 - R5 - R9 - O2 </li> <li>O1 - R1 - R3 - R4 - R6 - R5 - R9 - O2</li> </ul>"},{"location":"terminale/routage/nsi-clemenceau/3_OSPF/#exercice-3","title":"Exercice 3","text":"<p>On donne le r\u00e9seau suivant (source : David Roche)</p> <p></p> <ol> <li>En vous basant sur le protocole OSPF (vous mettrez en derni\u00e8re colonne \"m\u00e9trique\", ce qui correspond au co\u00fbt total pour arriver \u00e0 destination), d\u00e9terminez la table de routage du routeur A</li> </ol> <p>On donne les d\u00e9bits suivants :</p> <ul> <li>liaison routeur A - routeur B : **1 Mbps**</li> <li>liaison routeur A - routeur C : **10 Mbps**</li> <li>liaison routeur C - routeur B : **10 Mbps**</li> <li>liaisons dans le r\u00e9seau 172.16.0.0/16 : **1 Mbps**</li> <li>liaisons dans le r\u00e9seau 172.18.0.0/16 : **1 Mbps**</li> <li>liaisons dans le r\u00e9seau 172.17.0.0/16 : **1 Mbps**</li> </ul> Solution <p>Commen\u00e7ons par calculer les co\u00fbts des liaisons</p> <p></p><ul> <li>liaison routeur A - routeur B : 10<sup>8</sup>/10<sup>6</sup> = 100</li> <li>liaison routeur A - routeur C : 10<sup>8</sup>/10<sup>7</sup> = 10</li> <li>liaison routeur C - routeur B : 10<sup>8</sup>/10<sup>7</sup> = 10</li> <li>liaisons dans les r\u00e9seaux 172.16.0.0/13 et 172.18.0.0/16 et 172.17.0.0/16 : 10<sup>8</sup>/10<sup>6</sup> = 100</li> </ul> <p>On obtient donc la table de routage suivante pour le routeur A: </p> destination passerelle interface m\u00e9trique 172.18.0.0/16 eth0 100  192.168.1.0/24 eth1 100  192.168.2.0/24 eth2 10  172.17.0.0/16 192.168.2.2/24 eth2 110  192.168.3.0/24 192.168.2.2/24 eth2 20 172.16.0.0/16 192.168.2.2/24 eth2 120  <p>2.Quels sont les chemins qui seraient emprunt\u00e9s par un paquet pour aller du switch R1 au switch R2 et du switch R1 au switch R3 ?</p> Solution <ul> <li> <p>Pour un paquet de donn\u00e9es allant du switch R1 au switch R2 :  la route privil\u00e9gi\u00e9e sera donc : R1 -&gt; Routeur A -&gt; Routeur C -&gt; R2.  </p> </li> <li> <p>Pour un paquet de donn\u00e9es allant du switch R1 au  switch R3 :  la route privil\u00e9gi\u00e9e sera donc : R1 -&gt; Routeur A -&gt; Routeur C -&gt; Routeur B -&gt; R3.</p> </li> </ul>"},{"location":"terminale/routage/nsi-clemenceau/3_OSPF/#exercice-4","title":"Exercice 4 :","text":"<p>D'apr\u00e8s 2022, M\u00e9tropole, J2, Ex. 3</p> <p>Rappels :</p> <p>Une adresse IPv4 est compos\u00e9e de 4 octets, soit 32 bits. Elle est not\u00e9e <code>a.b.c.d</code>, o\u00f9 <code>a</code>, <code>b</code>, <code>c</code> et <code>d</code> sont les valeurs des 4 octets.</p> <p>La notation <code>a.b.c.d/n</code> signifie que les <code>n</code> premiers bits de l'adresse IP repr\u00e9sentent la partie \u00ab r\u00e9seau \u00bb, les bits qui suivent repr\u00e9sentent la partie \u00ab machine \u00bb.</p> <p>L'adresse IPv4 dont tous les bits de la partie \u00ab machine \u00bb sont \u00e0 0 est appel\u00e9e \u00ab adresse du r\u00e9seau \u00bb.</p> <p>L'adresse IPv4 dont tous les bits de la partie \u00ab machine \u00bb sont \u00e0 1 est appel\u00e9e \u00ab adresse de diffusion \u00bb.</p> <p>On consid\u00e8re le r\u00e9seau repr\u00e9sent\u00e9 sur la ci-dessous :</p> <p> </p> <p>1. On consid\u00e8re la machine d'adresse IPv4 <code>192.168.1.1</code>.</p> <p>1.a. Donner l'adresse du r\u00e9seau sur lequel se trouve cette machine.</p> R\u00e9ponse <p>On lit sur la figure la d\u00e9nomination suivante : <code>192.168.1.0/24</code>. Les 24 premiers bits, trois octets, repr\u00e9sentent l'adresse r\u00e9seau : celle-ci est donc <code>192.168.1.0</code>.</p> <p>1.b. Donner l'adresse de diffusion (broadcast) de ce r\u00e9seau.</p> R\u00e9ponse <p>Les 8 derniers bits, le dernier octet, prennent la valeur <code>1</code>. Donc l'adresse de diffusion est <code>192.168.1.255</code>.</p> <p>1.c. Donner le nombre maximal de machines que l'on peut connecter sur ce r\u00e9seau.</p> R\u00e9ponse <p>On peut connecter 256 - 2 = 254 machines sur ce r\u00e9seau.</p> <p>1.d. On souhaite ajouter une machine sur ce r\u00e9seau, proposer une adresse IPv4 possible pour cette machine.</p> R\u00e9ponse <p>On propose <code>192.168.1.17</code>.</p> <p>2. La machine d'adresse IPv4 <code>192.168.1.1</code> transmet un paquet IPv4 \u00e0 la machine d'adresse IPv4 <code>192.168.4.2</code>.</p> <p>2.a.  Donner toutes les routes pouvant \u00eatre emprunt\u00e9es par ce paquet IPv4, chaque routeur ne pouvant \u00eatre travers\u00e9 qu'une seule fois.</p> R\u00e9ponse <p>Les routes possibles sont :</p> <ul> <li>A \u2192 E \u2192 D</li> <li>A \u2192 E \u2192 C \u2192 F \u2192 D</li> <li>A \u2192 B \u2192 C \u2192 E \u2192 D</li> <li>A \u2192 B \u2192 C \u2192 F \u2192 D</li> <li>A \u2192 C \u2192 E \u2192 D</li> <li>A \u2192 C \u2192 F \u2192 D</li> </ul> <p>2.b. Expliquer l'utilit\u00e9 d'avoir plusieurs routes possibles reliant les r\u00e9seaux <code>192.168.1.0/24</code> et <code>192.168.4.0/24</code>.</p> R\u00e9ponse <p>En cas de panne, on pourra utiliser une autre route.</p> <p>3. Dans cette question, on suppose que le protocole de routage mis en place dans le r\u00e9seau est RIP. Ce protocole consiste \u00e0 minimiser le nombre de sauts.</p> <p>Le sch\u00e9ma du r\u00e9seau est celui de la figure ci-dessus.</p> <p>Les tables de routage utilis\u00e9es sont donn\u00e9es ci-dessous :</p> Routeur ARouteur BRouteur CRouteur DRouteur ERouteur F Destination passe par B ... C ... D E E ... F C Destination passe par A A C C D C E C F C Destination passe par A A B B D E E E F F Destination passe par A E B F C F E E F F Destination passe par A A B C C C D D F C Destination passe par A C B C C C D D E C <p>3.a. Recopier et compl\u00e9ter sur la copie la table de routage du routeur A.</p> R\u00e9ponse <p>Table de routage de A :</p> Destination Passe par B B C C D E E E F C <p>3.b. Un paquet IP doit aller du routeur B au routeur D. En utilisant les tables de routage, donner le parcours emprunt\u00e9 par celui-ci.</p> R\u00e9ponse <p>Le paquet suit le trajet suivant :</p> <ul> <li>B \u2192 C (table de routage de B)</li> <li>C \u2192 E (table de routage de C)</li> <li>E \u2192 D (table de routage de E)</li> </ul> <p>3.c. Les connexions entre les routeurs B-C et A-E \u00e9tant coup\u00e9es, sur la copie, r\u00e9\u00e9crire les tables de routage des routeurs A, B et C.</p> R\u00e9ponse Routeur ARouteur BRouteur C Destination Passe par B B C C D C E C F C Destination Passe par A A C A D A E A F A Destination Passe par A A B A D E E E F F <p>3.d. D\u00e9terminer le nouveau parcours emprunt\u00e9 par le paquet IP pour aller du routeur B au routeur D.</p> R\u00e9ponse <p>Le nouveau parcours est : B \u2192 A \u2192 C \u2192 E \u2192 D.</p> <p>4. Dans cette question, on suppose que le protocole de routage mis en place dans le r\u00e9seau est OSPF. Ce protocole consiste \u00e0 minimiser la somme des co\u00fbts des liaisons emprunt\u00e9es.</p> <p>Le co\u00fbt d'une liaison est d\u00e9fini par la relation \\(\\mathrm{co\u00fbt} = \\frac{10^8}{d}\\) o\u00f9 \\(d\\) repr\u00e9sente le d\u00e9bit en \\(\\mathrm{bit}/\\mathrm{s}\\) et \\(\\mathrm{co\u00fbt}\\) est sans unit\u00e9. Le sch\u00e9ma du r\u00e9seau reste celui du d\u00e9but de l'exercice.</p> <p>4.a. D\u00e9terminer le co\u00fbt des liaisons Ethernet (\\(d = 10^7\\,\\mathrm{bit}/\\mathrm{s}\\)), Fast-Ethernet (\\(d = 10^8\\,\\mathrm{bit}/\\mathrm{s}\\)) et Fibre (\\(d = 10^9\\,\\mathrm{bit}/\\mathrm{s}\\)).</p> R\u00e9ponse <p>Les co\u00fbts sont les suivants :</p> <ul> <li>liaison Ethernet : \\(\\frac{10^8}{10^7}=10\\),</li> <li>liaison Fast-Ethernet : \\(\\frac{10^8}{10^8}=1\\),</li> <li>liaison Fibre : \\(\\frac{10^8}{10^9}=0,1\\)</li> </ul> <p>Attention</p> <p>Dans le protocole OSPF, les co\u00fbts sont normalement des nombres entiers strictement positifs (entre \\(1\\) et \\(65\\,535\\)). On peut donc aussi arrondir par exc\u00e8s le co\u00fbt de la liaison Fibre \u00e0 \\(1\\).</p> <p>4.b. On veut repr\u00e9senter sch\u00e9matiquement le r\u00e9seau de routeurs \u00e0 partir du sch\u00e9ma du r\u00e9seau.</p> <p>Recopier sur la copie le sch\u00e9ma ci-dessous et tracer les liaisons entre les routeurs en y indiquant leur co\u00fbt.</p> <pre><code>graph LR\n    A[(A)] ---  B[(B)]\n    A ---  C[(C)]\n    A ---  E[(E)]\n    B ---  C\n    C ---  E\n    E ---  D[(D)]\n    D ---  F[(F)]\n    C --- F\n    linkStyle 0 stroke-width:0;\n    linkStyle 1 stroke-width:0;\n    linkStyle 2 stroke-width:0;\n    linkStyle 3 stroke-width:0;\n    linkStyle 4 stroke-width:0;\n    linkStyle 5 stroke-width:0;\n    linkStyle 6 stroke-width:0;\n    linkStyle 7 stroke-width:0;</code></pre> R\u00e9ponse Sans arrondiAvec arrondi <p>On conserve ici la valeur de \\(0,1\\) pour le co\u00fbt de la liaison Fibre.</p> <pre><code>graph LR\n    A[(A)] --- |1| B[(B)]\n    A --- |0,1| C[(C)]\n    A --- |1| E[(E)]\n    B --- |10| C\n    C --- |0,1| E\n    E --- |0,1| D[(D)]\n    D --- |0,1| F[(F)]\n    C --- |1| F</code></pre> <p>On arrondit le co\u00fbt de la liaison Fibre \u00e0 \\(1\\).</p> <pre><code>graph LR\n    A[(A)] --- |1| B[(B)]\n    A --- |1| C[(C)]\n    A --- |1| E[(E)]\n    B --- |10| C\n    C --- |1| E\n    E --- |1| D[(D)]\n    D --- |1| F[(F)]\n    C --- |1| F</code></pre> <p>4.c. Un paquet IPv4 doit \u00eatre achemin\u00e9 d'une machine ayant pour adresse IPv4 <code>192.168.2.1</code> \u00e0 une machine ayant pour adresse IPv4 <code>192.168.4.1</code>.</p> <p>\u00c9crire les routes possibles, c'est \u00e0 dire la liste des routeurs travers\u00e9s, et le co\u00fbt de chacune de ces routes, chaque routeur ne pouvant \u00eatre travers\u00e9 qu'une seule fois.</p> R\u00e9ponse Sans arrondiSans arrondi <p>On conserve la valeur de \\(0,1\\) pour le co\u00fbt de la liaison Fibre. On aura donc :</p> Route Co\u00fbt B \u2192 A \u2192 E \u2192 D 2,1 B \u2192 C \u2192 A \u2192 E \u2192 D 11,2 B \u2192  A \u2192  C \u2192  F \u2192  D 2,2 B \u2192  A \u2192  C \u2192  E \u2192  D 1,3 B \u2192  A \u2192  E \u2192  C \u2192  F \u2192  D 3,2 B \u2192  C \u2192  F \u2192  D 11,1 B \u2192  C \u2192  E \u2192  D 10,2 <p>On arrondit le co\u00fbt de la liaison Fibre \u00e0 \\(1\\). On aura donc :</p> Route Co\u00fbt B \u2192 A \u2192 E \u2192 D 3 B \u2192 C \u2192 A \u2192 E \u2192 D 13 B \u2192  A \u2192  C \u2192  F \u2192  D 4 B \u2192  A \u2192  C \u2192  E \u2192  D 4 B \u2192  A \u2192  E \u2192  C \u2192  F \u2192  D 5 B \u2192  C \u2192  F \u2192  D 12 B \u2192  C \u2192  E \u2192  D 12 <p>4.d. Donner, en la justifiant, la route qui sera emprunt\u00e9e par un paquet IPv4 pour aller d'une machine ayant pour adresse IPv4 <code>192.168.2.1</code> \u00e0 une machine ayant pour adresse IPv4 <code>192.168.4.1</code>.</p> R\u00e9ponse <p>On choisit le chemin de co\u00fbt minimal :</p> <ul> <li>si l'on a conserv\u00e9 un co\u00fbt de \\(0,1\\) pour la liaison Fibre, on obtient le chemin B \u2192 A \u2192 C \u2192 E \u2192 D pour un co\u00fbt de \\(1,3\\) ;</li> <li>si l'on arrondit ce co\u00fbt \u00e0 \\(1\\), on obtient le chemin B \u2192 A \u2192 E \u2192 D pour un co\u00fbt de \\(3\\).</li> </ul>"}]}